
ADC_Driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002c60  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000108  00800060  00002c60  00002cd4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00002430  00000000  00000000  00002ddc  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000af5  00000000  00000000  0000520c  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 000001a0  00000000  00000000  00005d01  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 000001f2  00000000  00000000  00005ea1  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000240b  00000000  00000000  00006093  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001386  00000000  00000000  0000849e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000011d6  00000000  00000000  00009824  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001c0  00000000  00000000  0000a9fc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000002f6  00000000  00000000  0000abbc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000096e  00000000  00000000  0000aeb2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000b820  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 e7 15 	jmp	0x2bce	; 0x2bce <__vector_1>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e0 e6       	ldi	r30, 0x60	; 96
      68:	fc e2       	ldi	r31, 0x2C	; 44
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 36       	cpi	r26, 0x68	; 104
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 36 15 	call	0x2a6c	; 0x2a6c <main>
      7a:	0c 94 2e 16 	jmp	0x2c5c	; 0x2c5c <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 ed 03 	call	0x7da	; 0x7da <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 4d 04 	call	0x89a	; 0x89a <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 4d 04 	call	0x89a	; 0x89a <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 f7 15 	jmp	0x2bee	; 0x2bee <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 13 16 	jmp	0x2c26	; 0x2c26 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 03 16 	jmp	0x2c06	; 0x2c06 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 69 05 	call	0xad2	; 0xad2 <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 1f 16 	jmp	0x2c3e	; 0x2c3e <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 03 16 	jmp	0x2c06	; 0x2c06 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 69 05 	call	0xad2	; 0xad2 <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 1f 16 	jmp	0x2c3e	; 0x2c3e <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 f7 15 	jmp	0x2bee	; 0x2bee <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 69 05 	call	0xad2	; 0xad2 <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 13 16 	jmp	0x2c26	; 0x2c26 <__epilogue_restores__>

00000622 <__divsf3>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 ff 15 	jmp	0x2bfe	; 0x2bfe <__prologue_saves__+0x10>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	b9 e0       	ldi	r27, 0x09	; 9
     640:	eb 2e       	mov	r14, r27
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__unpack_f>
     662:	29 85       	ldd	r18, Y+9	; 0x09
     664:	22 30       	cpi	r18, 0x02	; 2
     666:	08 f4       	brcc	.+2      	; 0x66a <__divsf3+0x48>
     668:	7e c0       	rjmp	.+252    	; 0x766 <__divsf3+0x144>
     66a:	39 89       	ldd	r19, Y+17	; 0x11
     66c:	32 30       	cpi	r19, 0x02	; 2
     66e:	10 f4       	brcc	.+4      	; 0x674 <__divsf3+0x52>
     670:	b8 01       	movw	r22, r16
     672:	7c c0       	rjmp	.+248    	; 0x76c <__divsf3+0x14a>
     674:	8a 85       	ldd	r24, Y+10	; 0x0a
     676:	9a 89       	ldd	r25, Y+18	; 0x12
     678:	89 27       	eor	r24, r25
     67a:	8a 87       	std	Y+10, r24	; 0x0a
     67c:	24 30       	cpi	r18, 0x04	; 4
     67e:	11 f0       	breq	.+4      	; 0x684 <__divsf3+0x62>
     680:	22 30       	cpi	r18, 0x02	; 2
     682:	31 f4       	brne	.+12     	; 0x690 <__divsf3+0x6e>
     684:	23 17       	cp	r18, r19
     686:	09 f0       	breq	.+2      	; 0x68a <__divsf3+0x68>
     688:	6e c0       	rjmp	.+220    	; 0x766 <__divsf3+0x144>
     68a:	60 e6       	ldi	r22, 0x60	; 96
     68c:	70 e0       	ldi	r23, 0x00	; 0
     68e:	6e c0       	rjmp	.+220    	; 0x76c <__divsf3+0x14a>
     690:	34 30       	cpi	r19, 0x04	; 4
     692:	39 f4       	brne	.+14     	; 0x6a2 <__divsf3+0x80>
     694:	1d 86       	std	Y+13, r1	; 0x0d
     696:	1e 86       	std	Y+14, r1	; 0x0e
     698:	1f 86       	std	Y+15, r1	; 0x0f
     69a:	18 8a       	std	Y+16, r1	; 0x10
     69c:	1c 86       	std	Y+12, r1	; 0x0c
     69e:	1b 86       	std	Y+11, r1	; 0x0b
     6a0:	04 c0       	rjmp	.+8      	; 0x6aa <__divsf3+0x88>
     6a2:	32 30       	cpi	r19, 0x02	; 2
     6a4:	21 f4       	brne	.+8      	; 0x6ae <__divsf3+0x8c>
     6a6:	84 e0       	ldi	r24, 0x04	; 4
     6a8:	89 87       	std	Y+9, r24	; 0x09
     6aa:	b7 01       	movw	r22, r14
     6ac:	5f c0       	rjmp	.+190    	; 0x76c <__divsf3+0x14a>
     6ae:	2b 85       	ldd	r18, Y+11	; 0x0b
     6b0:	3c 85       	ldd	r19, Y+12	; 0x0c
     6b2:	8b 89       	ldd	r24, Y+19	; 0x13
     6b4:	9c 89       	ldd	r25, Y+20	; 0x14
     6b6:	28 1b       	sub	r18, r24
     6b8:	39 0b       	sbc	r19, r25
     6ba:	3c 87       	std	Y+12, r19	; 0x0c
     6bc:	2b 87       	std	Y+11, r18	; 0x0b
     6be:	ed 84       	ldd	r14, Y+13	; 0x0d
     6c0:	fe 84       	ldd	r15, Y+14	; 0x0e
     6c2:	0f 85       	ldd	r16, Y+15	; 0x0f
     6c4:	18 89       	ldd	r17, Y+16	; 0x10
     6c6:	ad 88       	ldd	r10, Y+21	; 0x15
     6c8:	be 88       	ldd	r11, Y+22	; 0x16
     6ca:	cf 88       	ldd	r12, Y+23	; 0x17
     6cc:	d8 8c       	ldd	r13, Y+24	; 0x18
     6ce:	ea 14       	cp	r14, r10
     6d0:	fb 04       	cpc	r15, r11
     6d2:	0c 05       	cpc	r16, r12
     6d4:	1d 05       	cpc	r17, r13
     6d6:	40 f4       	brcc	.+16     	; 0x6e8 <__divsf3+0xc6>
     6d8:	ee 0c       	add	r14, r14
     6da:	ff 1c       	adc	r15, r15
     6dc:	00 1f       	adc	r16, r16
     6de:	11 1f       	adc	r17, r17
     6e0:	21 50       	subi	r18, 0x01	; 1
     6e2:	30 40       	sbci	r19, 0x00	; 0
     6e4:	3c 87       	std	Y+12, r19	; 0x0c
     6e6:	2b 87       	std	Y+11, r18	; 0x0b
     6e8:	20 e0       	ldi	r18, 0x00	; 0
     6ea:	30 e0       	ldi	r19, 0x00	; 0
     6ec:	40 e0       	ldi	r20, 0x00	; 0
     6ee:	50 e0       	ldi	r21, 0x00	; 0
     6f0:	80 e0       	ldi	r24, 0x00	; 0
     6f2:	90 e0       	ldi	r25, 0x00	; 0
     6f4:	a0 e0       	ldi	r26, 0x00	; 0
     6f6:	b0 e4       	ldi	r27, 0x40	; 64
     6f8:	60 e0       	ldi	r22, 0x00	; 0
     6fa:	70 e0       	ldi	r23, 0x00	; 0
     6fc:	ea 14       	cp	r14, r10
     6fe:	fb 04       	cpc	r15, r11
     700:	0c 05       	cpc	r16, r12
     702:	1d 05       	cpc	r17, r13
     704:	40 f0       	brcs	.+16     	; 0x716 <__divsf3+0xf4>
     706:	28 2b       	or	r18, r24
     708:	39 2b       	or	r19, r25
     70a:	4a 2b       	or	r20, r26
     70c:	5b 2b       	or	r21, r27
     70e:	ea 18       	sub	r14, r10
     710:	fb 08       	sbc	r15, r11
     712:	0c 09       	sbc	r16, r12
     714:	1d 09       	sbc	r17, r13
     716:	b6 95       	lsr	r27
     718:	a7 95       	ror	r26
     71a:	97 95       	ror	r25
     71c:	87 95       	ror	r24
     71e:	ee 0c       	add	r14, r14
     720:	ff 1c       	adc	r15, r15
     722:	00 1f       	adc	r16, r16
     724:	11 1f       	adc	r17, r17
     726:	6f 5f       	subi	r22, 0xFF	; 255
     728:	7f 4f       	sbci	r23, 0xFF	; 255
     72a:	6f 31       	cpi	r22, 0x1F	; 31
     72c:	71 05       	cpc	r23, r1
     72e:	31 f7       	brne	.-52     	; 0x6fc <__divsf3+0xda>
     730:	da 01       	movw	r26, r20
     732:	c9 01       	movw	r24, r18
     734:	8f 77       	andi	r24, 0x7F	; 127
     736:	90 70       	andi	r25, 0x00	; 0
     738:	a0 70       	andi	r26, 0x00	; 0
     73a:	b0 70       	andi	r27, 0x00	; 0
     73c:	80 34       	cpi	r24, 0x40	; 64
     73e:	91 05       	cpc	r25, r1
     740:	a1 05       	cpc	r26, r1
     742:	b1 05       	cpc	r27, r1
     744:	61 f4       	brne	.+24     	; 0x75e <__divsf3+0x13c>
     746:	27 fd       	sbrc	r18, 7
     748:	0a c0       	rjmp	.+20     	; 0x75e <__divsf3+0x13c>
     74a:	e1 14       	cp	r14, r1
     74c:	f1 04       	cpc	r15, r1
     74e:	01 05       	cpc	r16, r1
     750:	11 05       	cpc	r17, r1
     752:	29 f0       	breq	.+10     	; 0x75e <__divsf3+0x13c>
     754:	20 5c       	subi	r18, 0xC0	; 192
     756:	3f 4f       	sbci	r19, 0xFF	; 255
     758:	4f 4f       	sbci	r20, 0xFF	; 255
     75a:	5f 4f       	sbci	r21, 0xFF	; 255
     75c:	20 78       	andi	r18, 0x80	; 128
     75e:	2d 87       	std	Y+13, r18	; 0x0d
     760:	3e 87       	std	Y+14, r19	; 0x0e
     762:	4f 87       	std	Y+15, r20	; 0x0f
     764:	58 8b       	std	Y+16, r21	; 0x10
     766:	be 01       	movw	r22, r28
     768:	67 5f       	subi	r22, 0xF7	; 247
     76a:	7f 4f       	sbci	r23, 0xFF	; 255
     76c:	cb 01       	movw	r24, r22
     76e:	0e 94 69 05 	call	0xad2	; 0xad2 <__pack_f>
     772:	68 96       	adiw	r28, 0x18	; 24
     774:	ea e0       	ldi	r30, 0x0A	; 10
     776:	0c 94 1b 16 	jmp	0x2c36	; 0x2c36 <__epilogue_restores__+0x10>

0000077a <__gtsf2>:
     77a:	a8 e1       	ldi	r26, 0x18	; 24
     77c:	b0 e0       	ldi	r27, 0x00	; 0
     77e:	e3 ec       	ldi	r30, 0xC3	; 195
     780:	f3 e0       	ldi	r31, 0x03	; 3
     782:	0c 94 03 16 	jmp	0x2c06	; 0x2c06 <__prologue_saves__+0x18>
     786:	69 83       	std	Y+1, r22	; 0x01
     788:	7a 83       	std	Y+2, r23	; 0x02
     78a:	8b 83       	std	Y+3, r24	; 0x03
     78c:	9c 83       	std	Y+4, r25	; 0x04
     78e:	2d 83       	std	Y+5, r18	; 0x05
     790:	3e 83       	std	Y+6, r19	; 0x06
     792:	4f 83       	std	Y+7, r20	; 0x07
     794:	58 87       	std	Y+8, r21	; 0x08
     796:	89 e0       	ldi	r24, 0x09	; 9
     798:	e8 2e       	mov	r14, r24
     79a:	f1 2c       	mov	r15, r1
     79c:	ec 0e       	add	r14, r28
     79e:	fd 1e       	adc	r15, r29
     7a0:	ce 01       	movw	r24, r28
     7a2:	01 96       	adiw	r24, 0x01	; 1
     7a4:	b7 01       	movw	r22, r14
     7a6:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__unpack_f>
     7aa:	8e 01       	movw	r16, r28
     7ac:	0f 5e       	subi	r16, 0xEF	; 239
     7ae:	1f 4f       	sbci	r17, 0xFF	; 255
     7b0:	ce 01       	movw	r24, r28
     7b2:	05 96       	adiw	r24, 0x05	; 5
     7b4:	b8 01       	movw	r22, r16
     7b6:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__unpack_f>
     7ba:	89 85       	ldd	r24, Y+9	; 0x09
     7bc:	82 30       	cpi	r24, 0x02	; 2
     7be:	40 f0       	brcs	.+16     	; 0x7d0 <__gtsf2+0x56>
     7c0:	89 89       	ldd	r24, Y+17	; 0x11
     7c2:	82 30       	cpi	r24, 0x02	; 2
     7c4:	28 f0       	brcs	.+10     	; 0x7d0 <__gtsf2+0x56>
     7c6:	c7 01       	movw	r24, r14
     7c8:	b8 01       	movw	r22, r16
     7ca:	0e 94 b6 06 	call	0xd6c	; 0xd6c <__fpcmp_parts_f>
     7ce:	01 c0       	rjmp	.+2      	; 0x7d2 <__gtsf2+0x58>
     7d0:	8f ef       	ldi	r24, 0xFF	; 255
     7d2:	68 96       	adiw	r28, 0x18	; 24
     7d4:	e6 e0       	ldi	r30, 0x06	; 6
     7d6:	0c 94 1f 16 	jmp	0x2c3e	; 0x2c3e <__epilogue_restores__+0x18>

000007da <__gesf2>:
     7da:	a8 e1       	ldi	r26, 0x18	; 24
     7dc:	b0 e0       	ldi	r27, 0x00	; 0
     7de:	e3 ef       	ldi	r30, 0xF3	; 243
     7e0:	f3 e0       	ldi	r31, 0x03	; 3
     7e2:	0c 94 03 16 	jmp	0x2c06	; 0x2c06 <__prologue_saves__+0x18>
     7e6:	69 83       	std	Y+1, r22	; 0x01
     7e8:	7a 83       	std	Y+2, r23	; 0x02
     7ea:	8b 83       	std	Y+3, r24	; 0x03
     7ec:	9c 83       	std	Y+4, r25	; 0x04
     7ee:	2d 83       	std	Y+5, r18	; 0x05
     7f0:	3e 83       	std	Y+6, r19	; 0x06
     7f2:	4f 83       	std	Y+7, r20	; 0x07
     7f4:	58 87       	std	Y+8, r21	; 0x08
     7f6:	89 e0       	ldi	r24, 0x09	; 9
     7f8:	e8 2e       	mov	r14, r24
     7fa:	f1 2c       	mov	r15, r1
     7fc:	ec 0e       	add	r14, r28
     7fe:	fd 1e       	adc	r15, r29
     800:	ce 01       	movw	r24, r28
     802:	01 96       	adiw	r24, 0x01	; 1
     804:	b7 01       	movw	r22, r14
     806:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__unpack_f>
     80a:	8e 01       	movw	r16, r28
     80c:	0f 5e       	subi	r16, 0xEF	; 239
     80e:	1f 4f       	sbci	r17, 0xFF	; 255
     810:	ce 01       	movw	r24, r28
     812:	05 96       	adiw	r24, 0x05	; 5
     814:	b8 01       	movw	r22, r16
     816:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__unpack_f>
     81a:	89 85       	ldd	r24, Y+9	; 0x09
     81c:	82 30       	cpi	r24, 0x02	; 2
     81e:	40 f0       	brcs	.+16     	; 0x830 <__gesf2+0x56>
     820:	89 89       	ldd	r24, Y+17	; 0x11
     822:	82 30       	cpi	r24, 0x02	; 2
     824:	28 f0       	brcs	.+10     	; 0x830 <__gesf2+0x56>
     826:	c7 01       	movw	r24, r14
     828:	b8 01       	movw	r22, r16
     82a:	0e 94 b6 06 	call	0xd6c	; 0xd6c <__fpcmp_parts_f>
     82e:	01 c0       	rjmp	.+2      	; 0x832 <__gesf2+0x58>
     830:	8f ef       	ldi	r24, 0xFF	; 255
     832:	68 96       	adiw	r28, 0x18	; 24
     834:	e6 e0       	ldi	r30, 0x06	; 6
     836:	0c 94 1f 16 	jmp	0x2c3e	; 0x2c3e <__epilogue_restores__+0x18>

0000083a <__ltsf2>:
     83a:	a8 e1       	ldi	r26, 0x18	; 24
     83c:	b0 e0       	ldi	r27, 0x00	; 0
     83e:	e3 e2       	ldi	r30, 0x23	; 35
     840:	f4 e0       	ldi	r31, 0x04	; 4
     842:	0c 94 03 16 	jmp	0x2c06	; 0x2c06 <__prologue_saves__+0x18>
     846:	69 83       	std	Y+1, r22	; 0x01
     848:	7a 83       	std	Y+2, r23	; 0x02
     84a:	8b 83       	std	Y+3, r24	; 0x03
     84c:	9c 83       	std	Y+4, r25	; 0x04
     84e:	2d 83       	std	Y+5, r18	; 0x05
     850:	3e 83       	std	Y+6, r19	; 0x06
     852:	4f 83       	std	Y+7, r20	; 0x07
     854:	58 87       	std	Y+8, r21	; 0x08
     856:	89 e0       	ldi	r24, 0x09	; 9
     858:	e8 2e       	mov	r14, r24
     85a:	f1 2c       	mov	r15, r1
     85c:	ec 0e       	add	r14, r28
     85e:	fd 1e       	adc	r15, r29
     860:	ce 01       	movw	r24, r28
     862:	01 96       	adiw	r24, 0x01	; 1
     864:	b7 01       	movw	r22, r14
     866:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__unpack_f>
     86a:	8e 01       	movw	r16, r28
     86c:	0f 5e       	subi	r16, 0xEF	; 239
     86e:	1f 4f       	sbci	r17, 0xFF	; 255
     870:	ce 01       	movw	r24, r28
     872:	05 96       	adiw	r24, 0x05	; 5
     874:	b8 01       	movw	r22, r16
     876:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__unpack_f>
     87a:	89 85       	ldd	r24, Y+9	; 0x09
     87c:	82 30       	cpi	r24, 0x02	; 2
     87e:	40 f0       	brcs	.+16     	; 0x890 <__stack+0x31>
     880:	89 89       	ldd	r24, Y+17	; 0x11
     882:	82 30       	cpi	r24, 0x02	; 2
     884:	28 f0       	brcs	.+10     	; 0x890 <__stack+0x31>
     886:	c7 01       	movw	r24, r14
     888:	b8 01       	movw	r22, r16
     88a:	0e 94 b6 06 	call	0xd6c	; 0xd6c <__fpcmp_parts_f>
     88e:	01 c0       	rjmp	.+2      	; 0x892 <__stack+0x33>
     890:	81 e0       	ldi	r24, 0x01	; 1
     892:	68 96       	adiw	r28, 0x18	; 24
     894:	e6 e0       	ldi	r30, 0x06	; 6
     896:	0c 94 1f 16 	jmp	0x2c3e	; 0x2c3e <__epilogue_restores__+0x18>

0000089a <__fixsfsi>:
     89a:	ac e0       	ldi	r26, 0x0C	; 12
     89c:	b0 e0       	ldi	r27, 0x00	; 0
     89e:	e3 e5       	ldi	r30, 0x53	; 83
     8a0:	f4 e0       	ldi	r31, 0x04	; 4
     8a2:	0c 94 07 16 	jmp	0x2c0e	; 0x2c0e <__prologue_saves__+0x20>
     8a6:	69 83       	std	Y+1, r22	; 0x01
     8a8:	7a 83       	std	Y+2, r23	; 0x02
     8aa:	8b 83       	std	Y+3, r24	; 0x03
     8ac:	9c 83       	std	Y+4, r25	; 0x04
     8ae:	ce 01       	movw	r24, r28
     8b0:	01 96       	adiw	r24, 0x01	; 1
     8b2:	be 01       	movw	r22, r28
     8b4:	6b 5f       	subi	r22, 0xFB	; 251
     8b6:	7f 4f       	sbci	r23, 0xFF	; 255
     8b8:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__unpack_f>
     8bc:	8d 81       	ldd	r24, Y+5	; 0x05
     8be:	82 30       	cpi	r24, 0x02	; 2
     8c0:	61 f1       	breq	.+88     	; 0x91a <__fixsfsi+0x80>
     8c2:	82 30       	cpi	r24, 0x02	; 2
     8c4:	50 f1       	brcs	.+84     	; 0x91a <__fixsfsi+0x80>
     8c6:	84 30       	cpi	r24, 0x04	; 4
     8c8:	21 f4       	brne	.+8      	; 0x8d2 <__fixsfsi+0x38>
     8ca:	8e 81       	ldd	r24, Y+6	; 0x06
     8cc:	88 23       	and	r24, r24
     8ce:	51 f1       	breq	.+84     	; 0x924 <__fixsfsi+0x8a>
     8d0:	2e c0       	rjmp	.+92     	; 0x92e <__fixsfsi+0x94>
     8d2:	2f 81       	ldd	r18, Y+7	; 0x07
     8d4:	38 85       	ldd	r19, Y+8	; 0x08
     8d6:	37 fd       	sbrc	r19, 7
     8d8:	20 c0       	rjmp	.+64     	; 0x91a <__fixsfsi+0x80>
     8da:	6e 81       	ldd	r22, Y+6	; 0x06
     8dc:	2f 31       	cpi	r18, 0x1F	; 31
     8de:	31 05       	cpc	r19, r1
     8e0:	1c f0       	brlt	.+6      	; 0x8e8 <__fixsfsi+0x4e>
     8e2:	66 23       	and	r22, r22
     8e4:	f9 f0       	breq	.+62     	; 0x924 <__fixsfsi+0x8a>
     8e6:	23 c0       	rjmp	.+70     	; 0x92e <__fixsfsi+0x94>
     8e8:	8e e1       	ldi	r24, 0x1E	; 30
     8ea:	90 e0       	ldi	r25, 0x00	; 0
     8ec:	82 1b       	sub	r24, r18
     8ee:	93 0b       	sbc	r25, r19
     8f0:	29 85       	ldd	r18, Y+9	; 0x09
     8f2:	3a 85       	ldd	r19, Y+10	; 0x0a
     8f4:	4b 85       	ldd	r20, Y+11	; 0x0b
     8f6:	5c 85       	ldd	r21, Y+12	; 0x0c
     8f8:	04 c0       	rjmp	.+8      	; 0x902 <__fixsfsi+0x68>
     8fa:	56 95       	lsr	r21
     8fc:	47 95       	ror	r20
     8fe:	37 95       	ror	r19
     900:	27 95       	ror	r18
     902:	8a 95       	dec	r24
     904:	d2 f7       	brpl	.-12     	; 0x8fa <__fixsfsi+0x60>
     906:	66 23       	and	r22, r22
     908:	b1 f0       	breq	.+44     	; 0x936 <__fixsfsi+0x9c>
     90a:	50 95       	com	r21
     90c:	40 95       	com	r20
     90e:	30 95       	com	r19
     910:	21 95       	neg	r18
     912:	3f 4f       	sbci	r19, 0xFF	; 255
     914:	4f 4f       	sbci	r20, 0xFF	; 255
     916:	5f 4f       	sbci	r21, 0xFF	; 255
     918:	0e c0       	rjmp	.+28     	; 0x936 <__fixsfsi+0x9c>
     91a:	20 e0       	ldi	r18, 0x00	; 0
     91c:	30 e0       	ldi	r19, 0x00	; 0
     91e:	40 e0       	ldi	r20, 0x00	; 0
     920:	50 e0       	ldi	r21, 0x00	; 0
     922:	09 c0       	rjmp	.+18     	; 0x936 <__fixsfsi+0x9c>
     924:	2f ef       	ldi	r18, 0xFF	; 255
     926:	3f ef       	ldi	r19, 0xFF	; 255
     928:	4f ef       	ldi	r20, 0xFF	; 255
     92a:	5f e7       	ldi	r21, 0x7F	; 127
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__fixsfsi+0x9c>
     92e:	20 e0       	ldi	r18, 0x00	; 0
     930:	30 e0       	ldi	r19, 0x00	; 0
     932:	40 e0       	ldi	r20, 0x00	; 0
     934:	50 e8       	ldi	r21, 0x80	; 128
     936:	b9 01       	movw	r22, r18
     938:	ca 01       	movw	r24, r20
     93a:	2c 96       	adiw	r28, 0x0c	; 12
     93c:	e2 e0       	ldi	r30, 0x02	; 2
     93e:	0c 94 23 16 	jmp	0x2c46	; 0x2c46 <__epilogue_restores__+0x20>

00000942 <__floatunsisf>:
     942:	a8 e0       	ldi	r26, 0x08	; 8
     944:	b0 e0       	ldi	r27, 0x00	; 0
     946:	e7 ea       	ldi	r30, 0xA7	; 167
     948:	f4 e0       	ldi	r31, 0x04	; 4
     94a:	0c 94 ff 15 	jmp	0x2bfe	; 0x2bfe <__prologue_saves__+0x10>
     94e:	7b 01       	movw	r14, r22
     950:	8c 01       	movw	r16, r24
     952:	61 15       	cp	r22, r1
     954:	71 05       	cpc	r23, r1
     956:	81 05       	cpc	r24, r1
     958:	91 05       	cpc	r25, r1
     95a:	19 f4       	brne	.+6      	; 0x962 <__floatunsisf+0x20>
     95c:	82 e0       	ldi	r24, 0x02	; 2
     95e:	89 83       	std	Y+1, r24	; 0x01
     960:	60 c0       	rjmp	.+192    	; 0xa22 <__floatunsisf+0xe0>
     962:	83 e0       	ldi	r24, 0x03	; 3
     964:	89 83       	std	Y+1, r24	; 0x01
     966:	8e e1       	ldi	r24, 0x1E	; 30
     968:	c8 2e       	mov	r12, r24
     96a:	d1 2c       	mov	r13, r1
     96c:	dc 82       	std	Y+4, r13	; 0x04
     96e:	cb 82       	std	Y+3, r12	; 0x03
     970:	ed 82       	std	Y+5, r14	; 0x05
     972:	fe 82       	std	Y+6, r15	; 0x06
     974:	0f 83       	std	Y+7, r16	; 0x07
     976:	18 87       	std	Y+8, r17	; 0x08
     978:	c8 01       	movw	r24, r16
     97a:	b7 01       	movw	r22, r14
     97c:	0e 94 1a 05 	call	0xa34	; 0xa34 <__clzsi2>
     980:	fc 01       	movw	r30, r24
     982:	31 97       	sbiw	r30, 0x01	; 1
     984:	f7 ff       	sbrs	r31, 7
     986:	3b c0       	rjmp	.+118    	; 0x9fe <__floatunsisf+0xbc>
     988:	22 27       	eor	r18, r18
     98a:	33 27       	eor	r19, r19
     98c:	2e 1b       	sub	r18, r30
     98e:	3f 0b       	sbc	r19, r31
     990:	57 01       	movw	r10, r14
     992:	68 01       	movw	r12, r16
     994:	02 2e       	mov	r0, r18
     996:	04 c0       	rjmp	.+8      	; 0x9a0 <__floatunsisf+0x5e>
     998:	d6 94       	lsr	r13
     99a:	c7 94       	ror	r12
     99c:	b7 94       	ror	r11
     99e:	a7 94       	ror	r10
     9a0:	0a 94       	dec	r0
     9a2:	d2 f7       	brpl	.-12     	; 0x998 <__floatunsisf+0x56>
     9a4:	40 e0       	ldi	r20, 0x00	; 0
     9a6:	50 e0       	ldi	r21, 0x00	; 0
     9a8:	60 e0       	ldi	r22, 0x00	; 0
     9aa:	70 e0       	ldi	r23, 0x00	; 0
     9ac:	81 e0       	ldi	r24, 0x01	; 1
     9ae:	90 e0       	ldi	r25, 0x00	; 0
     9b0:	a0 e0       	ldi	r26, 0x00	; 0
     9b2:	b0 e0       	ldi	r27, 0x00	; 0
     9b4:	04 c0       	rjmp	.+8      	; 0x9be <__floatunsisf+0x7c>
     9b6:	88 0f       	add	r24, r24
     9b8:	99 1f       	adc	r25, r25
     9ba:	aa 1f       	adc	r26, r26
     9bc:	bb 1f       	adc	r27, r27
     9be:	2a 95       	dec	r18
     9c0:	d2 f7       	brpl	.-12     	; 0x9b6 <__floatunsisf+0x74>
     9c2:	01 97       	sbiw	r24, 0x01	; 1
     9c4:	a1 09       	sbc	r26, r1
     9c6:	b1 09       	sbc	r27, r1
     9c8:	8e 21       	and	r24, r14
     9ca:	9f 21       	and	r25, r15
     9cc:	a0 23       	and	r26, r16
     9ce:	b1 23       	and	r27, r17
     9d0:	00 97       	sbiw	r24, 0x00	; 0
     9d2:	a1 05       	cpc	r26, r1
     9d4:	b1 05       	cpc	r27, r1
     9d6:	21 f0       	breq	.+8      	; 0x9e0 <__floatunsisf+0x9e>
     9d8:	41 e0       	ldi	r20, 0x01	; 1
     9da:	50 e0       	ldi	r21, 0x00	; 0
     9dc:	60 e0       	ldi	r22, 0x00	; 0
     9de:	70 e0       	ldi	r23, 0x00	; 0
     9e0:	4a 29       	or	r20, r10
     9e2:	5b 29       	or	r21, r11
     9e4:	6c 29       	or	r22, r12
     9e6:	7d 29       	or	r23, r13
     9e8:	4d 83       	std	Y+5, r20	; 0x05
     9ea:	5e 83       	std	Y+6, r21	; 0x06
     9ec:	6f 83       	std	Y+7, r22	; 0x07
     9ee:	78 87       	std	Y+8, r23	; 0x08
     9f0:	8e e1       	ldi	r24, 0x1E	; 30
     9f2:	90 e0       	ldi	r25, 0x00	; 0
     9f4:	8e 1b       	sub	r24, r30
     9f6:	9f 0b       	sbc	r25, r31
     9f8:	9c 83       	std	Y+4, r25	; 0x04
     9fa:	8b 83       	std	Y+3, r24	; 0x03
     9fc:	12 c0       	rjmp	.+36     	; 0xa22 <__floatunsisf+0xe0>
     9fe:	30 97       	sbiw	r30, 0x00	; 0
     a00:	81 f0       	breq	.+32     	; 0xa22 <__floatunsisf+0xe0>
     a02:	0e 2e       	mov	r0, r30
     a04:	04 c0       	rjmp	.+8      	; 0xa0e <__floatunsisf+0xcc>
     a06:	ee 0c       	add	r14, r14
     a08:	ff 1c       	adc	r15, r15
     a0a:	00 1f       	adc	r16, r16
     a0c:	11 1f       	adc	r17, r17
     a0e:	0a 94       	dec	r0
     a10:	d2 f7       	brpl	.-12     	; 0xa06 <__floatunsisf+0xc4>
     a12:	ed 82       	std	Y+5, r14	; 0x05
     a14:	fe 82       	std	Y+6, r15	; 0x06
     a16:	0f 83       	std	Y+7, r16	; 0x07
     a18:	18 87       	std	Y+8, r17	; 0x08
     a1a:	ce 1a       	sub	r12, r30
     a1c:	df 0a       	sbc	r13, r31
     a1e:	dc 82       	std	Y+4, r13	; 0x04
     a20:	cb 82       	std	Y+3, r12	; 0x03
     a22:	1a 82       	std	Y+2, r1	; 0x02
     a24:	ce 01       	movw	r24, r28
     a26:	01 96       	adiw	r24, 0x01	; 1
     a28:	0e 94 69 05 	call	0xad2	; 0xad2 <__pack_f>
     a2c:	28 96       	adiw	r28, 0x08	; 8
     a2e:	ea e0       	ldi	r30, 0x0A	; 10
     a30:	0c 94 1b 16 	jmp	0x2c36	; 0x2c36 <__epilogue_restores__+0x10>

00000a34 <__clzsi2>:
     a34:	ef 92       	push	r14
     a36:	ff 92       	push	r15
     a38:	0f 93       	push	r16
     a3a:	1f 93       	push	r17
     a3c:	7b 01       	movw	r14, r22
     a3e:	8c 01       	movw	r16, r24
     a40:	80 e0       	ldi	r24, 0x00	; 0
     a42:	e8 16       	cp	r14, r24
     a44:	80 e0       	ldi	r24, 0x00	; 0
     a46:	f8 06       	cpc	r15, r24
     a48:	81 e0       	ldi	r24, 0x01	; 1
     a4a:	08 07       	cpc	r16, r24
     a4c:	80 e0       	ldi	r24, 0x00	; 0
     a4e:	18 07       	cpc	r17, r24
     a50:	88 f4       	brcc	.+34     	; 0xa74 <__clzsi2+0x40>
     a52:	8f ef       	ldi	r24, 0xFF	; 255
     a54:	e8 16       	cp	r14, r24
     a56:	f1 04       	cpc	r15, r1
     a58:	01 05       	cpc	r16, r1
     a5a:	11 05       	cpc	r17, r1
     a5c:	31 f0       	breq	.+12     	; 0xa6a <__clzsi2+0x36>
     a5e:	28 f0       	brcs	.+10     	; 0xa6a <__clzsi2+0x36>
     a60:	88 e0       	ldi	r24, 0x08	; 8
     a62:	90 e0       	ldi	r25, 0x00	; 0
     a64:	a0 e0       	ldi	r26, 0x00	; 0
     a66:	b0 e0       	ldi	r27, 0x00	; 0
     a68:	17 c0       	rjmp	.+46     	; 0xa98 <__clzsi2+0x64>
     a6a:	80 e0       	ldi	r24, 0x00	; 0
     a6c:	90 e0       	ldi	r25, 0x00	; 0
     a6e:	a0 e0       	ldi	r26, 0x00	; 0
     a70:	b0 e0       	ldi	r27, 0x00	; 0
     a72:	12 c0       	rjmp	.+36     	; 0xa98 <__clzsi2+0x64>
     a74:	80 e0       	ldi	r24, 0x00	; 0
     a76:	e8 16       	cp	r14, r24
     a78:	80 e0       	ldi	r24, 0x00	; 0
     a7a:	f8 06       	cpc	r15, r24
     a7c:	80 e0       	ldi	r24, 0x00	; 0
     a7e:	08 07       	cpc	r16, r24
     a80:	81 e0       	ldi	r24, 0x01	; 1
     a82:	18 07       	cpc	r17, r24
     a84:	28 f0       	brcs	.+10     	; 0xa90 <__clzsi2+0x5c>
     a86:	88 e1       	ldi	r24, 0x18	; 24
     a88:	90 e0       	ldi	r25, 0x00	; 0
     a8a:	a0 e0       	ldi	r26, 0x00	; 0
     a8c:	b0 e0       	ldi	r27, 0x00	; 0
     a8e:	04 c0       	rjmp	.+8      	; 0xa98 <__clzsi2+0x64>
     a90:	80 e1       	ldi	r24, 0x10	; 16
     a92:	90 e0       	ldi	r25, 0x00	; 0
     a94:	a0 e0       	ldi	r26, 0x00	; 0
     a96:	b0 e0       	ldi	r27, 0x00	; 0
     a98:	20 e2       	ldi	r18, 0x20	; 32
     a9a:	30 e0       	ldi	r19, 0x00	; 0
     a9c:	40 e0       	ldi	r20, 0x00	; 0
     a9e:	50 e0       	ldi	r21, 0x00	; 0
     aa0:	28 1b       	sub	r18, r24
     aa2:	39 0b       	sbc	r19, r25
     aa4:	4a 0b       	sbc	r20, r26
     aa6:	5b 0b       	sbc	r21, r27
     aa8:	04 c0       	rjmp	.+8      	; 0xab2 <__clzsi2+0x7e>
     aaa:	16 95       	lsr	r17
     aac:	07 95       	ror	r16
     aae:	f7 94       	ror	r15
     ab0:	e7 94       	ror	r14
     ab2:	8a 95       	dec	r24
     ab4:	d2 f7       	brpl	.-12     	; 0xaaa <__clzsi2+0x76>
     ab6:	f7 01       	movw	r30, r14
     ab8:	e8 59       	subi	r30, 0x98	; 152
     aba:	ff 4f       	sbci	r31, 0xFF	; 255
     abc:	80 81       	ld	r24, Z
     abe:	28 1b       	sub	r18, r24
     ac0:	31 09       	sbc	r19, r1
     ac2:	41 09       	sbc	r20, r1
     ac4:	51 09       	sbc	r21, r1
     ac6:	c9 01       	movw	r24, r18
     ac8:	1f 91       	pop	r17
     aca:	0f 91       	pop	r16
     acc:	ff 90       	pop	r15
     ace:	ef 90       	pop	r14
     ad0:	08 95       	ret

00000ad2 <__pack_f>:
     ad2:	df 92       	push	r13
     ad4:	ef 92       	push	r14
     ad6:	ff 92       	push	r15
     ad8:	0f 93       	push	r16
     ada:	1f 93       	push	r17
     adc:	fc 01       	movw	r30, r24
     ade:	e4 80       	ldd	r14, Z+4	; 0x04
     ae0:	f5 80       	ldd	r15, Z+5	; 0x05
     ae2:	06 81       	ldd	r16, Z+6	; 0x06
     ae4:	17 81       	ldd	r17, Z+7	; 0x07
     ae6:	d1 80       	ldd	r13, Z+1	; 0x01
     ae8:	80 81       	ld	r24, Z
     aea:	82 30       	cpi	r24, 0x02	; 2
     aec:	48 f4       	brcc	.+18     	; 0xb00 <__pack_f+0x2e>
     aee:	80 e0       	ldi	r24, 0x00	; 0
     af0:	90 e0       	ldi	r25, 0x00	; 0
     af2:	a0 e1       	ldi	r26, 0x10	; 16
     af4:	b0 e0       	ldi	r27, 0x00	; 0
     af6:	e8 2a       	or	r14, r24
     af8:	f9 2a       	or	r15, r25
     afa:	0a 2b       	or	r16, r26
     afc:	1b 2b       	or	r17, r27
     afe:	a5 c0       	rjmp	.+330    	; 0xc4a <__pack_f+0x178>
     b00:	84 30       	cpi	r24, 0x04	; 4
     b02:	09 f4       	brne	.+2      	; 0xb06 <__pack_f+0x34>
     b04:	9f c0       	rjmp	.+318    	; 0xc44 <__pack_f+0x172>
     b06:	82 30       	cpi	r24, 0x02	; 2
     b08:	21 f4       	brne	.+8      	; 0xb12 <__pack_f+0x40>
     b0a:	ee 24       	eor	r14, r14
     b0c:	ff 24       	eor	r15, r15
     b0e:	87 01       	movw	r16, r14
     b10:	05 c0       	rjmp	.+10     	; 0xb1c <__pack_f+0x4a>
     b12:	e1 14       	cp	r14, r1
     b14:	f1 04       	cpc	r15, r1
     b16:	01 05       	cpc	r16, r1
     b18:	11 05       	cpc	r17, r1
     b1a:	19 f4       	brne	.+6      	; 0xb22 <__pack_f+0x50>
     b1c:	e0 e0       	ldi	r30, 0x00	; 0
     b1e:	f0 e0       	ldi	r31, 0x00	; 0
     b20:	96 c0       	rjmp	.+300    	; 0xc4e <__pack_f+0x17c>
     b22:	62 81       	ldd	r22, Z+2	; 0x02
     b24:	73 81       	ldd	r23, Z+3	; 0x03
     b26:	9f ef       	ldi	r25, 0xFF	; 255
     b28:	62 38       	cpi	r22, 0x82	; 130
     b2a:	79 07       	cpc	r23, r25
     b2c:	0c f0       	brlt	.+2      	; 0xb30 <__pack_f+0x5e>
     b2e:	5b c0       	rjmp	.+182    	; 0xbe6 <__pack_f+0x114>
     b30:	22 e8       	ldi	r18, 0x82	; 130
     b32:	3f ef       	ldi	r19, 0xFF	; 255
     b34:	26 1b       	sub	r18, r22
     b36:	37 0b       	sbc	r19, r23
     b38:	2a 31       	cpi	r18, 0x1A	; 26
     b3a:	31 05       	cpc	r19, r1
     b3c:	2c f0       	brlt	.+10     	; 0xb48 <__pack_f+0x76>
     b3e:	20 e0       	ldi	r18, 0x00	; 0
     b40:	30 e0       	ldi	r19, 0x00	; 0
     b42:	40 e0       	ldi	r20, 0x00	; 0
     b44:	50 e0       	ldi	r21, 0x00	; 0
     b46:	2a c0       	rjmp	.+84     	; 0xb9c <__pack_f+0xca>
     b48:	b8 01       	movw	r22, r16
     b4a:	a7 01       	movw	r20, r14
     b4c:	02 2e       	mov	r0, r18
     b4e:	04 c0       	rjmp	.+8      	; 0xb58 <__pack_f+0x86>
     b50:	76 95       	lsr	r23
     b52:	67 95       	ror	r22
     b54:	57 95       	ror	r21
     b56:	47 95       	ror	r20
     b58:	0a 94       	dec	r0
     b5a:	d2 f7       	brpl	.-12     	; 0xb50 <__pack_f+0x7e>
     b5c:	81 e0       	ldi	r24, 0x01	; 1
     b5e:	90 e0       	ldi	r25, 0x00	; 0
     b60:	a0 e0       	ldi	r26, 0x00	; 0
     b62:	b0 e0       	ldi	r27, 0x00	; 0
     b64:	04 c0       	rjmp	.+8      	; 0xb6e <__pack_f+0x9c>
     b66:	88 0f       	add	r24, r24
     b68:	99 1f       	adc	r25, r25
     b6a:	aa 1f       	adc	r26, r26
     b6c:	bb 1f       	adc	r27, r27
     b6e:	2a 95       	dec	r18
     b70:	d2 f7       	brpl	.-12     	; 0xb66 <__pack_f+0x94>
     b72:	01 97       	sbiw	r24, 0x01	; 1
     b74:	a1 09       	sbc	r26, r1
     b76:	b1 09       	sbc	r27, r1
     b78:	8e 21       	and	r24, r14
     b7a:	9f 21       	and	r25, r15
     b7c:	a0 23       	and	r26, r16
     b7e:	b1 23       	and	r27, r17
     b80:	00 97       	sbiw	r24, 0x00	; 0
     b82:	a1 05       	cpc	r26, r1
     b84:	b1 05       	cpc	r27, r1
     b86:	21 f0       	breq	.+8      	; 0xb90 <__pack_f+0xbe>
     b88:	81 e0       	ldi	r24, 0x01	; 1
     b8a:	90 e0       	ldi	r25, 0x00	; 0
     b8c:	a0 e0       	ldi	r26, 0x00	; 0
     b8e:	b0 e0       	ldi	r27, 0x00	; 0
     b90:	9a 01       	movw	r18, r20
     b92:	ab 01       	movw	r20, r22
     b94:	28 2b       	or	r18, r24
     b96:	39 2b       	or	r19, r25
     b98:	4a 2b       	or	r20, r26
     b9a:	5b 2b       	or	r21, r27
     b9c:	da 01       	movw	r26, r20
     b9e:	c9 01       	movw	r24, r18
     ba0:	8f 77       	andi	r24, 0x7F	; 127
     ba2:	90 70       	andi	r25, 0x00	; 0
     ba4:	a0 70       	andi	r26, 0x00	; 0
     ba6:	b0 70       	andi	r27, 0x00	; 0
     ba8:	80 34       	cpi	r24, 0x40	; 64
     baa:	91 05       	cpc	r25, r1
     bac:	a1 05       	cpc	r26, r1
     bae:	b1 05       	cpc	r27, r1
     bb0:	39 f4       	brne	.+14     	; 0xbc0 <__pack_f+0xee>
     bb2:	27 ff       	sbrs	r18, 7
     bb4:	09 c0       	rjmp	.+18     	; 0xbc8 <__pack_f+0xf6>
     bb6:	20 5c       	subi	r18, 0xC0	; 192
     bb8:	3f 4f       	sbci	r19, 0xFF	; 255
     bba:	4f 4f       	sbci	r20, 0xFF	; 255
     bbc:	5f 4f       	sbci	r21, 0xFF	; 255
     bbe:	04 c0       	rjmp	.+8      	; 0xbc8 <__pack_f+0xf6>
     bc0:	21 5c       	subi	r18, 0xC1	; 193
     bc2:	3f 4f       	sbci	r19, 0xFF	; 255
     bc4:	4f 4f       	sbci	r20, 0xFF	; 255
     bc6:	5f 4f       	sbci	r21, 0xFF	; 255
     bc8:	e0 e0       	ldi	r30, 0x00	; 0
     bca:	f0 e0       	ldi	r31, 0x00	; 0
     bcc:	20 30       	cpi	r18, 0x00	; 0
     bce:	a0 e0       	ldi	r26, 0x00	; 0
     bd0:	3a 07       	cpc	r19, r26
     bd2:	a0 e0       	ldi	r26, 0x00	; 0
     bd4:	4a 07       	cpc	r20, r26
     bd6:	a0 e4       	ldi	r26, 0x40	; 64
     bd8:	5a 07       	cpc	r21, r26
     bda:	10 f0       	brcs	.+4      	; 0xbe0 <__pack_f+0x10e>
     bdc:	e1 e0       	ldi	r30, 0x01	; 1
     bde:	f0 e0       	ldi	r31, 0x00	; 0
     be0:	79 01       	movw	r14, r18
     be2:	8a 01       	movw	r16, r20
     be4:	27 c0       	rjmp	.+78     	; 0xc34 <__pack_f+0x162>
     be6:	60 38       	cpi	r22, 0x80	; 128
     be8:	71 05       	cpc	r23, r1
     bea:	64 f5       	brge	.+88     	; 0xc44 <__pack_f+0x172>
     bec:	fb 01       	movw	r30, r22
     bee:	e1 58       	subi	r30, 0x81	; 129
     bf0:	ff 4f       	sbci	r31, 0xFF	; 255
     bf2:	d8 01       	movw	r26, r16
     bf4:	c7 01       	movw	r24, r14
     bf6:	8f 77       	andi	r24, 0x7F	; 127
     bf8:	90 70       	andi	r25, 0x00	; 0
     bfa:	a0 70       	andi	r26, 0x00	; 0
     bfc:	b0 70       	andi	r27, 0x00	; 0
     bfe:	80 34       	cpi	r24, 0x40	; 64
     c00:	91 05       	cpc	r25, r1
     c02:	a1 05       	cpc	r26, r1
     c04:	b1 05       	cpc	r27, r1
     c06:	39 f4       	brne	.+14     	; 0xc16 <__pack_f+0x144>
     c08:	e7 fe       	sbrs	r14, 7
     c0a:	0d c0       	rjmp	.+26     	; 0xc26 <__pack_f+0x154>
     c0c:	80 e4       	ldi	r24, 0x40	; 64
     c0e:	90 e0       	ldi	r25, 0x00	; 0
     c10:	a0 e0       	ldi	r26, 0x00	; 0
     c12:	b0 e0       	ldi	r27, 0x00	; 0
     c14:	04 c0       	rjmp	.+8      	; 0xc1e <__pack_f+0x14c>
     c16:	8f e3       	ldi	r24, 0x3F	; 63
     c18:	90 e0       	ldi	r25, 0x00	; 0
     c1a:	a0 e0       	ldi	r26, 0x00	; 0
     c1c:	b0 e0       	ldi	r27, 0x00	; 0
     c1e:	e8 0e       	add	r14, r24
     c20:	f9 1e       	adc	r15, r25
     c22:	0a 1f       	adc	r16, r26
     c24:	1b 1f       	adc	r17, r27
     c26:	17 ff       	sbrs	r17, 7
     c28:	05 c0       	rjmp	.+10     	; 0xc34 <__pack_f+0x162>
     c2a:	16 95       	lsr	r17
     c2c:	07 95       	ror	r16
     c2e:	f7 94       	ror	r15
     c30:	e7 94       	ror	r14
     c32:	31 96       	adiw	r30, 0x01	; 1
     c34:	87 e0       	ldi	r24, 0x07	; 7
     c36:	16 95       	lsr	r17
     c38:	07 95       	ror	r16
     c3a:	f7 94       	ror	r15
     c3c:	e7 94       	ror	r14
     c3e:	8a 95       	dec	r24
     c40:	d1 f7       	brne	.-12     	; 0xc36 <__pack_f+0x164>
     c42:	05 c0       	rjmp	.+10     	; 0xc4e <__pack_f+0x17c>
     c44:	ee 24       	eor	r14, r14
     c46:	ff 24       	eor	r15, r15
     c48:	87 01       	movw	r16, r14
     c4a:	ef ef       	ldi	r30, 0xFF	; 255
     c4c:	f0 e0       	ldi	r31, 0x00	; 0
     c4e:	6e 2f       	mov	r22, r30
     c50:	67 95       	ror	r22
     c52:	66 27       	eor	r22, r22
     c54:	67 95       	ror	r22
     c56:	90 2f       	mov	r25, r16
     c58:	9f 77       	andi	r25, 0x7F	; 127
     c5a:	d7 94       	ror	r13
     c5c:	dd 24       	eor	r13, r13
     c5e:	d7 94       	ror	r13
     c60:	8e 2f       	mov	r24, r30
     c62:	86 95       	lsr	r24
     c64:	49 2f       	mov	r20, r25
     c66:	46 2b       	or	r20, r22
     c68:	58 2f       	mov	r21, r24
     c6a:	5d 29       	or	r21, r13
     c6c:	b7 01       	movw	r22, r14
     c6e:	ca 01       	movw	r24, r20
     c70:	1f 91       	pop	r17
     c72:	0f 91       	pop	r16
     c74:	ff 90       	pop	r15
     c76:	ef 90       	pop	r14
     c78:	df 90       	pop	r13
     c7a:	08 95       	ret

00000c7c <__unpack_f>:
     c7c:	fc 01       	movw	r30, r24
     c7e:	db 01       	movw	r26, r22
     c80:	40 81       	ld	r20, Z
     c82:	51 81       	ldd	r21, Z+1	; 0x01
     c84:	22 81       	ldd	r18, Z+2	; 0x02
     c86:	62 2f       	mov	r22, r18
     c88:	6f 77       	andi	r22, 0x7F	; 127
     c8a:	70 e0       	ldi	r23, 0x00	; 0
     c8c:	22 1f       	adc	r18, r18
     c8e:	22 27       	eor	r18, r18
     c90:	22 1f       	adc	r18, r18
     c92:	93 81       	ldd	r25, Z+3	; 0x03
     c94:	89 2f       	mov	r24, r25
     c96:	88 0f       	add	r24, r24
     c98:	82 2b       	or	r24, r18
     c9a:	28 2f       	mov	r18, r24
     c9c:	30 e0       	ldi	r19, 0x00	; 0
     c9e:	99 1f       	adc	r25, r25
     ca0:	99 27       	eor	r25, r25
     ca2:	99 1f       	adc	r25, r25
     ca4:	11 96       	adiw	r26, 0x01	; 1
     ca6:	9c 93       	st	X, r25
     ca8:	11 97       	sbiw	r26, 0x01	; 1
     caa:	21 15       	cp	r18, r1
     cac:	31 05       	cpc	r19, r1
     cae:	a9 f5       	brne	.+106    	; 0xd1a <__unpack_f+0x9e>
     cb0:	41 15       	cp	r20, r1
     cb2:	51 05       	cpc	r21, r1
     cb4:	61 05       	cpc	r22, r1
     cb6:	71 05       	cpc	r23, r1
     cb8:	11 f4       	brne	.+4      	; 0xcbe <__unpack_f+0x42>
     cba:	82 e0       	ldi	r24, 0x02	; 2
     cbc:	37 c0       	rjmp	.+110    	; 0xd2c <__unpack_f+0xb0>
     cbe:	82 e8       	ldi	r24, 0x82	; 130
     cc0:	9f ef       	ldi	r25, 0xFF	; 255
     cc2:	13 96       	adiw	r26, 0x03	; 3
     cc4:	9c 93       	st	X, r25
     cc6:	8e 93       	st	-X, r24
     cc8:	12 97       	sbiw	r26, 0x02	; 2
     cca:	9a 01       	movw	r18, r20
     ccc:	ab 01       	movw	r20, r22
     cce:	67 e0       	ldi	r22, 0x07	; 7
     cd0:	22 0f       	add	r18, r18
     cd2:	33 1f       	adc	r19, r19
     cd4:	44 1f       	adc	r20, r20
     cd6:	55 1f       	adc	r21, r21
     cd8:	6a 95       	dec	r22
     cda:	d1 f7       	brne	.-12     	; 0xcd0 <__unpack_f+0x54>
     cdc:	83 e0       	ldi	r24, 0x03	; 3
     cde:	8c 93       	st	X, r24
     ce0:	0d c0       	rjmp	.+26     	; 0xcfc <__unpack_f+0x80>
     ce2:	22 0f       	add	r18, r18
     ce4:	33 1f       	adc	r19, r19
     ce6:	44 1f       	adc	r20, r20
     ce8:	55 1f       	adc	r21, r21
     cea:	12 96       	adiw	r26, 0x02	; 2
     cec:	8d 91       	ld	r24, X+
     cee:	9c 91       	ld	r25, X
     cf0:	13 97       	sbiw	r26, 0x03	; 3
     cf2:	01 97       	sbiw	r24, 0x01	; 1
     cf4:	13 96       	adiw	r26, 0x03	; 3
     cf6:	9c 93       	st	X, r25
     cf8:	8e 93       	st	-X, r24
     cfa:	12 97       	sbiw	r26, 0x02	; 2
     cfc:	20 30       	cpi	r18, 0x00	; 0
     cfe:	80 e0       	ldi	r24, 0x00	; 0
     d00:	38 07       	cpc	r19, r24
     d02:	80 e0       	ldi	r24, 0x00	; 0
     d04:	48 07       	cpc	r20, r24
     d06:	80 e4       	ldi	r24, 0x40	; 64
     d08:	58 07       	cpc	r21, r24
     d0a:	58 f3       	brcs	.-42     	; 0xce2 <__unpack_f+0x66>
     d0c:	14 96       	adiw	r26, 0x04	; 4
     d0e:	2d 93       	st	X+, r18
     d10:	3d 93       	st	X+, r19
     d12:	4d 93       	st	X+, r20
     d14:	5c 93       	st	X, r21
     d16:	17 97       	sbiw	r26, 0x07	; 7
     d18:	08 95       	ret
     d1a:	2f 3f       	cpi	r18, 0xFF	; 255
     d1c:	31 05       	cpc	r19, r1
     d1e:	79 f4       	brne	.+30     	; 0xd3e <__unpack_f+0xc2>
     d20:	41 15       	cp	r20, r1
     d22:	51 05       	cpc	r21, r1
     d24:	61 05       	cpc	r22, r1
     d26:	71 05       	cpc	r23, r1
     d28:	19 f4       	brne	.+6      	; 0xd30 <__unpack_f+0xb4>
     d2a:	84 e0       	ldi	r24, 0x04	; 4
     d2c:	8c 93       	st	X, r24
     d2e:	08 95       	ret
     d30:	64 ff       	sbrs	r22, 4
     d32:	03 c0       	rjmp	.+6      	; 0xd3a <__unpack_f+0xbe>
     d34:	81 e0       	ldi	r24, 0x01	; 1
     d36:	8c 93       	st	X, r24
     d38:	12 c0       	rjmp	.+36     	; 0xd5e <__unpack_f+0xe2>
     d3a:	1c 92       	st	X, r1
     d3c:	10 c0       	rjmp	.+32     	; 0xd5e <__unpack_f+0xe2>
     d3e:	2f 57       	subi	r18, 0x7F	; 127
     d40:	30 40       	sbci	r19, 0x00	; 0
     d42:	13 96       	adiw	r26, 0x03	; 3
     d44:	3c 93       	st	X, r19
     d46:	2e 93       	st	-X, r18
     d48:	12 97       	sbiw	r26, 0x02	; 2
     d4a:	83 e0       	ldi	r24, 0x03	; 3
     d4c:	8c 93       	st	X, r24
     d4e:	87 e0       	ldi	r24, 0x07	; 7
     d50:	44 0f       	add	r20, r20
     d52:	55 1f       	adc	r21, r21
     d54:	66 1f       	adc	r22, r22
     d56:	77 1f       	adc	r23, r23
     d58:	8a 95       	dec	r24
     d5a:	d1 f7       	brne	.-12     	; 0xd50 <__unpack_f+0xd4>
     d5c:	70 64       	ori	r23, 0x40	; 64
     d5e:	14 96       	adiw	r26, 0x04	; 4
     d60:	4d 93       	st	X+, r20
     d62:	5d 93       	st	X+, r21
     d64:	6d 93       	st	X+, r22
     d66:	7c 93       	st	X, r23
     d68:	17 97       	sbiw	r26, 0x07	; 7
     d6a:	08 95       	ret

00000d6c <__fpcmp_parts_f>:
     d6c:	1f 93       	push	r17
     d6e:	dc 01       	movw	r26, r24
     d70:	fb 01       	movw	r30, r22
     d72:	9c 91       	ld	r25, X
     d74:	92 30       	cpi	r25, 0x02	; 2
     d76:	08 f4       	brcc	.+2      	; 0xd7a <__fpcmp_parts_f+0xe>
     d78:	47 c0       	rjmp	.+142    	; 0xe08 <__fpcmp_parts_f+0x9c>
     d7a:	80 81       	ld	r24, Z
     d7c:	82 30       	cpi	r24, 0x02	; 2
     d7e:	08 f4       	brcc	.+2      	; 0xd82 <__fpcmp_parts_f+0x16>
     d80:	43 c0       	rjmp	.+134    	; 0xe08 <__fpcmp_parts_f+0x9c>
     d82:	94 30       	cpi	r25, 0x04	; 4
     d84:	51 f4       	brne	.+20     	; 0xd9a <__fpcmp_parts_f+0x2e>
     d86:	11 96       	adiw	r26, 0x01	; 1
     d88:	1c 91       	ld	r17, X
     d8a:	84 30       	cpi	r24, 0x04	; 4
     d8c:	99 f5       	brne	.+102    	; 0xdf4 <__fpcmp_parts_f+0x88>
     d8e:	81 81       	ldd	r24, Z+1	; 0x01
     d90:	68 2f       	mov	r22, r24
     d92:	70 e0       	ldi	r23, 0x00	; 0
     d94:	61 1b       	sub	r22, r17
     d96:	71 09       	sbc	r23, r1
     d98:	3f c0       	rjmp	.+126    	; 0xe18 <__fpcmp_parts_f+0xac>
     d9a:	84 30       	cpi	r24, 0x04	; 4
     d9c:	21 f0       	breq	.+8      	; 0xda6 <__fpcmp_parts_f+0x3a>
     d9e:	92 30       	cpi	r25, 0x02	; 2
     da0:	31 f4       	brne	.+12     	; 0xdae <__fpcmp_parts_f+0x42>
     da2:	82 30       	cpi	r24, 0x02	; 2
     da4:	b9 f1       	breq	.+110    	; 0xe14 <__fpcmp_parts_f+0xa8>
     da6:	81 81       	ldd	r24, Z+1	; 0x01
     da8:	88 23       	and	r24, r24
     daa:	89 f1       	breq	.+98     	; 0xe0e <__fpcmp_parts_f+0xa2>
     dac:	2d c0       	rjmp	.+90     	; 0xe08 <__fpcmp_parts_f+0x9c>
     dae:	11 96       	adiw	r26, 0x01	; 1
     db0:	1c 91       	ld	r17, X
     db2:	11 97       	sbiw	r26, 0x01	; 1
     db4:	82 30       	cpi	r24, 0x02	; 2
     db6:	f1 f0       	breq	.+60     	; 0xdf4 <__fpcmp_parts_f+0x88>
     db8:	81 81       	ldd	r24, Z+1	; 0x01
     dba:	18 17       	cp	r17, r24
     dbc:	d9 f4       	brne	.+54     	; 0xdf4 <__fpcmp_parts_f+0x88>
     dbe:	12 96       	adiw	r26, 0x02	; 2
     dc0:	2d 91       	ld	r18, X+
     dc2:	3c 91       	ld	r19, X
     dc4:	13 97       	sbiw	r26, 0x03	; 3
     dc6:	82 81       	ldd	r24, Z+2	; 0x02
     dc8:	93 81       	ldd	r25, Z+3	; 0x03
     dca:	82 17       	cp	r24, r18
     dcc:	93 07       	cpc	r25, r19
     dce:	94 f0       	brlt	.+36     	; 0xdf4 <__fpcmp_parts_f+0x88>
     dd0:	28 17       	cp	r18, r24
     dd2:	39 07       	cpc	r19, r25
     dd4:	bc f0       	brlt	.+46     	; 0xe04 <__fpcmp_parts_f+0x98>
     dd6:	14 96       	adiw	r26, 0x04	; 4
     dd8:	8d 91       	ld	r24, X+
     dda:	9d 91       	ld	r25, X+
     ddc:	0d 90       	ld	r0, X+
     dde:	bc 91       	ld	r27, X
     de0:	a0 2d       	mov	r26, r0
     de2:	24 81       	ldd	r18, Z+4	; 0x04
     de4:	35 81       	ldd	r19, Z+5	; 0x05
     de6:	46 81       	ldd	r20, Z+6	; 0x06
     de8:	57 81       	ldd	r21, Z+7	; 0x07
     dea:	28 17       	cp	r18, r24
     dec:	39 07       	cpc	r19, r25
     dee:	4a 07       	cpc	r20, r26
     df0:	5b 07       	cpc	r21, r27
     df2:	18 f4       	brcc	.+6      	; 0xdfa <__fpcmp_parts_f+0x8e>
     df4:	11 23       	and	r17, r17
     df6:	41 f0       	breq	.+16     	; 0xe08 <__fpcmp_parts_f+0x9c>
     df8:	0a c0       	rjmp	.+20     	; 0xe0e <__fpcmp_parts_f+0xa2>
     dfa:	82 17       	cp	r24, r18
     dfc:	93 07       	cpc	r25, r19
     dfe:	a4 07       	cpc	r26, r20
     e00:	b5 07       	cpc	r27, r21
     e02:	40 f4       	brcc	.+16     	; 0xe14 <__fpcmp_parts_f+0xa8>
     e04:	11 23       	and	r17, r17
     e06:	19 f0       	breq	.+6      	; 0xe0e <__fpcmp_parts_f+0xa2>
     e08:	61 e0       	ldi	r22, 0x01	; 1
     e0a:	70 e0       	ldi	r23, 0x00	; 0
     e0c:	05 c0       	rjmp	.+10     	; 0xe18 <__fpcmp_parts_f+0xac>
     e0e:	6f ef       	ldi	r22, 0xFF	; 255
     e10:	7f ef       	ldi	r23, 0xFF	; 255
     e12:	02 c0       	rjmp	.+4      	; 0xe18 <__fpcmp_parts_f+0xac>
     e14:	60 e0       	ldi	r22, 0x00	; 0
     e16:	70 e0       	ldi	r23, 0x00	; 0
     e18:	cb 01       	movw	r24, r22
     e1a:	1f 91       	pop	r17
     e1c:	08 95       	ret

00000e1e <ADC_vidInit>:
#include "ADC_cfg.h"
#include "ADC_int.h"
#include "ADC_priv.h"

void ADC_vidInit(void)
{
     e1e:	df 93       	push	r29
     e20:	cf 93       	push	r28
     e22:	cd b7       	in	r28, 0x3d	; 61
     e24:	de b7       	in	r29, 0x3e	; 62
	/*************reference voltage selection*****************/

#if Adc_u8ReferenceVoltage==Adc_u8Internal_5Volt

	CLEAR_BIT(ADMUX,7);  //FOR V(REF) 5 volt
     e26:	a7 e2       	ldi	r26, 0x27	; 39
     e28:	b0 e0       	ldi	r27, 0x00	; 0
     e2a:	e7 e2       	ldi	r30, 0x27	; 39
     e2c:	f0 e0       	ldi	r31, 0x00	; 0
     e2e:	80 81       	ld	r24, Z
     e30:	8f 77       	andi	r24, 0x7F	; 127
     e32:	8c 93       	st	X, r24
	SET_BIT(ADMUX,6);  //FOR V(REF)   5 volt
     e34:	a7 e2       	ldi	r26, 0x27	; 39
     e36:	b0 e0       	ldi	r27, 0x00	; 0
     e38:	e7 e2       	ldi	r30, 0x27	; 39
     e3a:	f0 e0       	ldi	r31, 0x00	; 0
     e3c:	80 81       	ld	r24, Z
     e3e:	80 64       	ori	r24, 0x40	; 64
     e40:	8c 93       	st	X, r24

	CLEAR_BIT(ADMUX,5);  //FOR right ADJUST

#elif Adc_u8Adjust==Adc_u8LeftAdjust

	SET_BIT(ADMUX,5);  //FOR left ADJUST
     e42:	a7 e2       	ldi	r26, 0x27	; 39
     e44:	b0 e0       	ldi	r27, 0x00	; 0
     e46:	e7 e2       	ldi	r30, 0x27	; 39
     e48:	f0 e0       	ldi	r31, 0x00	; 0
     e4a:	80 81       	ld	r24, Z
     e4c:	80 62       	ori	r24, 0x20	; 32
     e4e:	8c 93       	st	X, r24



	//ADMUX bit numbers 4,3,2,1,0 for input channel that i want to convert

	SET_BIT(ADCSRA,7); //FOR  ADC EN
     e50:	a6 e2       	ldi	r26, 0x26	; 38
     e52:	b0 e0       	ldi	r27, 0x00	; 0
     e54:	e6 e2       	ldi	r30, 0x26	; 38
     e56:	f0 e0       	ldi	r31, 0x00	; 0
     e58:	80 81       	ld	r24, Z
     e5a:	80 68       	ori	r24, 0x80	; 128
     e5c:	8c 93       	st	X, r24

	SET_BIT(ADCSRA,5); //TO enable AUTO TRIGER

#elif Adc_u8AutoTrigger==Adc_u8Disable

	CLEAR_BIT(ADCSRA,5); //TO disable AUTO TRIGER
     e5e:	a6 e2       	ldi	r26, 0x26	; 38
     e60:	b0 e0       	ldi	r27, 0x00	; 0
     e62:	e6 e2       	ldi	r30, 0x26	; 38
     e64:	f0 e0       	ldi	r31, 0x00	; 0
     e66:	80 81       	ld	r24, Z
     e68:	8f 7d       	andi	r24, 0xDF	; 223
     e6a:	8c 93       	st	X, r24

	SET_BIT(ADCSRA,3);  // (PIE)

#elif Adc_u8AdcInterrupt==Adc_u8DisableInterrupt

	CLEAR_BIT(ADCSRA,3);  // (PIE)
     e6c:	a6 e2       	ldi	r26, 0x26	; 38
     e6e:	b0 e0       	ldi	r27, 0x00	; 0
     e70:	e6 e2       	ldi	r30, 0x26	; 38
     e72:	f0 e0       	ldi	r31, 0x00	; 0
     e74:	80 81       	ld	r24, Z
     e76:	87 7f       	andi	r24, 0xF7	; 247
     e78:	8c 93       	st	X, r24
	CLEAR_BIT(ADCSRA,1);
	SET_BIT(ADCSRA,0);

#elif Adc_u8DivisionFactorSelect==Adc_u8DivisionFactor64

	SET_BIT(ADCSRA,2); //2,1,0 FOR PRESCALER
     e7a:	a6 e2       	ldi	r26, 0x26	; 38
     e7c:	b0 e0       	ldi	r27, 0x00	; 0
     e7e:	e6 e2       	ldi	r30, 0x26	; 38
     e80:	f0 e0       	ldi	r31, 0x00	; 0
     e82:	80 81       	ld	r24, Z
     e84:	84 60       	ori	r24, 0x04	; 4
     e86:	8c 93       	st	X, r24
	SET_BIT(ADCSRA,1);
     e88:	a6 e2       	ldi	r26, 0x26	; 38
     e8a:	b0 e0       	ldi	r27, 0x00	; 0
     e8c:	e6 e2       	ldi	r30, 0x26	; 38
     e8e:	f0 e0       	ldi	r31, 0x00	; 0
     e90:	80 81       	ld	r24, Z
     e92:	82 60       	ori	r24, 0x02	; 2
     e94:	8c 93       	st	X, r24
	CLEAR_BIT(ADCSRA,0);
     e96:	a6 e2       	ldi	r26, 0x26	; 38
     e98:	b0 e0       	ldi	r27, 0x00	; 0
     e9a:	e6 e2       	ldi	r30, 0x26	; 38
     e9c:	f0 e0       	ldi	r31, 0x00	; 0
     e9e:	80 81       	ld	r24, Z
     ea0:	8e 7f       	andi	r24, 0xFE	; 254
     ea2:	8c 93       	st	X, r24


	/*************to select the trigger edge source*********************/

#if Adc_u8AutoTriggerMode==Adc_u8FREE_RUNNING_MODE
	CLEAR_BIT(SFIOR,7);
     ea4:	a0 e5       	ldi	r26, 0x50	; 80
     ea6:	b0 e0       	ldi	r27, 0x00	; 0
     ea8:	e0 e5       	ldi	r30, 0x50	; 80
     eaa:	f0 e0       	ldi	r31, 0x00	; 0
     eac:	80 81       	ld	r24, Z
     eae:	8f 77       	andi	r24, 0x7F	; 127
     eb0:	8c 93       	st	X, r24
	CLEAR_BIT(SFIOR,6);
     eb2:	a0 e5       	ldi	r26, 0x50	; 80
     eb4:	b0 e0       	ldi	r27, 0x00	; 0
     eb6:	e0 e5       	ldi	r30, 0x50	; 80
     eb8:	f0 e0       	ldi	r31, 0x00	; 0
     eba:	80 81       	ld	r24, Z
     ebc:	8f 7b       	andi	r24, 0xBF	; 191
     ebe:	8c 93       	st	X, r24
	CLEAR_BIT(SFIOR,5);
     ec0:	a0 e5       	ldi	r26, 0x50	; 80
     ec2:	b0 e0       	ldi	r27, 0x00	; 0
     ec4:	e0 e5       	ldi	r30, 0x50	; 80
     ec6:	f0 e0       	ldi	r31, 0x00	; 0
     ec8:	80 81       	ld	r24, Z
     eca:	8f 7d       	andi	r24, 0xDF	; 223
     ecc:	8c 93       	st	X, r24
	SET_BIT(SFIOR,5);
#endif

	/**********************************************************************************/

}
     ece:	cf 91       	pop	r28
     ed0:	df 91       	pop	r29
     ed2:	08 95       	ret

00000ed4 <ADC_u16ConvertChannel>:


u16 ADC_u16ConvertChannel(u8 channel)
{
     ed4:	df 93       	push	r29
     ed6:	cf 93       	push	r28
     ed8:	00 d0       	rcall	.+0      	; 0xeda <ADC_u16ConvertChannel+0x6>
     eda:	00 d0       	rcall	.+0      	; 0xedc <ADC_u16ConvertChannel+0x8>
     edc:	cd b7       	in	r28, 0x3d	; 61
     ede:	de b7       	in	r29, 0x3e	; 62
     ee0:	8c 83       	std	Y+4, r24	; 0x04

	channel &=0x1f;  //to make sure that 3 high bits are set to zeros(masking)
     ee2:	8c 81       	ldd	r24, Y+4	; 0x04
     ee4:	8f 71       	andi	r24, 0x1F	; 31
     ee6:	8c 83       	std	Y+4, r24	; 0x04
	u8  Reg_Value;
	u16 ADC_Result=0;
     ee8:	1a 82       	std	Y+2, r1	; 0x02
     eea:	19 82       	std	Y+1, r1	; 0x01
	Reg_Value=ADMUX;
     eec:	e7 e2       	ldi	r30, 0x27	; 39
     eee:	f0 e0       	ldi	r31, 0x00	; 0
     ef0:	80 81       	ld	r24, Z
     ef2:	8b 83       	std	Y+3, r24	; 0x03
	ADMUX=(Reg_Value&0xe0)|channel;    //b7afez 3lla awel 3 high bit w el ba2y be asfar 3ashan a7afez 3lla ADMUX(7,6,5)
     ef4:	e7 e2       	ldi	r30, 0x27	; 39
     ef6:	f0 e0       	ldi	r31, 0x00	; 0
     ef8:	8b 81       	ldd	r24, Y+3	; 0x03
     efa:	98 2f       	mov	r25, r24
     efc:	90 7e       	andi	r25, 0xE0	; 224
     efe:	8c 81       	ldd	r24, Y+4	; 0x04
     f00:	89 2b       	or	r24, r25
     f02:	80 83       	st	Z, r24

	/**********************auto trigger mode*******************/

#if Adc_u8AutoTrigger==Adc_u8Disable

	SET_BIT(ADCSRA,6);    //TO START CONVERSION
     f04:	a6 e2       	ldi	r26, 0x26	; 38
     f06:	b0 e0       	ldi	r27, 0x00	; 0
     f08:	e6 e2       	ldi	r30, 0x26	; 38
     f0a:	f0 e0       	ldi	r31, 0x00	; 0
     f0c:	80 81       	ld	r24, Z
     f0e:	80 64       	ori	r24, 0x40	; 64
     f10:	8c 93       	st	X, r24

#endif

	/***************************************************/

	while (GET_BIT(ADCSRA,4)==0);   //TO MAKE SURE THAT THE CONVERSION WAS HAPPENED
     f12:	e6 e2       	ldi	r30, 0x26	; 38
     f14:	f0 e0       	ldi	r31, 0x00	; 0
     f16:	80 81       	ld	r24, Z
     f18:	82 95       	swap	r24
     f1a:	8f 70       	andi	r24, 0x0F	; 15
     f1c:	88 2f       	mov	r24, r24
     f1e:	90 e0       	ldi	r25, 0x00	; 0
     f20:	81 70       	andi	r24, 0x01	; 1
     f22:	90 70       	andi	r25, 0x00	; 0
     f24:	00 97       	sbiw	r24, 0x00	; 0
     f26:	a9 f3       	breq	.-22     	; 0xf12 <ADC_u16ConvertChannel+0x3e>
	SET_BIT(ADCSRA,4);   //CLEAR CONVERSION FLAG
     f28:	a6 e2       	ldi	r26, 0x26	; 38
     f2a:	b0 e0       	ldi	r27, 0x00	; 0
     f2c:	e6 e2       	ldi	r30, 0x26	; 38
     f2e:	f0 e0       	ldi	r31, 0x00	; 0
     f30:	80 81       	ld	r24, Z
     f32:	80 61       	ori	r24, 0x10	; 16
     f34:	8c 93       	st	X, r24

#if Adc_u8Adjust==Adc_u8RightAdjust
	ADC_Result=ADCL;    //MOVE LOW PART FOR CONVERSION TO RETURNING VALUE
	ADC_Result |=(ADCH<<8);   //MOVE HIGH PART FOR CONVERSION TO RETURNING VALUE
#elif Adc_u8Adjust==Adc_u8LeftAdjust
	ADC_Result=ADCH;    //MOVE HIGH PART FOR CONVERSION TO RETURNING VALUE
     f36:	e5 e2       	ldi	r30, 0x25	; 37
     f38:	f0 e0       	ldi	r31, 0x00	; 0
     f3a:	80 81       	ld	r24, Z
     f3c:	88 2f       	mov	r24, r24
     f3e:	90 e0       	ldi	r25, 0x00	; 0
     f40:	9a 83       	std	Y+2, r25	; 0x02
     f42:	89 83       	std	Y+1, r24	; 0x01
#endif

	/*********************************************************/

	return ADC_Result;
     f44:	89 81       	ldd	r24, Y+1	; 0x01
     f46:	9a 81       	ldd	r25, Y+2	; 0x02

}
     f48:	0f 90       	pop	r0
     f4a:	0f 90       	pop	r0
     f4c:	0f 90       	pop	r0
     f4e:	0f 90       	pop	r0
     f50:	cf 91       	pop	r28
     f52:	df 91       	pop	r29
     f54:	08 95       	ret

00000f56 <Dio_vidSetPinDir>:

#include "DIO_priv.h"


void Dio_vidSetPinDir(u8 Pin,u8 Dir)
{
     f56:	df 93       	push	r29
     f58:	cf 93       	push	r28
     f5a:	00 d0       	rcall	.+0      	; 0xf5c <Dio_vidSetPinDir+0x6>
     f5c:	00 d0       	rcall	.+0      	; 0xf5e <Dio_vidSetPinDir+0x8>
     f5e:	00 d0       	rcall	.+0      	; 0xf60 <Dio_vidSetPinDir+0xa>
     f60:	cd b7       	in	r28, 0x3d	; 61
     f62:	de b7       	in	r29, 0x3e	; 62
     f64:	8b 83       	std	Y+3, r24	; 0x03
     f66:	6c 83       	std	Y+4, r22	; 0x04
	u8 Loc_u8Port;
	u8 Loc_u8Pin;
	Loc_u8Port=Pin/8;
     f68:	8b 81       	ldd	r24, Y+3	; 0x03
     f6a:	86 95       	lsr	r24
     f6c:	86 95       	lsr	r24
     f6e:	86 95       	lsr	r24
     f70:	8a 83       	std	Y+2, r24	; 0x02
	Loc_u8Pin=Pin%8;
     f72:	8b 81       	ldd	r24, Y+3	; 0x03
     f74:	87 70       	andi	r24, 0x07	; 7
     f76:	89 83       	std	Y+1, r24	; 0x01
	switch(Loc_u8Port)
     f78:	8a 81       	ldd	r24, Y+2	; 0x02
     f7a:	28 2f       	mov	r18, r24
     f7c:	30 e0       	ldi	r19, 0x00	; 0
     f7e:	3e 83       	std	Y+6, r19	; 0x06
     f80:	2d 83       	std	Y+5, r18	; 0x05
     f82:	8d 81       	ldd	r24, Y+5	; 0x05
     f84:	9e 81       	ldd	r25, Y+6	; 0x06
     f86:	81 30       	cpi	r24, 0x01	; 1
     f88:	91 05       	cpc	r25, r1
     f8a:	09 f4       	brne	.+2      	; 0xf8e <Dio_vidSetPinDir+0x38>
     f8c:	43 c0       	rjmp	.+134    	; 0x1014 <Dio_vidSetPinDir+0xbe>
     f8e:	2d 81       	ldd	r18, Y+5	; 0x05
     f90:	3e 81       	ldd	r19, Y+6	; 0x06
     f92:	22 30       	cpi	r18, 0x02	; 2
     f94:	31 05       	cpc	r19, r1
     f96:	2c f4       	brge	.+10     	; 0xfa2 <Dio_vidSetPinDir+0x4c>
     f98:	8d 81       	ldd	r24, Y+5	; 0x05
     f9a:	9e 81       	ldd	r25, Y+6	; 0x06
     f9c:	00 97       	sbiw	r24, 0x00	; 0
     f9e:	71 f0       	breq	.+28     	; 0xfbc <Dio_vidSetPinDir+0x66>
     fa0:	bc c0       	rjmp	.+376    	; 0x111a <Dio_vidSetPinDir+0x1c4>
     fa2:	2d 81       	ldd	r18, Y+5	; 0x05
     fa4:	3e 81       	ldd	r19, Y+6	; 0x06
     fa6:	22 30       	cpi	r18, 0x02	; 2
     fa8:	31 05       	cpc	r19, r1
     faa:	09 f4       	brne	.+2      	; 0xfae <Dio_vidSetPinDir+0x58>
     fac:	5f c0       	rjmp	.+190    	; 0x106c <Dio_vidSetPinDir+0x116>
     fae:	8d 81       	ldd	r24, Y+5	; 0x05
     fb0:	9e 81       	ldd	r25, Y+6	; 0x06
     fb2:	83 30       	cpi	r24, 0x03	; 3
     fb4:	91 05       	cpc	r25, r1
     fb6:	09 f4       	brne	.+2      	; 0xfba <Dio_vidSetPinDir+0x64>
     fb8:	85 c0       	rjmp	.+266    	; 0x10c4 <Dio_vidSetPinDir+0x16e>
     fba:	af c0       	rjmp	.+350    	; 0x111a <Dio_vidSetPinDir+0x1c4>
	{
	case 0:
		if (Dir==1)
     fbc:	8c 81       	ldd	r24, Y+4	; 0x04
     fbe:	81 30       	cpi	r24, 0x01	; 1
     fc0:	a1 f4       	brne	.+40     	; 0xfea <Dio_vidSetPinDir+0x94>
		{
			SET_BIT(DDRA,Loc_u8Pin);
     fc2:	aa e3       	ldi	r26, 0x3A	; 58
     fc4:	b0 e0       	ldi	r27, 0x00	; 0
     fc6:	ea e3       	ldi	r30, 0x3A	; 58
     fc8:	f0 e0       	ldi	r31, 0x00	; 0
     fca:	80 81       	ld	r24, Z
     fcc:	48 2f       	mov	r20, r24
     fce:	89 81       	ldd	r24, Y+1	; 0x01
     fd0:	28 2f       	mov	r18, r24
     fd2:	30 e0       	ldi	r19, 0x00	; 0
     fd4:	81 e0       	ldi	r24, 0x01	; 1
     fd6:	90 e0       	ldi	r25, 0x00	; 0
     fd8:	02 2e       	mov	r0, r18
     fda:	02 c0       	rjmp	.+4      	; 0xfe0 <Dio_vidSetPinDir+0x8a>
     fdc:	88 0f       	add	r24, r24
     fde:	99 1f       	adc	r25, r25
     fe0:	0a 94       	dec	r0
     fe2:	e2 f7       	brpl	.-8      	; 0xfdc <Dio_vidSetPinDir+0x86>
     fe4:	84 2b       	or	r24, r20
     fe6:	8c 93       	st	X, r24
     fe8:	98 c0       	rjmp	.+304    	; 0x111a <Dio_vidSetPinDir+0x1c4>
		}
		else
		{
			CLEAR_BIT(DDRA,Loc_u8Pin);
     fea:	aa e3       	ldi	r26, 0x3A	; 58
     fec:	b0 e0       	ldi	r27, 0x00	; 0
     fee:	ea e3       	ldi	r30, 0x3A	; 58
     ff0:	f0 e0       	ldi	r31, 0x00	; 0
     ff2:	80 81       	ld	r24, Z
     ff4:	48 2f       	mov	r20, r24
     ff6:	89 81       	ldd	r24, Y+1	; 0x01
     ff8:	28 2f       	mov	r18, r24
     ffa:	30 e0       	ldi	r19, 0x00	; 0
     ffc:	81 e0       	ldi	r24, 0x01	; 1
     ffe:	90 e0       	ldi	r25, 0x00	; 0
    1000:	02 2e       	mov	r0, r18
    1002:	02 c0       	rjmp	.+4      	; 0x1008 <Dio_vidSetPinDir+0xb2>
    1004:	88 0f       	add	r24, r24
    1006:	99 1f       	adc	r25, r25
    1008:	0a 94       	dec	r0
    100a:	e2 f7       	brpl	.-8      	; 0x1004 <Dio_vidSetPinDir+0xae>
    100c:	80 95       	com	r24
    100e:	84 23       	and	r24, r20
    1010:	8c 93       	st	X, r24
    1012:	83 c0       	rjmp	.+262    	; 0x111a <Dio_vidSetPinDir+0x1c4>
		}
		break;
	case 1:
		if (Dir==1)
    1014:	8c 81       	ldd	r24, Y+4	; 0x04
    1016:	81 30       	cpi	r24, 0x01	; 1
    1018:	a1 f4       	brne	.+40     	; 0x1042 <Dio_vidSetPinDir+0xec>
		{
			SET_BIT(DDRB,Loc_u8Pin);
    101a:	a7 e3       	ldi	r26, 0x37	; 55
    101c:	b0 e0       	ldi	r27, 0x00	; 0
    101e:	e7 e3       	ldi	r30, 0x37	; 55
    1020:	f0 e0       	ldi	r31, 0x00	; 0
    1022:	80 81       	ld	r24, Z
    1024:	48 2f       	mov	r20, r24
    1026:	89 81       	ldd	r24, Y+1	; 0x01
    1028:	28 2f       	mov	r18, r24
    102a:	30 e0       	ldi	r19, 0x00	; 0
    102c:	81 e0       	ldi	r24, 0x01	; 1
    102e:	90 e0       	ldi	r25, 0x00	; 0
    1030:	02 2e       	mov	r0, r18
    1032:	02 c0       	rjmp	.+4      	; 0x1038 <Dio_vidSetPinDir+0xe2>
    1034:	88 0f       	add	r24, r24
    1036:	99 1f       	adc	r25, r25
    1038:	0a 94       	dec	r0
    103a:	e2 f7       	brpl	.-8      	; 0x1034 <Dio_vidSetPinDir+0xde>
    103c:	84 2b       	or	r24, r20
    103e:	8c 93       	st	X, r24
    1040:	6c c0       	rjmp	.+216    	; 0x111a <Dio_vidSetPinDir+0x1c4>
		}
		else
		{
			CLEAR_BIT(DDRB,Loc_u8Pin);
    1042:	a7 e3       	ldi	r26, 0x37	; 55
    1044:	b0 e0       	ldi	r27, 0x00	; 0
    1046:	e7 e3       	ldi	r30, 0x37	; 55
    1048:	f0 e0       	ldi	r31, 0x00	; 0
    104a:	80 81       	ld	r24, Z
    104c:	48 2f       	mov	r20, r24
    104e:	89 81       	ldd	r24, Y+1	; 0x01
    1050:	28 2f       	mov	r18, r24
    1052:	30 e0       	ldi	r19, 0x00	; 0
    1054:	81 e0       	ldi	r24, 0x01	; 1
    1056:	90 e0       	ldi	r25, 0x00	; 0
    1058:	02 2e       	mov	r0, r18
    105a:	02 c0       	rjmp	.+4      	; 0x1060 <Dio_vidSetPinDir+0x10a>
    105c:	88 0f       	add	r24, r24
    105e:	99 1f       	adc	r25, r25
    1060:	0a 94       	dec	r0
    1062:	e2 f7       	brpl	.-8      	; 0x105c <Dio_vidSetPinDir+0x106>
    1064:	80 95       	com	r24
    1066:	84 23       	and	r24, r20
    1068:	8c 93       	st	X, r24
    106a:	57 c0       	rjmp	.+174    	; 0x111a <Dio_vidSetPinDir+0x1c4>
		}
		break;
	case 2:
		if (Dir==1)
    106c:	8c 81       	ldd	r24, Y+4	; 0x04
    106e:	81 30       	cpi	r24, 0x01	; 1
    1070:	a1 f4       	brne	.+40     	; 0x109a <Dio_vidSetPinDir+0x144>
		{
			SET_BIT(DDRC,Loc_u8Pin);
    1072:	a4 e3       	ldi	r26, 0x34	; 52
    1074:	b0 e0       	ldi	r27, 0x00	; 0
    1076:	e4 e3       	ldi	r30, 0x34	; 52
    1078:	f0 e0       	ldi	r31, 0x00	; 0
    107a:	80 81       	ld	r24, Z
    107c:	48 2f       	mov	r20, r24
    107e:	89 81       	ldd	r24, Y+1	; 0x01
    1080:	28 2f       	mov	r18, r24
    1082:	30 e0       	ldi	r19, 0x00	; 0
    1084:	81 e0       	ldi	r24, 0x01	; 1
    1086:	90 e0       	ldi	r25, 0x00	; 0
    1088:	02 2e       	mov	r0, r18
    108a:	02 c0       	rjmp	.+4      	; 0x1090 <Dio_vidSetPinDir+0x13a>
    108c:	88 0f       	add	r24, r24
    108e:	99 1f       	adc	r25, r25
    1090:	0a 94       	dec	r0
    1092:	e2 f7       	brpl	.-8      	; 0x108c <Dio_vidSetPinDir+0x136>
    1094:	84 2b       	or	r24, r20
    1096:	8c 93       	st	X, r24
    1098:	40 c0       	rjmp	.+128    	; 0x111a <Dio_vidSetPinDir+0x1c4>
		}
		else
		{
			CLEAR_BIT(DDRC,Loc_u8Pin);
    109a:	a4 e3       	ldi	r26, 0x34	; 52
    109c:	b0 e0       	ldi	r27, 0x00	; 0
    109e:	e4 e3       	ldi	r30, 0x34	; 52
    10a0:	f0 e0       	ldi	r31, 0x00	; 0
    10a2:	80 81       	ld	r24, Z
    10a4:	48 2f       	mov	r20, r24
    10a6:	89 81       	ldd	r24, Y+1	; 0x01
    10a8:	28 2f       	mov	r18, r24
    10aa:	30 e0       	ldi	r19, 0x00	; 0
    10ac:	81 e0       	ldi	r24, 0x01	; 1
    10ae:	90 e0       	ldi	r25, 0x00	; 0
    10b0:	02 2e       	mov	r0, r18
    10b2:	02 c0       	rjmp	.+4      	; 0x10b8 <Dio_vidSetPinDir+0x162>
    10b4:	88 0f       	add	r24, r24
    10b6:	99 1f       	adc	r25, r25
    10b8:	0a 94       	dec	r0
    10ba:	e2 f7       	brpl	.-8      	; 0x10b4 <Dio_vidSetPinDir+0x15e>
    10bc:	80 95       	com	r24
    10be:	84 23       	and	r24, r20
    10c0:	8c 93       	st	X, r24
    10c2:	2b c0       	rjmp	.+86     	; 0x111a <Dio_vidSetPinDir+0x1c4>
		}
		break;
	case 3:
		if (Dir==1)
    10c4:	8c 81       	ldd	r24, Y+4	; 0x04
    10c6:	81 30       	cpi	r24, 0x01	; 1
    10c8:	a1 f4       	brne	.+40     	; 0x10f2 <Dio_vidSetPinDir+0x19c>
		{
			SET_BIT(DDRD,Loc_u8Pin);
    10ca:	a1 e3       	ldi	r26, 0x31	; 49
    10cc:	b0 e0       	ldi	r27, 0x00	; 0
    10ce:	e1 e3       	ldi	r30, 0x31	; 49
    10d0:	f0 e0       	ldi	r31, 0x00	; 0
    10d2:	80 81       	ld	r24, Z
    10d4:	48 2f       	mov	r20, r24
    10d6:	89 81       	ldd	r24, Y+1	; 0x01
    10d8:	28 2f       	mov	r18, r24
    10da:	30 e0       	ldi	r19, 0x00	; 0
    10dc:	81 e0       	ldi	r24, 0x01	; 1
    10de:	90 e0       	ldi	r25, 0x00	; 0
    10e0:	02 2e       	mov	r0, r18
    10e2:	02 c0       	rjmp	.+4      	; 0x10e8 <Dio_vidSetPinDir+0x192>
    10e4:	88 0f       	add	r24, r24
    10e6:	99 1f       	adc	r25, r25
    10e8:	0a 94       	dec	r0
    10ea:	e2 f7       	brpl	.-8      	; 0x10e4 <Dio_vidSetPinDir+0x18e>
    10ec:	84 2b       	or	r24, r20
    10ee:	8c 93       	st	X, r24
    10f0:	14 c0       	rjmp	.+40     	; 0x111a <Dio_vidSetPinDir+0x1c4>
		}
		else
		{
			CLEAR_BIT(DDRD,Loc_u8Pin);
    10f2:	a1 e3       	ldi	r26, 0x31	; 49
    10f4:	b0 e0       	ldi	r27, 0x00	; 0
    10f6:	e1 e3       	ldi	r30, 0x31	; 49
    10f8:	f0 e0       	ldi	r31, 0x00	; 0
    10fa:	80 81       	ld	r24, Z
    10fc:	48 2f       	mov	r20, r24
    10fe:	89 81       	ldd	r24, Y+1	; 0x01
    1100:	28 2f       	mov	r18, r24
    1102:	30 e0       	ldi	r19, 0x00	; 0
    1104:	81 e0       	ldi	r24, 0x01	; 1
    1106:	90 e0       	ldi	r25, 0x00	; 0
    1108:	02 2e       	mov	r0, r18
    110a:	02 c0       	rjmp	.+4      	; 0x1110 <Dio_vidSetPinDir+0x1ba>
    110c:	88 0f       	add	r24, r24
    110e:	99 1f       	adc	r25, r25
    1110:	0a 94       	dec	r0
    1112:	e2 f7       	brpl	.-8      	; 0x110c <Dio_vidSetPinDir+0x1b6>
    1114:	80 95       	com	r24
    1116:	84 23       	and	r24, r20
    1118:	8c 93       	st	X, r24
		}
		break;
	}

}
    111a:	26 96       	adiw	r28, 0x06	; 6
    111c:	0f b6       	in	r0, 0x3f	; 63
    111e:	f8 94       	cli
    1120:	de bf       	out	0x3e, r29	; 62
    1122:	0f be       	out	0x3f, r0	; 63
    1124:	cd bf       	out	0x3d, r28	; 61
    1126:	cf 91       	pop	r28
    1128:	df 91       	pop	r29
    112a:	08 95       	ret

0000112c <Dio_vidSetPinVal>:

void Dio_vidSetPinVal(u8 Pin,u8 Val)
{
    112c:	df 93       	push	r29
    112e:	cf 93       	push	r28
    1130:	00 d0       	rcall	.+0      	; 0x1132 <Dio_vidSetPinVal+0x6>
    1132:	00 d0       	rcall	.+0      	; 0x1134 <Dio_vidSetPinVal+0x8>
    1134:	00 d0       	rcall	.+0      	; 0x1136 <Dio_vidSetPinVal+0xa>
    1136:	cd b7       	in	r28, 0x3d	; 61
    1138:	de b7       	in	r29, 0x3e	; 62
    113a:	8b 83       	std	Y+3, r24	; 0x03
    113c:	6c 83       	std	Y+4, r22	; 0x04
	u8 Loc_u8Port;
	u8 Loc_u8Pin;
	Loc_u8Port=Pin/8;
    113e:	8b 81       	ldd	r24, Y+3	; 0x03
    1140:	86 95       	lsr	r24
    1142:	86 95       	lsr	r24
    1144:	86 95       	lsr	r24
    1146:	8a 83       	std	Y+2, r24	; 0x02
	Loc_u8Pin=Pin%8;
    1148:	8b 81       	ldd	r24, Y+3	; 0x03
    114a:	87 70       	andi	r24, 0x07	; 7
    114c:	89 83       	std	Y+1, r24	; 0x01
	switch(Loc_u8Port)
    114e:	8a 81       	ldd	r24, Y+2	; 0x02
    1150:	28 2f       	mov	r18, r24
    1152:	30 e0       	ldi	r19, 0x00	; 0
    1154:	3e 83       	std	Y+6, r19	; 0x06
    1156:	2d 83       	std	Y+5, r18	; 0x05
    1158:	8d 81       	ldd	r24, Y+5	; 0x05
    115a:	9e 81       	ldd	r25, Y+6	; 0x06
    115c:	81 30       	cpi	r24, 0x01	; 1
    115e:	91 05       	cpc	r25, r1
    1160:	09 f4       	brne	.+2      	; 0x1164 <Dio_vidSetPinVal+0x38>
    1162:	43 c0       	rjmp	.+134    	; 0x11ea <Dio_vidSetPinVal+0xbe>
    1164:	2d 81       	ldd	r18, Y+5	; 0x05
    1166:	3e 81       	ldd	r19, Y+6	; 0x06
    1168:	22 30       	cpi	r18, 0x02	; 2
    116a:	31 05       	cpc	r19, r1
    116c:	2c f4       	brge	.+10     	; 0x1178 <Dio_vidSetPinVal+0x4c>
    116e:	8d 81       	ldd	r24, Y+5	; 0x05
    1170:	9e 81       	ldd	r25, Y+6	; 0x06
    1172:	00 97       	sbiw	r24, 0x00	; 0
    1174:	71 f0       	breq	.+28     	; 0x1192 <Dio_vidSetPinVal+0x66>
    1176:	bc c0       	rjmp	.+376    	; 0x12f0 <Dio_vidSetPinVal+0x1c4>
    1178:	2d 81       	ldd	r18, Y+5	; 0x05
    117a:	3e 81       	ldd	r19, Y+6	; 0x06
    117c:	22 30       	cpi	r18, 0x02	; 2
    117e:	31 05       	cpc	r19, r1
    1180:	09 f4       	brne	.+2      	; 0x1184 <Dio_vidSetPinVal+0x58>
    1182:	5f c0       	rjmp	.+190    	; 0x1242 <Dio_vidSetPinVal+0x116>
    1184:	8d 81       	ldd	r24, Y+5	; 0x05
    1186:	9e 81       	ldd	r25, Y+6	; 0x06
    1188:	83 30       	cpi	r24, 0x03	; 3
    118a:	91 05       	cpc	r25, r1
    118c:	09 f4       	brne	.+2      	; 0x1190 <Dio_vidSetPinVal+0x64>
    118e:	85 c0       	rjmp	.+266    	; 0x129a <Dio_vidSetPinVal+0x16e>
    1190:	af c0       	rjmp	.+350    	; 0x12f0 <Dio_vidSetPinVal+0x1c4>
	{
	case 0:
		if (Val==1)
    1192:	8c 81       	ldd	r24, Y+4	; 0x04
    1194:	81 30       	cpi	r24, 0x01	; 1
    1196:	a1 f4       	brne	.+40     	; 0x11c0 <Dio_vidSetPinVal+0x94>
		{
			SET_BIT(PORTA,Loc_u8Pin);
    1198:	ab e3       	ldi	r26, 0x3B	; 59
    119a:	b0 e0       	ldi	r27, 0x00	; 0
    119c:	eb e3       	ldi	r30, 0x3B	; 59
    119e:	f0 e0       	ldi	r31, 0x00	; 0
    11a0:	80 81       	ld	r24, Z
    11a2:	48 2f       	mov	r20, r24
    11a4:	89 81       	ldd	r24, Y+1	; 0x01
    11a6:	28 2f       	mov	r18, r24
    11a8:	30 e0       	ldi	r19, 0x00	; 0
    11aa:	81 e0       	ldi	r24, 0x01	; 1
    11ac:	90 e0       	ldi	r25, 0x00	; 0
    11ae:	02 2e       	mov	r0, r18
    11b0:	02 c0       	rjmp	.+4      	; 0x11b6 <Dio_vidSetPinVal+0x8a>
    11b2:	88 0f       	add	r24, r24
    11b4:	99 1f       	adc	r25, r25
    11b6:	0a 94       	dec	r0
    11b8:	e2 f7       	brpl	.-8      	; 0x11b2 <Dio_vidSetPinVal+0x86>
    11ba:	84 2b       	or	r24, r20
    11bc:	8c 93       	st	X, r24
    11be:	98 c0       	rjmp	.+304    	; 0x12f0 <Dio_vidSetPinVal+0x1c4>
		}
		else
		{
			CLEAR_BIT(PORTA,Loc_u8Pin);
    11c0:	ab e3       	ldi	r26, 0x3B	; 59
    11c2:	b0 e0       	ldi	r27, 0x00	; 0
    11c4:	eb e3       	ldi	r30, 0x3B	; 59
    11c6:	f0 e0       	ldi	r31, 0x00	; 0
    11c8:	80 81       	ld	r24, Z
    11ca:	48 2f       	mov	r20, r24
    11cc:	89 81       	ldd	r24, Y+1	; 0x01
    11ce:	28 2f       	mov	r18, r24
    11d0:	30 e0       	ldi	r19, 0x00	; 0
    11d2:	81 e0       	ldi	r24, 0x01	; 1
    11d4:	90 e0       	ldi	r25, 0x00	; 0
    11d6:	02 2e       	mov	r0, r18
    11d8:	02 c0       	rjmp	.+4      	; 0x11de <Dio_vidSetPinVal+0xb2>
    11da:	88 0f       	add	r24, r24
    11dc:	99 1f       	adc	r25, r25
    11de:	0a 94       	dec	r0
    11e0:	e2 f7       	brpl	.-8      	; 0x11da <Dio_vidSetPinVal+0xae>
    11e2:	80 95       	com	r24
    11e4:	84 23       	and	r24, r20
    11e6:	8c 93       	st	X, r24
    11e8:	83 c0       	rjmp	.+262    	; 0x12f0 <Dio_vidSetPinVal+0x1c4>
		}
		break;
	case 1:
		if (Val==1)
    11ea:	8c 81       	ldd	r24, Y+4	; 0x04
    11ec:	81 30       	cpi	r24, 0x01	; 1
    11ee:	a1 f4       	brne	.+40     	; 0x1218 <Dio_vidSetPinVal+0xec>
		{
			SET_BIT(PORTB,Loc_u8Pin);
    11f0:	a8 e3       	ldi	r26, 0x38	; 56
    11f2:	b0 e0       	ldi	r27, 0x00	; 0
    11f4:	e8 e3       	ldi	r30, 0x38	; 56
    11f6:	f0 e0       	ldi	r31, 0x00	; 0
    11f8:	80 81       	ld	r24, Z
    11fa:	48 2f       	mov	r20, r24
    11fc:	89 81       	ldd	r24, Y+1	; 0x01
    11fe:	28 2f       	mov	r18, r24
    1200:	30 e0       	ldi	r19, 0x00	; 0
    1202:	81 e0       	ldi	r24, 0x01	; 1
    1204:	90 e0       	ldi	r25, 0x00	; 0
    1206:	02 2e       	mov	r0, r18
    1208:	02 c0       	rjmp	.+4      	; 0x120e <Dio_vidSetPinVal+0xe2>
    120a:	88 0f       	add	r24, r24
    120c:	99 1f       	adc	r25, r25
    120e:	0a 94       	dec	r0
    1210:	e2 f7       	brpl	.-8      	; 0x120a <Dio_vidSetPinVal+0xde>
    1212:	84 2b       	or	r24, r20
    1214:	8c 93       	st	X, r24
    1216:	6c c0       	rjmp	.+216    	; 0x12f0 <Dio_vidSetPinVal+0x1c4>
		}
		else
		{
			CLEAR_BIT(PORTB,Loc_u8Pin);
    1218:	a8 e3       	ldi	r26, 0x38	; 56
    121a:	b0 e0       	ldi	r27, 0x00	; 0
    121c:	e8 e3       	ldi	r30, 0x38	; 56
    121e:	f0 e0       	ldi	r31, 0x00	; 0
    1220:	80 81       	ld	r24, Z
    1222:	48 2f       	mov	r20, r24
    1224:	89 81       	ldd	r24, Y+1	; 0x01
    1226:	28 2f       	mov	r18, r24
    1228:	30 e0       	ldi	r19, 0x00	; 0
    122a:	81 e0       	ldi	r24, 0x01	; 1
    122c:	90 e0       	ldi	r25, 0x00	; 0
    122e:	02 2e       	mov	r0, r18
    1230:	02 c0       	rjmp	.+4      	; 0x1236 <Dio_vidSetPinVal+0x10a>
    1232:	88 0f       	add	r24, r24
    1234:	99 1f       	adc	r25, r25
    1236:	0a 94       	dec	r0
    1238:	e2 f7       	brpl	.-8      	; 0x1232 <Dio_vidSetPinVal+0x106>
    123a:	80 95       	com	r24
    123c:	84 23       	and	r24, r20
    123e:	8c 93       	st	X, r24
    1240:	57 c0       	rjmp	.+174    	; 0x12f0 <Dio_vidSetPinVal+0x1c4>
		}
		break;
	case 2:
		if (Val==1)
    1242:	8c 81       	ldd	r24, Y+4	; 0x04
    1244:	81 30       	cpi	r24, 0x01	; 1
    1246:	a1 f4       	brne	.+40     	; 0x1270 <Dio_vidSetPinVal+0x144>
		{
			SET_BIT(PORTC,Loc_u8Pin);
    1248:	a5 e3       	ldi	r26, 0x35	; 53
    124a:	b0 e0       	ldi	r27, 0x00	; 0
    124c:	e5 e3       	ldi	r30, 0x35	; 53
    124e:	f0 e0       	ldi	r31, 0x00	; 0
    1250:	80 81       	ld	r24, Z
    1252:	48 2f       	mov	r20, r24
    1254:	89 81       	ldd	r24, Y+1	; 0x01
    1256:	28 2f       	mov	r18, r24
    1258:	30 e0       	ldi	r19, 0x00	; 0
    125a:	81 e0       	ldi	r24, 0x01	; 1
    125c:	90 e0       	ldi	r25, 0x00	; 0
    125e:	02 2e       	mov	r0, r18
    1260:	02 c0       	rjmp	.+4      	; 0x1266 <Dio_vidSetPinVal+0x13a>
    1262:	88 0f       	add	r24, r24
    1264:	99 1f       	adc	r25, r25
    1266:	0a 94       	dec	r0
    1268:	e2 f7       	brpl	.-8      	; 0x1262 <Dio_vidSetPinVal+0x136>
    126a:	84 2b       	or	r24, r20
    126c:	8c 93       	st	X, r24
    126e:	40 c0       	rjmp	.+128    	; 0x12f0 <Dio_vidSetPinVal+0x1c4>
		}
		else
		{
			CLEAR_BIT(PORTC,Loc_u8Pin);
    1270:	a5 e3       	ldi	r26, 0x35	; 53
    1272:	b0 e0       	ldi	r27, 0x00	; 0
    1274:	e5 e3       	ldi	r30, 0x35	; 53
    1276:	f0 e0       	ldi	r31, 0x00	; 0
    1278:	80 81       	ld	r24, Z
    127a:	48 2f       	mov	r20, r24
    127c:	89 81       	ldd	r24, Y+1	; 0x01
    127e:	28 2f       	mov	r18, r24
    1280:	30 e0       	ldi	r19, 0x00	; 0
    1282:	81 e0       	ldi	r24, 0x01	; 1
    1284:	90 e0       	ldi	r25, 0x00	; 0
    1286:	02 2e       	mov	r0, r18
    1288:	02 c0       	rjmp	.+4      	; 0x128e <Dio_vidSetPinVal+0x162>
    128a:	88 0f       	add	r24, r24
    128c:	99 1f       	adc	r25, r25
    128e:	0a 94       	dec	r0
    1290:	e2 f7       	brpl	.-8      	; 0x128a <Dio_vidSetPinVal+0x15e>
    1292:	80 95       	com	r24
    1294:	84 23       	and	r24, r20
    1296:	8c 93       	st	X, r24
    1298:	2b c0       	rjmp	.+86     	; 0x12f0 <Dio_vidSetPinVal+0x1c4>
		}
		break;
	case 3:
		if (Val==1)
    129a:	8c 81       	ldd	r24, Y+4	; 0x04
    129c:	81 30       	cpi	r24, 0x01	; 1
    129e:	a1 f4       	brne	.+40     	; 0x12c8 <Dio_vidSetPinVal+0x19c>
		{
			SET_BIT(PORTD,Loc_u8Pin);
    12a0:	a2 e3       	ldi	r26, 0x32	; 50
    12a2:	b0 e0       	ldi	r27, 0x00	; 0
    12a4:	e2 e3       	ldi	r30, 0x32	; 50
    12a6:	f0 e0       	ldi	r31, 0x00	; 0
    12a8:	80 81       	ld	r24, Z
    12aa:	48 2f       	mov	r20, r24
    12ac:	89 81       	ldd	r24, Y+1	; 0x01
    12ae:	28 2f       	mov	r18, r24
    12b0:	30 e0       	ldi	r19, 0x00	; 0
    12b2:	81 e0       	ldi	r24, 0x01	; 1
    12b4:	90 e0       	ldi	r25, 0x00	; 0
    12b6:	02 2e       	mov	r0, r18
    12b8:	02 c0       	rjmp	.+4      	; 0x12be <Dio_vidSetPinVal+0x192>
    12ba:	88 0f       	add	r24, r24
    12bc:	99 1f       	adc	r25, r25
    12be:	0a 94       	dec	r0
    12c0:	e2 f7       	brpl	.-8      	; 0x12ba <Dio_vidSetPinVal+0x18e>
    12c2:	84 2b       	or	r24, r20
    12c4:	8c 93       	st	X, r24
    12c6:	14 c0       	rjmp	.+40     	; 0x12f0 <Dio_vidSetPinVal+0x1c4>
		}
		else
		{
			CLEAR_BIT(PORTD,Loc_u8Pin);
    12c8:	a2 e3       	ldi	r26, 0x32	; 50
    12ca:	b0 e0       	ldi	r27, 0x00	; 0
    12cc:	e2 e3       	ldi	r30, 0x32	; 50
    12ce:	f0 e0       	ldi	r31, 0x00	; 0
    12d0:	80 81       	ld	r24, Z
    12d2:	48 2f       	mov	r20, r24
    12d4:	89 81       	ldd	r24, Y+1	; 0x01
    12d6:	28 2f       	mov	r18, r24
    12d8:	30 e0       	ldi	r19, 0x00	; 0
    12da:	81 e0       	ldi	r24, 0x01	; 1
    12dc:	90 e0       	ldi	r25, 0x00	; 0
    12de:	02 2e       	mov	r0, r18
    12e0:	02 c0       	rjmp	.+4      	; 0x12e6 <Dio_vidSetPinVal+0x1ba>
    12e2:	88 0f       	add	r24, r24
    12e4:	99 1f       	adc	r25, r25
    12e6:	0a 94       	dec	r0
    12e8:	e2 f7       	brpl	.-8      	; 0x12e2 <Dio_vidSetPinVal+0x1b6>
    12ea:	80 95       	com	r24
    12ec:	84 23       	and	r24, r20
    12ee:	8c 93       	st	X, r24
		}
		break;
	}
}
    12f0:	26 96       	adiw	r28, 0x06	; 6
    12f2:	0f b6       	in	r0, 0x3f	; 63
    12f4:	f8 94       	cli
    12f6:	de bf       	out	0x3e, r29	; 62
    12f8:	0f be       	out	0x3f, r0	; 63
    12fa:	cd bf       	out	0x3d, r28	; 61
    12fc:	cf 91       	pop	r28
    12fe:	df 91       	pop	r29
    1300:	08 95       	ret

00001302 <Dio_u8GetPinVal>:

u8 Dio_u8GetPinVal(u8 Pin)  //to get pin value from keypad to micro controller
{
    1302:	df 93       	push	r29
    1304:	cf 93       	push	r28
    1306:	cd b7       	in	r28, 0x3d	; 61
    1308:	de b7       	in	r29, 0x3e	; 62
    130a:	27 97       	sbiw	r28, 0x07	; 7
    130c:	0f b6       	in	r0, 0x3f	; 63
    130e:	f8 94       	cli
    1310:	de bf       	out	0x3e, r29	; 62
    1312:	0f be       	out	0x3f, r0	; 63
    1314:	cd bf       	out	0x3d, r28	; 61
    1316:	8b 83       	std	Y+3, r24	; 0x03
	u8 Loc_u8Port;
	u8 Loc_u8pin;
	Loc_u8Port =Pin / 8;
    1318:	8b 81       	ldd	r24, Y+3	; 0x03
    131a:	86 95       	lsr	r24
    131c:	86 95       	lsr	r24
    131e:	86 95       	lsr	r24
    1320:	8a 83       	std	Y+2, r24	; 0x02
	Loc_u8pin = Pin % 8;
    1322:	8b 81       	ldd	r24, Y+3	; 0x03
    1324:	87 70       	andi	r24, 0x07	; 7
    1326:	89 83       	std	Y+1, r24	; 0x01
	switch(Loc_u8Port)
    1328:	8a 81       	ldd	r24, Y+2	; 0x02
    132a:	28 2f       	mov	r18, r24
    132c:	30 e0       	ldi	r19, 0x00	; 0
    132e:	3e 83       	std	Y+6, r19	; 0x06
    1330:	2d 83       	std	Y+5, r18	; 0x05
    1332:	4d 81       	ldd	r20, Y+5	; 0x05
    1334:	5e 81       	ldd	r21, Y+6	; 0x06
    1336:	41 30       	cpi	r20, 0x01	; 1
    1338:	51 05       	cpc	r21, r1
    133a:	49 f1       	breq	.+82     	; 0x138e <Dio_u8GetPinVal+0x8c>
    133c:	8d 81       	ldd	r24, Y+5	; 0x05
    133e:	9e 81       	ldd	r25, Y+6	; 0x06
    1340:	82 30       	cpi	r24, 0x02	; 2
    1342:	91 05       	cpc	r25, r1
    1344:	34 f4       	brge	.+12     	; 0x1352 <Dio_u8GetPinVal+0x50>
    1346:	2d 81       	ldd	r18, Y+5	; 0x05
    1348:	3e 81       	ldd	r19, Y+6	; 0x06
    134a:	21 15       	cp	r18, r1
    134c:	31 05       	cpc	r19, r1
    134e:	61 f0       	breq	.+24     	; 0x1368 <Dio_u8GetPinVal+0x66>
    1350:	57 c0       	rjmp	.+174    	; 0x1400 <Dio_u8GetPinVal+0xfe>
    1352:	4d 81       	ldd	r20, Y+5	; 0x05
    1354:	5e 81       	ldd	r21, Y+6	; 0x06
    1356:	42 30       	cpi	r20, 0x02	; 2
    1358:	51 05       	cpc	r21, r1
    135a:	61 f1       	breq	.+88     	; 0x13b4 <Dio_u8GetPinVal+0xb2>
    135c:	8d 81       	ldd	r24, Y+5	; 0x05
    135e:	9e 81       	ldd	r25, Y+6	; 0x06
    1360:	83 30       	cpi	r24, 0x03	; 3
    1362:	91 05       	cpc	r25, r1
    1364:	d1 f1       	breq	.+116    	; 0x13da <Dio_u8GetPinVal+0xd8>
    1366:	4c c0       	rjmp	.+152    	; 0x1400 <Dio_u8GetPinVal+0xfe>
	{
	case 0:
		return GET_BIT(PINA,Loc_u8pin);
    1368:	e9 e3       	ldi	r30, 0x39	; 57
    136a:	f0 e0       	ldi	r31, 0x00	; 0
    136c:	80 81       	ld	r24, Z
    136e:	28 2f       	mov	r18, r24
    1370:	30 e0       	ldi	r19, 0x00	; 0
    1372:	89 81       	ldd	r24, Y+1	; 0x01
    1374:	88 2f       	mov	r24, r24
    1376:	90 e0       	ldi	r25, 0x00	; 0
    1378:	a9 01       	movw	r20, r18
    137a:	02 c0       	rjmp	.+4      	; 0x1380 <Dio_u8GetPinVal+0x7e>
    137c:	55 95       	asr	r21
    137e:	47 95       	ror	r20
    1380:	8a 95       	dec	r24
    1382:	e2 f7       	brpl	.-8      	; 0x137c <Dio_u8GetPinVal+0x7a>
    1384:	ca 01       	movw	r24, r20
    1386:	58 2f       	mov	r21, r24
    1388:	51 70       	andi	r21, 0x01	; 1
    138a:	5c 83       	std	Y+4, r21	; 0x04
    138c:	3a c0       	rjmp	.+116    	; 0x1402 <Dio_u8GetPinVal+0x100>
		break ;
	case 1:
		return GET_BIT(PINB,Loc_u8pin);
    138e:	e6 e3       	ldi	r30, 0x36	; 54
    1390:	f0 e0       	ldi	r31, 0x00	; 0
    1392:	80 81       	ld	r24, Z
    1394:	28 2f       	mov	r18, r24
    1396:	30 e0       	ldi	r19, 0x00	; 0
    1398:	89 81       	ldd	r24, Y+1	; 0x01
    139a:	88 2f       	mov	r24, r24
    139c:	90 e0       	ldi	r25, 0x00	; 0
    139e:	a9 01       	movw	r20, r18
    13a0:	02 c0       	rjmp	.+4      	; 0x13a6 <Dio_u8GetPinVal+0xa4>
    13a2:	55 95       	asr	r21
    13a4:	47 95       	ror	r20
    13a6:	8a 95       	dec	r24
    13a8:	e2 f7       	brpl	.-8      	; 0x13a2 <Dio_u8GetPinVal+0xa0>
    13aa:	ca 01       	movw	r24, r20
    13ac:	58 2f       	mov	r21, r24
    13ae:	51 70       	andi	r21, 0x01	; 1
    13b0:	5c 83       	std	Y+4, r21	; 0x04
    13b2:	27 c0       	rjmp	.+78     	; 0x1402 <Dio_u8GetPinVal+0x100>
		break ;
	case 2:
		return GET_BIT(PINC,Loc_u8pin);
    13b4:	e3 e3       	ldi	r30, 0x33	; 51
    13b6:	f0 e0       	ldi	r31, 0x00	; 0
    13b8:	80 81       	ld	r24, Z
    13ba:	28 2f       	mov	r18, r24
    13bc:	30 e0       	ldi	r19, 0x00	; 0
    13be:	89 81       	ldd	r24, Y+1	; 0x01
    13c0:	88 2f       	mov	r24, r24
    13c2:	90 e0       	ldi	r25, 0x00	; 0
    13c4:	a9 01       	movw	r20, r18
    13c6:	02 c0       	rjmp	.+4      	; 0x13cc <Dio_u8GetPinVal+0xca>
    13c8:	55 95       	asr	r21
    13ca:	47 95       	ror	r20
    13cc:	8a 95       	dec	r24
    13ce:	e2 f7       	brpl	.-8      	; 0x13c8 <Dio_u8GetPinVal+0xc6>
    13d0:	ca 01       	movw	r24, r20
    13d2:	58 2f       	mov	r21, r24
    13d4:	51 70       	andi	r21, 0x01	; 1
    13d6:	5c 83       	std	Y+4, r21	; 0x04
    13d8:	14 c0       	rjmp	.+40     	; 0x1402 <Dio_u8GetPinVal+0x100>
		break ;
	case 3:
		return GET_BIT(PIND,Loc_u8pin);
    13da:	e0 e3       	ldi	r30, 0x30	; 48
    13dc:	f0 e0       	ldi	r31, 0x00	; 0
    13de:	80 81       	ld	r24, Z
    13e0:	28 2f       	mov	r18, r24
    13e2:	30 e0       	ldi	r19, 0x00	; 0
    13e4:	89 81       	ldd	r24, Y+1	; 0x01
    13e6:	88 2f       	mov	r24, r24
    13e8:	90 e0       	ldi	r25, 0x00	; 0
    13ea:	a9 01       	movw	r20, r18
    13ec:	02 c0       	rjmp	.+4      	; 0x13f2 <Dio_u8GetPinVal+0xf0>
    13ee:	55 95       	asr	r21
    13f0:	47 95       	ror	r20
    13f2:	8a 95       	dec	r24
    13f4:	e2 f7       	brpl	.-8      	; 0x13ee <Dio_u8GetPinVal+0xec>
    13f6:	ca 01       	movw	r24, r20
    13f8:	58 2f       	mov	r21, r24
    13fa:	51 70       	andi	r21, 0x01	; 1
    13fc:	5c 83       	std	Y+4, r21	; 0x04
    13fe:	01 c0       	rjmp	.+2      	; 0x1402 <Dio_u8GetPinVal+0x100>
    1400:	02 c0       	rjmp	.+4      	; 0x1406 <Dio_u8GetPinVal+0x104>
		break ;
	}

}
    1402:	8c 81       	ldd	r24, Y+4	; 0x04
    1404:	8f 83       	std	Y+7, r24	; 0x07
    1406:	8f 81       	ldd	r24, Y+7	; 0x07
    1408:	27 96       	adiw	r28, 0x07	; 7
    140a:	0f b6       	in	r0, 0x3f	; 63
    140c:	f8 94       	cli
    140e:	de bf       	out	0x3e, r29	; 62
    1410:	0f be       	out	0x3f, r0	; 63
    1412:	cd bf       	out	0x3d, r28	; 61
    1414:	cf 91       	pop	r28
    1416:	df 91       	pop	r29
    1418:	08 95       	ret

0000141a <Dio_vidTglPinVal>:

void Dio_vidTglPinVal(u8 Pin)
{
    141a:	df 93       	push	r29
    141c:	cf 93       	push	r28
    141e:	00 d0       	rcall	.+0      	; 0x1420 <Dio_vidTglPinVal+0x6>
    1420:	00 d0       	rcall	.+0      	; 0x1422 <Dio_vidTglPinVal+0x8>
    1422:	0f 92       	push	r0
    1424:	cd b7       	in	r28, 0x3d	; 61
    1426:	de b7       	in	r29, 0x3e	; 62
    1428:	8b 83       	std	Y+3, r24	; 0x03
	u8 Loc_u8Port;
	u8 Loc_u8Pin;
	Loc_u8Port=Pin/8;
    142a:	8b 81       	ldd	r24, Y+3	; 0x03
    142c:	86 95       	lsr	r24
    142e:	86 95       	lsr	r24
    1430:	86 95       	lsr	r24
    1432:	8a 83       	std	Y+2, r24	; 0x02
	Loc_u8Pin=Pin%8;
    1434:	8b 81       	ldd	r24, Y+3	; 0x03
    1436:	87 70       	andi	r24, 0x07	; 7
    1438:	89 83       	std	Y+1, r24	; 0x01
	switch(Loc_u8Port)
    143a:	8a 81       	ldd	r24, Y+2	; 0x02
    143c:	28 2f       	mov	r18, r24
    143e:	30 e0       	ldi	r19, 0x00	; 0
    1440:	3d 83       	std	Y+5, r19	; 0x05
    1442:	2c 83       	std	Y+4, r18	; 0x04
    1444:	8c 81       	ldd	r24, Y+4	; 0x04
    1446:	9d 81       	ldd	r25, Y+5	; 0x05
    1448:	81 30       	cpi	r24, 0x01	; 1
    144a:	91 05       	cpc	r25, r1
    144c:	49 f1       	breq	.+82     	; 0x14a0 <Dio_vidTglPinVal+0x86>
    144e:	2c 81       	ldd	r18, Y+4	; 0x04
    1450:	3d 81       	ldd	r19, Y+5	; 0x05
    1452:	22 30       	cpi	r18, 0x02	; 2
    1454:	31 05       	cpc	r19, r1
    1456:	2c f4       	brge	.+10     	; 0x1462 <Dio_vidTglPinVal+0x48>
    1458:	8c 81       	ldd	r24, Y+4	; 0x04
    145a:	9d 81       	ldd	r25, Y+5	; 0x05
    145c:	00 97       	sbiw	r24, 0x00	; 0
    145e:	61 f0       	breq	.+24     	; 0x1478 <Dio_vidTglPinVal+0x5e>
    1460:	5a c0       	rjmp	.+180    	; 0x1516 <Dio_vidTglPinVal+0xfc>
    1462:	2c 81       	ldd	r18, Y+4	; 0x04
    1464:	3d 81       	ldd	r19, Y+5	; 0x05
    1466:	22 30       	cpi	r18, 0x02	; 2
    1468:	31 05       	cpc	r19, r1
    146a:	71 f1       	breq	.+92     	; 0x14c8 <Dio_vidTglPinVal+0xae>
    146c:	8c 81       	ldd	r24, Y+4	; 0x04
    146e:	9d 81       	ldd	r25, Y+5	; 0x05
    1470:	83 30       	cpi	r24, 0x03	; 3
    1472:	91 05       	cpc	r25, r1
    1474:	e9 f1       	breq	.+122    	; 0x14f0 <Dio_vidTglPinVal+0xd6>
    1476:	4f c0       	rjmp	.+158    	; 0x1516 <Dio_vidTglPinVal+0xfc>
	{
	case 0:
			TOGGLE_BIT(PORTA,Loc_u8Pin);
    1478:	ab e3       	ldi	r26, 0x3B	; 59
    147a:	b0 e0       	ldi	r27, 0x00	; 0
    147c:	eb e3       	ldi	r30, 0x3B	; 59
    147e:	f0 e0       	ldi	r31, 0x00	; 0
    1480:	80 81       	ld	r24, Z
    1482:	48 2f       	mov	r20, r24
    1484:	89 81       	ldd	r24, Y+1	; 0x01
    1486:	28 2f       	mov	r18, r24
    1488:	30 e0       	ldi	r19, 0x00	; 0
    148a:	81 e0       	ldi	r24, 0x01	; 1
    148c:	90 e0       	ldi	r25, 0x00	; 0
    148e:	02 2e       	mov	r0, r18
    1490:	02 c0       	rjmp	.+4      	; 0x1496 <Dio_vidTglPinVal+0x7c>
    1492:	88 0f       	add	r24, r24
    1494:	99 1f       	adc	r25, r25
    1496:	0a 94       	dec	r0
    1498:	e2 f7       	brpl	.-8      	; 0x1492 <Dio_vidTglPinVal+0x78>
    149a:	84 27       	eor	r24, r20
    149c:	8c 93       	st	X, r24
    149e:	3b c0       	rjmp	.+118    	; 0x1516 <Dio_vidTglPinVal+0xfc>
		break;
	case 1:
		TOGGLE_BIT(PORTB,Loc_u8Pin);
    14a0:	a8 e3       	ldi	r26, 0x38	; 56
    14a2:	b0 e0       	ldi	r27, 0x00	; 0
    14a4:	e8 e3       	ldi	r30, 0x38	; 56
    14a6:	f0 e0       	ldi	r31, 0x00	; 0
    14a8:	80 81       	ld	r24, Z
    14aa:	48 2f       	mov	r20, r24
    14ac:	89 81       	ldd	r24, Y+1	; 0x01
    14ae:	28 2f       	mov	r18, r24
    14b0:	30 e0       	ldi	r19, 0x00	; 0
    14b2:	81 e0       	ldi	r24, 0x01	; 1
    14b4:	90 e0       	ldi	r25, 0x00	; 0
    14b6:	02 2e       	mov	r0, r18
    14b8:	02 c0       	rjmp	.+4      	; 0x14be <Dio_vidTglPinVal+0xa4>
    14ba:	88 0f       	add	r24, r24
    14bc:	99 1f       	adc	r25, r25
    14be:	0a 94       	dec	r0
    14c0:	e2 f7       	brpl	.-8      	; 0x14ba <Dio_vidTglPinVal+0xa0>
    14c2:	84 27       	eor	r24, r20
    14c4:	8c 93       	st	X, r24
    14c6:	27 c0       	rjmp	.+78     	; 0x1516 <Dio_vidTglPinVal+0xfc>
		break;
	case 2:
		TOGGLE_BIT(PORTC,Loc_u8Pin);
    14c8:	a5 e3       	ldi	r26, 0x35	; 53
    14ca:	b0 e0       	ldi	r27, 0x00	; 0
    14cc:	e5 e3       	ldi	r30, 0x35	; 53
    14ce:	f0 e0       	ldi	r31, 0x00	; 0
    14d0:	80 81       	ld	r24, Z
    14d2:	48 2f       	mov	r20, r24
    14d4:	89 81       	ldd	r24, Y+1	; 0x01
    14d6:	28 2f       	mov	r18, r24
    14d8:	30 e0       	ldi	r19, 0x00	; 0
    14da:	81 e0       	ldi	r24, 0x01	; 1
    14dc:	90 e0       	ldi	r25, 0x00	; 0
    14de:	02 2e       	mov	r0, r18
    14e0:	02 c0       	rjmp	.+4      	; 0x14e6 <Dio_vidTglPinVal+0xcc>
    14e2:	88 0f       	add	r24, r24
    14e4:	99 1f       	adc	r25, r25
    14e6:	0a 94       	dec	r0
    14e8:	e2 f7       	brpl	.-8      	; 0x14e2 <Dio_vidTglPinVal+0xc8>
    14ea:	84 27       	eor	r24, r20
    14ec:	8c 93       	st	X, r24
    14ee:	13 c0       	rjmp	.+38     	; 0x1516 <Dio_vidTglPinVal+0xfc>
		break;
	case 3:
		TOGGLE_BIT(PORTD,Loc_u8Pin);
    14f0:	a2 e3       	ldi	r26, 0x32	; 50
    14f2:	b0 e0       	ldi	r27, 0x00	; 0
    14f4:	e2 e3       	ldi	r30, 0x32	; 50
    14f6:	f0 e0       	ldi	r31, 0x00	; 0
    14f8:	80 81       	ld	r24, Z
    14fa:	48 2f       	mov	r20, r24
    14fc:	89 81       	ldd	r24, Y+1	; 0x01
    14fe:	28 2f       	mov	r18, r24
    1500:	30 e0       	ldi	r19, 0x00	; 0
    1502:	81 e0       	ldi	r24, 0x01	; 1
    1504:	90 e0       	ldi	r25, 0x00	; 0
    1506:	02 2e       	mov	r0, r18
    1508:	02 c0       	rjmp	.+4      	; 0x150e <Dio_vidTglPinVal+0xf4>
    150a:	88 0f       	add	r24, r24
    150c:	99 1f       	adc	r25, r25
    150e:	0a 94       	dec	r0
    1510:	e2 f7       	brpl	.-8      	; 0x150a <Dio_vidTglPinVal+0xf0>
    1512:	84 27       	eor	r24, r20
    1514:	8c 93       	st	X, r24
		break;
	}
}
    1516:	0f 90       	pop	r0
    1518:	0f 90       	pop	r0
    151a:	0f 90       	pop	r0
    151c:	0f 90       	pop	r0
    151e:	0f 90       	pop	r0
    1520:	cf 91       	pop	r28
    1522:	df 91       	pop	r29
    1524:	08 95       	ret

00001526 <Lcd_vidInit>:
#include <avr/io.h>
#include <util/delay.h>
#include "Lcd_cfg.h"
#include "Lcd_int.h"
void Lcd_vidInit(void)
{
    1526:	df 93       	push	r29
    1528:	cf 93       	push	r28
    152a:	cd b7       	in	r28, 0x3d	; 61
    152c:	de b7       	in	r29, 0x3e	; 62
    152e:	e8 97       	sbiw	r28, 0x38	; 56
    1530:	0f b6       	in	r0, 0x3f	; 63
    1532:	f8 94       	cli
    1534:	de bf       	out	0x3e, r29	; 62
    1536:	0f be       	out	0x3f, r0	; 63
    1538:	cd bf       	out	0x3d, r28	; 61
	_delay_ms(2);
	Lcd_vidSendCommand(0x01); //to clear display
	_delay_ms(2);

#elif Lcd_u8Mode==Lcd_u8FourBit
	Dio_vidSetPinDir(LCD_u8D4,DIO_u8OUTPUT);
    153a:	84 e0       	ldi	r24, 0x04	; 4
    153c:	61 e0       	ldi	r22, 0x01	; 1
    153e:	0e 94 ab 07 	call	0xf56	; 0xf56 <Dio_vidSetPinDir>
	Dio_vidSetPinDir(LCD_u8D5,DIO_u8OUTPUT);
    1542:	85 e0       	ldi	r24, 0x05	; 5
    1544:	61 e0       	ldi	r22, 0x01	; 1
    1546:	0e 94 ab 07 	call	0xf56	; 0xf56 <Dio_vidSetPinDir>
	Dio_vidSetPinDir(LCD_u8D6,DIO_u8OUTPUT);
    154a:	86 e0       	ldi	r24, 0x06	; 6
    154c:	61 e0       	ldi	r22, 0x01	; 1
    154e:	0e 94 ab 07 	call	0xf56	; 0xf56 <Dio_vidSetPinDir>
	Dio_vidSetPinDir(LCD_u8D7,DIO_u8OUTPUT);
    1552:	87 e0       	ldi	r24, 0x07	; 7
    1554:	61 e0       	ldi	r22, 0x01	; 1
    1556:	0e 94 ab 07 	call	0xf56	; 0xf56 <Dio_vidSetPinDir>
	Dio_vidSetPinDir(LCD_u8RS,DIO_u8OUTPUT);
    155a:	88 e0       	ldi	r24, 0x08	; 8
    155c:	61 e0       	ldi	r22, 0x01	; 1
    155e:	0e 94 ab 07 	call	0xf56	; 0xf56 <Dio_vidSetPinDir>
	//Dio_vidSetPinVal(LCD_u8RW,DIO_u8LOW);
	Dio_vidSetPinDir(LCD_u8EN,DIO_u8OUTPUT);
    1562:	89 e0       	ldi	r24, 0x09	; 9
    1564:	61 e0       	ldi	r22, 0x01	; 1
    1566:	0e 94 ab 07 	call	0xf56	; 0xf56 <Dio_vidSetPinDir>
	Lcd_vidSendCommand(0x32);
    156a:	82 e3       	ldi	r24, 0x32	; 50
    156c:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <Lcd_vidSendCommand>
    1570:	80 e0       	ldi	r24, 0x00	; 0
    1572:	90 e0       	ldi	r25, 0x00	; 0
    1574:	a0 e0       	ldi	r26, 0x00	; 0
    1576:	b0 e4       	ldi	r27, 0x40	; 64
    1578:	8d ab       	std	Y+53, r24	; 0x35
    157a:	9e ab       	std	Y+54, r25	; 0x36
    157c:	af ab       	std	Y+55, r26	; 0x37
    157e:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1580:	6d a9       	ldd	r22, Y+53	; 0x35
    1582:	7e a9       	ldd	r23, Y+54	; 0x36
    1584:	8f a9       	ldd	r24, Y+55	; 0x37
    1586:	98 ad       	ldd	r25, Y+56	; 0x38
    1588:	20 e0       	ldi	r18, 0x00	; 0
    158a:	30 e0       	ldi	r19, 0x00	; 0
    158c:	4a ef       	ldi	r20, 0xFA	; 250
    158e:	54 e4       	ldi	r21, 0x44	; 68
    1590:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1594:	dc 01       	movw	r26, r24
    1596:	cb 01       	movw	r24, r22
    1598:	89 ab       	std	Y+49, r24	; 0x31
    159a:	9a ab       	std	Y+50, r25	; 0x32
    159c:	ab ab       	std	Y+51, r26	; 0x33
    159e:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    15a0:	69 a9       	ldd	r22, Y+49	; 0x31
    15a2:	7a a9       	ldd	r23, Y+50	; 0x32
    15a4:	8b a9       	ldd	r24, Y+51	; 0x33
    15a6:	9c a9       	ldd	r25, Y+52	; 0x34
    15a8:	20 e0       	ldi	r18, 0x00	; 0
    15aa:	30 e0       	ldi	r19, 0x00	; 0
    15ac:	40 e8       	ldi	r20, 0x80	; 128
    15ae:	5f e3       	ldi	r21, 0x3F	; 63
    15b0:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    15b4:	88 23       	and	r24, r24
    15b6:	2c f4       	brge	.+10     	; 0x15c2 <Lcd_vidInit+0x9c>
		__ticks = 1;
    15b8:	81 e0       	ldi	r24, 0x01	; 1
    15ba:	90 e0       	ldi	r25, 0x00	; 0
    15bc:	98 ab       	std	Y+48, r25	; 0x30
    15be:	8f a7       	std	Y+47, r24	; 0x2f
    15c0:	3f c0       	rjmp	.+126    	; 0x1640 <Lcd_vidInit+0x11a>
	else if (__tmp > 65535)
    15c2:	69 a9       	ldd	r22, Y+49	; 0x31
    15c4:	7a a9       	ldd	r23, Y+50	; 0x32
    15c6:	8b a9       	ldd	r24, Y+51	; 0x33
    15c8:	9c a9       	ldd	r25, Y+52	; 0x34
    15ca:	20 e0       	ldi	r18, 0x00	; 0
    15cc:	3f ef       	ldi	r19, 0xFF	; 255
    15ce:	4f e7       	ldi	r20, 0x7F	; 127
    15d0:	57 e4       	ldi	r21, 0x47	; 71
    15d2:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    15d6:	18 16       	cp	r1, r24
    15d8:	4c f5       	brge	.+82     	; 0x162c <Lcd_vidInit+0x106>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    15da:	6d a9       	ldd	r22, Y+53	; 0x35
    15dc:	7e a9       	ldd	r23, Y+54	; 0x36
    15de:	8f a9       	ldd	r24, Y+55	; 0x37
    15e0:	98 ad       	ldd	r25, Y+56	; 0x38
    15e2:	20 e0       	ldi	r18, 0x00	; 0
    15e4:	30 e0       	ldi	r19, 0x00	; 0
    15e6:	40 e2       	ldi	r20, 0x20	; 32
    15e8:	51 e4       	ldi	r21, 0x41	; 65
    15ea:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    15ee:	dc 01       	movw	r26, r24
    15f0:	cb 01       	movw	r24, r22
    15f2:	bc 01       	movw	r22, r24
    15f4:	cd 01       	movw	r24, r26
    15f6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    15fa:	dc 01       	movw	r26, r24
    15fc:	cb 01       	movw	r24, r22
    15fe:	98 ab       	std	Y+48, r25	; 0x30
    1600:	8f a7       	std	Y+47, r24	; 0x2f
    1602:	0f c0       	rjmp	.+30     	; 0x1622 <Lcd_vidInit+0xfc>
    1604:	88 ec       	ldi	r24, 0xC8	; 200
    1606:	90 e0       	ldi	r25, 0x00	; 0
    1608:	9e a7       	std	Y+46, r25	; 0x2e
    160a:	8d a7       	std	Y+45, r24	; 0x2d
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    160c:	8d a5       	ldd	r24, Y+45	; 0x2d
    160e:	9e a5       	ldd	r25, Y+46	; 0x2e
    1610:	01 97       	sbiw	r24, 0x01	; 1
    1612:	f1 f7       	brne	.-4      	; 0x1610 <Lcd_vidInit+0xea>
    1614:	9e a7       	std	Y+46, r25	; 0x2e
    1616:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1618:	8f a5       	ldd	r24, Y+47	; 0x2f
    161a:	98 a9       	ldd	r25, Y+48	; 0x30
    161c:	01 97       	sbiw	r24, 0x01	; 1
    161e:	98 ab       	std	Y+48, r25	; 0x30
    1620:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1622:	8f a5       	ldd	r24, Y+47	; 0x2f
    1624:	98 a9       	ldd	r25, Y+48	; 0x30
    1626:	00 97       	sbiw	r24, 0x00	; 0
    1628:	69 f7       	brne	.-38     	; 0x1604 <Lcd_vidInit+0xde>
    162a:	14 c0       	rjmp	.+40     	; 0x1654 <Lcd_vidInit+0x12e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    162c:	69 a9       	ldd	r22, Y+49	; 0x31
    162e:	7a a9       	ldd	r23, Y+50	; 0x32
    1630:	8b a9       	ldd	r24, Y+51	; 0x33
    1632:	9c a9       	ldd	r25, Y+52	; 0x34
    1634:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1638:	dc 01       	movw	r26, r24
    163a:	cb 01       	movw	r24, r22
    163c:	98 ab       	std	Y+48, r25	; 0x30
    163e:	8f a7       	std	Y+47, r24	; 0x2f
    1640:	8f a5       	ldd	r24, Y+47	; 0x2f
    1642:	98 a9       	ldd	r25, Y+48	; 0x30
    1644:	9c a7       	std	Y+44, r25	; 0x2c
    1646:	8b a7       	std	Y+43, r24	; 0x2b
    1648:	8b a5       	ldd	r24, Y+43	; 0x2b
    164a:	9c a5       	ldd	r25, Y+44	; 0x2c
    164c:	01 97       	sbiw	r24, 0x01	; 1
    164e:	f1 f7       	brne	.-4      	; 0x164c <Lcd_vidInit+0x126>
    1650:	9c a7       	std	Y+44, r25	; 0x2c
    1652:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(2);
	Lcd_vidSendCommand(0x28); //for 2 lines and 5*7 pixels for 1 digit
    1654:	88 e2       	ldi	r24, 0x28	; 40
    1656:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <Lcd_vidSendCommand>
    165a:	80 e0       	ldi	r24, 0x00	; 0
    165c:	90 e0       	ldi	r25, 0x00	; 0
    165e:	a0 e0       	ldi	r26, 0x00	; 0
    1660:	b0 e4       	ldi	r27, 0x40	; 64
    1662:	8f a3       	std	Y+39, r24	; 0x27
    1664:	98 a7       	std	Y+40, r25	; 0x28
    1666:	a9 a7       	std	Y+41, r26	; 0x29
    1668:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    166a:	6f a1       	ldd	r22, Y+39	; 0x27
    166c:	78 a5       	ldd	r23, Y+40	; 0x28
    166e:	89 a5       	ldd	r24, Y+41	; 0x29
    1670:	9a a5       	ldd	r25, Y+42	; 0x2a
    1672:	20 e0       	ldi	r18, 0x00	; 0
    1674:	30 e0       	ldi	r19, 0x00	; 0
    1676:	4a ef       	ldi	r20, 0xFA	; 250
    1678:	54 e4       	ldi	r21, 0x44	; 68
    167a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    167e:	dc 01       	movw	r26, r24
    1680:	cb 01       	movw	r24, r22
    1682:	8b a3       	std	Y+35, r24	; 0x23
    1684:	9c a3       	std	Y+36, r25	; 0x24
    1686:	ad a3       	std	Y+37, r26	; 0x25
    1688:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    168a:	6b a1       	ldd	r22, Y+35	; 0x23
    168c:	7c a1       	ldd	r23, Y+36	; 0x24
    168e:	8d a1       	ldd	r24, Y+37	; 0x25
    1690:	9e a1       	ldd	r25, Y+38	; 0x26
    1692:	20 e0       	ldi	r18, 0x00	; 0
    1694:	30 e0       	ldi	r19, 0x00	; 0
    1696:	40 e8       	ldi	r20, 0x80	; 128
    1698:	5f e3       	ldi	r21, 0x3F	; 63
    169a:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    169e:	88 23       	and	r24, r24
    16a0:	2c f4       	brge	.+10     	; 0x16ac <Lcd_vidInit+0x186>
		__ticks = 1;
    16a2:	81 e0       	ldi	r24, 0x01	; 1
    16a4:	90 e0       	ldi	r25, 0x00	; 0
    16a6:	9a a3       	std	Y+34, r25	; 0x22
    16a8:	89 a3       	std	Y+33, r24	; 0x21
    16aa:	3f c0       	rjmp	.+126    	; 0x172a <Lcd_vidInit+0x204>
	else if (__tmp > 65535)
    16ac:	6b a1       	ldd	r22, Y+35	; 0x23
    16ae:	7c a1       	ldd	r23, Y+36	; 0x24
    16b0:	8d a1       	ldd	r24, Y+37	; 0x25
    16b2:	9e a1       	ldd	r25, Y+38	; 0x26
    16b4:	20 e0       	ldi	r18, 0x00	; 0
    16b6:	3f ef       	ldi	r19, 0xFF	; 255
    16b8:	4f e7       	ldi	r20, 0x7F	; 127
    16ba:	57 e4       	ldi	r21, 0x47	; 71
    16bc:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    16c0:	18 16       	cp	r1, r24
    16c2:	4c f5       	brge	.+82     	; 0x1716 <Lcd_vidInit+0x1f0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    16c4:	6f a1       	ldd	r22, Y+39	; 0x27
    16c6:	78 a5       	ldd	r23, Y+40	; 0x28
    16c8:	89 a5       	ldd	r24, Y+41	; 0x29
    16ca:	9a a5       	ldd	r25, Y+42	; 0x2a
    16cc:	20 e0       	ldi	r18, 0x00	; 0
    16ce:	30 e0       	ldi	r19, 0x00	; 0
    16d0:	40 e2       	ldi	r20, 0x20	; 32
    16d2:	51 e4       	ldi	r21, 0x41	; 65
    16d4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    16d8:	dc 01       	movw	r26, r24
    16da:	cb 01       	movw	r24, r22
    16dc:	bc 01       	movw	r22, r24
    16de:	cd 01       	movw	r24, r26
    16e0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    16e4:	dc 01       	movw	r26, r24
    16e6:	cb 01       	movw	r24, r22
    16e8:	9a a3       	std	Y+34, r25	; 0x22
    16ea:	89 a3       	std	Y+33, r24	; 0x21
    16ec:	0f c0       	rjmp	.+30     	; 0x170c <Lcd_vidInit+0x1e6>
    16ee:	88 ec       	ldi	r24, 0xC8	; 200
    16f0:	90 e0       	ldi	r25, 0x00	; 0
    16f2:	98 a3       	std	Y+32, r25	; 0x20
    16f4:	8f 8f       	std	Y+31, r24	; 0x1f
    16f6:	8f 8d       	ldd	r24, Y+31	; 0x1f
    16f8:	98 a1       	ldd	r25, Y+32	; 0x20
    16fa:	01 97       	sbiw	r24, 0x01	; 1
    16fc:	f1 f7       	brne	.-4      	; 0x16fa <Lcd_vidInit+0x1d4>
    16fe:	98 a3       	std	Y+32, r25	; 0x20
    1700:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1702:	89 a1       	ldd	r24, Y+33	; 0x21
    1704:	9a a1       	ldd	r25, Y+34	; 0x22
    1706:	01 97       	sbiw	r24, 0x01	; 1
    1708:	9a a3       	std	Y+34, r25	; 0x22
    170a:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    170c:	89 a1       	ldd	r24, Y+33	; 0x21
    170e:	9a a1       	ldd	r25, Y+34	; 0x22
    1710:	00 97       	sbiw	r24, 0x00	; 0
    1712:	69 f7       	brne	.-38     	; 0x16ee <Lcd_vidInit+0x1c8>
    1714:	14 c0       	rjmp	.+40     	; 0x173e <Lcd_vidInit+0x218>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1716:	6b a1       	ldd	r22, Y+35	; 0x23
    1718:	7c a1       	ldd	r23, Y+36	; 0x24
    171a:	8d a1       	ldd	r24, Y+37	; 0x25
    171c:	9e a1       	ldd	r25, Y+38	; 0x26
    171e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1722:	dc 01       	movw	r26, r24
    1724:	cb 01       	movw	r24, r22
    1726:	9a a3       	std	Y+34, r25	; 0x22
    1728:	89 a3       	std	Y+33, r24	; 0x21
    172a:	89 a1       	ldd	r24, Y+33	; 0x21
    172c:	9a a1       	ldd	r25, Y+34	; 0x22
    172e:	9e 8f       	std	Y+30, r25	; 0x1e
    1730:	8d 8f       	std	Y+29, r24	; 0x1d
    1732:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1734:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1736:	01 97       	sbiw	r24, 0x01	; 1
    1738:	f1 f7       	brne	.-4      	; 0x1736 <Lcd_vidInit+0x210>
    173a:	9e 8f       	std	Y+30, r25	; 0x1e
    173c:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(2);
	Lcd_vidSendCommand(0x0c); //display on ,cursor on
    173e:	8c e0       	ldi	r24, 0x0C	; 12
    1740:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <Lcd_vidSendCommand>
    1744:	80 e0       	ldi	r24, 0x00	; 0
    1746:	90 e0       	ldi	r25, 0x00	; 0
    1748:	a0 e0       	ldi	r26, 0x00	; 0
    174a:	b0 e4       	ldi	r27, 0x40	; 64
    174c:	89 8f       	std	Y+25, r24	; 0x19
    174e:	9a 8f       	std	Y+26, r25	; 0x1a
    1750:	ab 8f       	std	Y+27, r26	; 0x1b
    1752:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1754:	69 8d       	ldd	r22, Y+25	; 0x19
    1756:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1758:	8b 8d       	ldd	r24, Y+27	; 0x1b
    175a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    175c:	20 e0       	ldi	r18, 0x00	; 0
    175e:	30 e0       	ldi	r19, 0x00	; 0
    1760:	4a ef       	ldi	r20, 0xFA	; 250
    1762:	54 e4       	ldi	r21, 0x44	; 68
    1764:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1768:	dc 01       	movw	r26, r24
    176a:	cb 01       	movw	r24, r22
    176c:	8d 8b       	std	Y+21, r24	; 0x15
    176e:	9e 8b       	std	Y+22, r25	; 0x16
    1770:	af 8b       	std	Y+23, r26	; 0x17
    1772:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1774:	6d 89       	ldd	r22, Y+21	; 0x15
    1776:	7e 89       	ldd	r23, Y+22	; 0x16
    1778:	8f 89       	ldd	r24, Y+23	; 0x17
    177a:	98 8d       	ldd	r25, Y+24	; 0x18
    177c:	20 e0       	ldi	r18, 0x00	; 0
    177e:	30 e0       	ldi	r19, 0x00	; 0
    1780:	40 e8       	ldi	r20, 0x80	; 128
    1782:	5f e3       	ldi	r21, 0x3F	; 63
    1784:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1788:	88 23       	and	r24, r24
    178a:	2c f4       	brge	.+10     	; 0x1796 <Lcd_vidInit+0x270>
		__ticks = 1;
    178c:	81 e0       	ldi	r24, 0x01	; 1
    178e:	90 e0       	ldi	r25, 0x00	; 0
    1790:	9c 8b       	std	Y+20, r25	; 0x14
    1792:	8b 8b       	std	Y+19, r24	; 0x13
    1794:	3f c0       	rjmp	.+126    	; 0x1814 <Lcd_vidInit+0x2ee>
	else if (__tmp > 65535)
    1796:	6d 89       	ldd	r22, Y+21	; 0x15
    1798:	7e 89       	ldd	r23, Y+22	; 0x16
    179a:	8f 89       	ldd	r24, Y+23	; 0x17
    179c:	98 8d       	ldd	r25, Y+24	; 0x18
    179e:	20 e0       	ldi	r18, 0x00	; 0
    17a0:	3f ef       	ldi	r19, 0xFF	; 255
    17a2:	4f e7       	ldi	r20, 0x7F	; 127
    17a4:	57 e4       	ldi	r21, 0x47	; 71
    17a6:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    17aa:	18 16       	cp	r1, r24
    17ac:	4c f5       	brge	.+82     	; 0x1800 <Lcd_vidInit+0x2da>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    17ae:	69 8d       	ldd	r22, Y+25	; 0x19
    17b0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    17b2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    17b4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    17b6:	20 e0       	ldi	r18, 0x00	; 0
    17b8:	30 e0       	ldi	r19, 0x00	; 0
    17ba:	40 e2       	ldi	r20, 0x20	; 32
    17bc:	51 e4       	ldi	r21, 0x41	; 65
    17be:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    17c2:	dc 01       	movw	r26, r24
    17c4:	cb 01       	movw	r24, r22
    17c6:	bc 01       	movw	r22, r24
    17c8:	cd 01       	movw	r24, r26
    17ca:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    17ce:	dc 01       	movw	r26, r24
    17d0:	cb 01       	movw	r24, r22
    17d2:	9c 8b       	std	Y+20, r25	; 0x14
    17d4:	8b 8b       	std	Y+19, r24	; 0x13
    17d6:	0f c0       	rjmp	.+30     	; 0x17f6 <Lcd_vidInit+0x2d0>
    17d8:	88 ec       	ldi	r24, 0xC8	; 200
    17da:	90 e0       	ldi	r25, 0x00	; 0
    17dc:	9a 8b       	std	Y+18, r25	; 0x12
    17de:	89 8b       	std	Y+17, r24	; 0x11
    17e0:	89 89       	ldd	r24, Y+17	; 0x11
    17e2:	9a 89       	ldd	r25, Y+18	; 0x12
    17e4:	01 97       	sbiw	r24, 0x01	; 1
    17e6:	f1 f7       	brne	.-4      	; 0x17e4 <Lcd_vidInit+0x2be>
    17e8:	9a 8b       	std	Y+18, r25	; 0x12
    17ea:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    17ec:	8b 89       	ldd	r24, Y+19	; 0x13
    17ee:	9c 89       	ldd	r25, Y+20	; 0x14
    17f0:	01 97       	sbiw	r24, 0x01	; 1
    17f2:	9c 8b       	std	Y+20, r25	; 0x14
    17f4:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    17f6:	8b 89       	ldd	r24, Y+19	; 0x13
    17f8:	9c 89       	ldd	r25, Y+20	; 0x14
    17fa:	00 97       	sbiw	r24, 0x00	; 0
    17fc:	69 f7       	brne	.-38     	; 0x17d8 <Lcd_vidInit+0x2b2>
    17fe:	14 c0       	rjmp	.+40     	; 0x1828 <Lcd_vidInit+0x302>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1800:	6d 89       	ldd	r22, Y+21	; 0x15
    1802:	7e 89       	ldd	r23, Y+22	; 0x16
    1804:	8f 89       	ldd	r24, Y+23	; 0x17
    1806:	98 8d       	ldd	r25, Y+24	; 0x18
    1808:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    180c:	dc 01       	movw	r26, r24
    180e:	cb 01       	movw	r24, r22
    1810:	9c 8b       	std	Y+20, r25	; 0x14
    1812:	8b 8b       	std	Y+19, r24	; 0x13
    1814:	8b 89       	ldd	r24, Y+19	; 0x13
    1816:	9c 89       	ldd	r25, Y+20	; 0x14
    1818:	98 8b       	std	Y+16, r25	; 0x10
    181a:	8f 87       	std	Y+15, r24	; 0x0f
    181c:	8f 85       	ldd	r24, Y+15	; 0x0f
    181e:	98 89       	ldd	r25, Y+16	; 0x10
    1820:	01 97       	sbiw	r24, 0x01	; 1
    1822:	f1 f7       	brne	.-4      	; 0x1820 <Lcd_vidInit+0x2fa>
    1824:	98 8b       	std	Y+16, r25	; 0x10
    1826:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(2);
	Lcd_vidSendCommand(0x01); //to clear display
    1828:	81 e0       	ldi	r24, 0x01	; 1
    182a:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <Lcd_vidSendCommand>
    182e:	80 e0       	ldi	r24, 0x00	; 0
    1830:	90 e0       	ldi	r25, 0x00	; 0
    1832:	a0 e0       	ldi	r26, 0x00	; 0
    1834:	b0 e4       	ldi	r27, 0x40	; 64
    1836:	8b 87       	std	Y+11, r24	; 0x0b
    1838:	9c 87       	std	Y+12, r25	; 0x0c
    183a:	ad 87       	std	Y+13, r26	; 0x0d
    183c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    183e:	6b 85       	ldd	r22, Y+11	; 0x0b
    1840:	7c 85       	ldd	r23, Y+12	; 0x0c
    1842:	8d 85       	ldd	r24, Y+13	; 0x0d
    1844:	9e 85       	ldd	r25, Y+14	; 0x0e
    1846:	20 e0       	ldi	r18, 0x00	; 0
    1848:	30 e0       	ldi	r19, 0x00	; 0
    184a:	4a ef       	ldi	r20, 0xFA	; 250
    184c:	54 e4       	ldi	r21, 0x44	; 68
    184e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1852:	dc 01       	movw	r26, r24
    1854:	cb 01       	movw	r24, r22
    1856:	8f 83       	std	Y+7, r24	; 0x07
    1858:	98 87       	std	Y+8, r25	; 0x08
    185a:	a9 87       	std	Y+9, r26	; 0x09
    185c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    185e:	6f 81       	ldd	r22, Y+7	; 0x07
    1860:	78 85       	ldd	r23, Y+8	; 0x08
    1862:	89 85       	ldd	r24, Y+9	; 0x09
    1864:	9a 85       	ldd	r25, Y+10	; 0x0a
    1866:	20 e0       	ldi	r18, 0x00	; 0
    1868:	30 e0       	ldi	r19, 0x00	; 0
    186a:	40 e8       	ldi	r20, 0x80	; 128
    186c:	5f e3       	ldi	r21, 0x3F	; 63
    186e:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1872:	88 23       	and	r24, r24
    1874:	2c f4       	brge	.+10     	; 0x1880 <Lcd_vidInit+0x35a>
		__ticks = 1;
    1876:	81 e0       	ldi	r24, 0x01	; 1
    1878:	90 e0       	ldi	r25, 0x00	; 0
    187a:	9e 83       	std	Y+6, r25	; 0x06
    187c:	8d 83       	std	Y+5, r24	; 0x05
    187e:	3f c0       	rjmp	.+126    	; 0x18fe <Lcd_vidInit+0x3d8>
	else if (__tmp > 65535)
    1880:	6f 81       	ldd	r22, Y+7	; 0x07
    1882:	78 85       	ldd	r23, Y+8	; 0x08
    1884:	89 85       	ldd	r24, Y+9	; 0x09
    1886:	9a 85       	ldd	r25, Y+10	; 0x0a
    1888:	20 e0       	ldi	r18, 0x00	; 0
    188a:	3f ef       	ldi	r19, 0xFF	; 255
    188c:	4f e7       	ldi	r20, 0x7F	; 127
    188e:	57 e4       	ldi	r21, 0x47	; 71
    1890:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1894:	18 16       	cp	r1, r24
    1896:	4c f5       	brge	.+82     	; 0x18ea <Lcd_vidInit+0x3c4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1898:	6b 85       	ldd	r22, Y+11	; 0x0b
    189a:	7c 85       	ldd	r23, Y+12	; 0x0c
    189c:	8d 85       	ldd	r24, Y+13	; 0x0d
    189e:	9e 85       	ldd	r25, Y+14	; 0x0e
    18a0:	20 e0       	ldi	r18, 0x00	; 0
    18a2:	30 e0       	ldi	r19, 0x00	; 0
    18a4:	40 e2       	ldi	r20, 0x20	; 32
    18a6:	51 e4       	ldi	r21, 0x41	; 65
    18a8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    18ac:	dc 01       	movw	r26, r24
    18ae:	cb 01       	movw	r24, r22
    18b0:	bc 01       	movw	r22, r24
    18b2:	cd 01       	movw	r24, r26
    18b4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    18b8:	dc 01       	movw	r26, r24
    18ba:	cb 01       	movw	r24, r22
    18bc:	9e 83       	std	Y+6, r25	; 0x06
    18be:	8d 83       	std	Y+5, r24	; 0x05
    18c0:	0f c0       	rjmp	.+30     	; 0x18e0 <Lcd_vidInit+0x3ba>
    18c2:	88 ec       	ldi	r24, 0xC8	; 200
    18c4:	90 e0       	ldi	r25, 0x00	; 0
    18c6:	9c 83       	std	Y+4, r25	; 0x04
    18c8:	8b 83       	std	Y+3, r24	; 0x03
    18ca:	8b 81       	ldd	r24, Y+3	; 0x03
    18cc:	9c 81       	ldd	r25, Y+4	; 0x04
    18ce:	01 97       	sbiw	r24, 0x01	; 1
    18d0:	f1 f7       	brne	.-4      	; 0x18ce <Lcd_vidInit+0x3a8>
    18d2:	9c 83       	std	Y+4, r25	; 0x04
    18d4:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    18d6:	8d 81       	ldd	r24, Y+5	; 0x05
    18d8:	9e 81       	ldd	r25, Y+6	; 0x06
    18da:	01 97       	sbiw	r24, 0x01	; 1
    18dc:	9e 83       	std	Y+6, r25	; 0x06
    18de:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    18e0:	8d 81       	ldd	r24, Y+5	; 0x05
    18e2:	9e 81       	ldd	r25, Y+6	; 0x06
    18e4:	00 97       	sbiw	r24, 0x00	; 0
    18e6:	69 f7       	brne	.-38     	; 0x18c2 <Lcd_vidInit+0x39c>
    18e8:	14 c0       	rjmp	.+40     	; 0x1912 <Lcd_vidInit+0x3ec>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    18ea:	6f 81       	ldd	r22, Y+7	; 0x07
    18ec:	78 85       	ldd	r23, Y+8	; 0x08
    18ee:	89 85       	ldd	r24, Y+9	; 0x09
    18f0:	9a 85       	ldd	r25, Y+10	; 0x0a
    18f2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    18f6:	dc 01       	movw	r26, r24
    18f8:	cb 01       	movw	r24, r22
    18fa:	9e 83       	std	Y+6, r25	; 0x06
    18fc:	8d 83       	std	Y+5, r24	; 0x05
    18fe:	8d 81       	ldd	r24, Y+5	; 0x05
    1900:	9e 81       	ldd	r25, Y+6	; 0x06
    1902:	9a 83       	std	Y+2, r25	; 0x02
    1904:	89 83       	std	Y+1, r24	; 0x01
    1906:	89 81       	ldd	r24, Y+1	; 0x01
    1908:	9a 81       	ldd	r25, Y+2	; 0x02
    190a:	01 97       	sbiw	r24, 0x01	; 1
    190c:	f1 f7       	brne	.-4      	; 0x190a <Lcd_vidInit+0x3e4>
    190e:	9a 83       	std	Y+2, r25	; 0x02
    1910:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
#endif

}
    1912:	e8 96       	adiw	r28, 0x38	; 56
    1914:	0f b6       	in	r0, 0x3f	; 63
    1916:	f8 94       	cli
    1918:	de bf       	out	0x3e, r29	; 62
    191a:	0f be       	out	0x3f, r0	; 63
    191c:	cd bf       	out	0x3d, r28	; 61
    191e:	cf 91       	pop	r28
    1920:	df 91       	pop	r29
    1922:	08 95       	ret

00001924 <Lcd_vidWriteChar>:

void Lcd_vidWriteChar(u8 Character)
{
    1924:	df 93       	push	r29
    1926:	cf 93       	push	r28
    1928:	cd b7       	in	r28, 0x3d	; 61
    192a:	de b7       	in	r29, 0x3e	; 62
    192c:	ab 97       	sbiw	r28, 0x2b	; 43
    192e:	0f b6       	in	r0, 0x3f	; 63
    1930:	f8 94       	cli
    1932:	de bf       	out	0x3e, r29	; 62
    1934:	0f be       	out	0x3f, r0	; 63
    1936:	cd bf       	out	0x3d, r28	; 61
    1938:	8b a7       	std	Y+43, r24	; 0x2b
	Dio_vidSetPinVal(LCD_u8D7,GET_BIT(Character,7));
	_delay_ms(4);
	Dio_vidSetPinVal(LCD_u8EN,DIO_u8LOW);

#elif Lcd_u8Mode==Lcd_u8FourBit
	Dio_vidSetPinVal(LCD_u8RS,DIO_u8HIGH);
    193a:	88 e0       	ldi	r24, 0x08	; 8
    193c:	61 e0       	ldi	r22, 0x01	; 1
    193e:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
	//Dio_vidSetPinVal(LCD_u8RW,DIO_u8LOW);
	Dio_vidSetPinVal(LCD_u8EN,DIO_u8HIGH);
    1942:	89 e0       	ldi	r24, 0x09	; 9
    1944:	61 e0       	ldi	r22, 0x01	; 1
    1946:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D4,GET_BIT(Character,4));
    194a:	8b a5       	ldd	r24, Y+43	; 0x2b
    194c:	82 95       	swap	r24
    194e:	8f 70       	andi	r24, 0x0F	; 15
    1950:	98 2f       	mov	r25, r24
    1952:	91 70       	andi	r25, 0x01	; 1
    1954:	84 e0       	ldi	r24, 0x04	; 4
    1956:	69 2f       	mov	r22, r25
    1958:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D5,GET_BIT(Character,5));
    195c:	8b a5       	ldd	r24, Y+43	; 0x2b
    195e:	82 95       	swap	r24
    1960:	86 95       	lsr	r24
    1962:	87 70       	andi	r24, 0x07	; 7
    1964:	98 2f       	mov	r25, r24
    1966:	91 70       	andi	r25, 0x01	; 1
    1968:	85 e0       	ldi	r24, 0x05	; 5
    196a:	69 2f       	mov	r22, r25
    196c:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D6,GET_BIT(Character,6));
    1970:	8b a5       	ldd	r24, Y+43	; 0x2b
    1972:	82 95       	swap	r24
    1974:	86 95       	lsr	r24
    1976:	86 95       	lsr	r24
    1978:	83 70       	andi	r24, 0x03	; 3
    197a:	98 2f       	mov	r25, r24
    197c:	91 70       	andi	r25, 0x01	; 1
    197e:	86 e0       	ldi	r24, 0x06	; 6
    1980:	69 2f       	mov	r22, r25
    1982:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D7,GET_BIT(Character,7));
    1986:	8b a5       	ldd	r24, Y+43	; 0x2b
    1988:	98 2f       	mov	r25, r24
    198a:	99 1f       	adc	r25, r25
    198c:	99 27       	eor	r25, r25
    198e:	99 1f       	adc	r25, r25
    1990:	87 e0       	ldi	r24, 0x07	; 7
    1992:	69 2f       	mov	r22, r25
    1994:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
    1998:	80 e0       	ldi	r24, 0x00	; 0
    199a:	90 e0       	ldi	r25, 0x00	; 0
    199c:	a0 e8       	ldi	r26, 0x80	; 128
    199e:	b0 e4       	ldi	r27, 0x40	; 64
    19a0:	8f a3       	std	Y+39, r24	; 0x27
    19a2:	98 a7       	std	Y+40, r25	; 0x28
    19a4:	a9 a7       	std	Y+41, r26	; 0x29
    19a6:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    19a8:	6f a1       	ldd	r22, Y+39	; 0x27
    19aa:	78 a5       	ldd	r23, Y+40	; 0x28
    19ac:	89 a5       	ldd	r24, Y+41	; 0x29
    19ae:	9a a5       	ldd	r25, Y+42	; 0x2a
    19b0:	20 e0       	ldi	r18, 0x00	; 0
    19b2:	30 e0       	ldi	r19, 0x00	; 0
    19b4:	4a ef       	ldi	r20, 0xFA	; 250
    19b6:	54 e4       	ldi	r21, 0x44	; 68
    19b8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    19bc:	dc 01       	movw	r26, r24
    19be:	cb 01       	movw	r24, r22
    19c0:	8b a3       	std	Y+35, r24	; 0x23
    19c2:	9c a3       	std	Y+36, r25	; 0x24
    19c4:	ad a3       	std	Y+37, r26	; 0x25
    19c6:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    19c8:	6b a1       	ldd	r22, Y+35	; 0x23
    19ca:	7c a1       	ldd	r23, Y+36	; 0x24
    19cc:	8d a1       	ldd	r24, Y+37	; 0x25
    19ce:	9e a1       	ldd	r25, Y+38	; 0x26
    19d0:	20 e0       	ldi	r18, 0x00	; 0
    19d2:	30 e0       	ldi	r19, 0x00	; 0
    19d4:	40 e8       	ldi	r20, 0x80	; 128
    19d6:	5f e3       	ldi	r21, 0x3F	; 63
    19d8:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    19dc:	88 23       	and	r24, r24
    19de:	2c f4       	brge	.+10     	; 0x19ea <Lcd_vidWriteChar+0xc6>
		__ticks = 1;
    19e0:	81 e0       	ldi	r24, 0x01	; 1
    19e2:	90 e0       	ldi	r25, 0x00	; 0
    19e4:	9a a3       	std	Y+34, r25	; 0x22
    19e6:	89 a3       	std	Y+33, r24	; 0x21
    19e8:	3f c0       	rjmp	.+126    	; 0x1a68 <Lcd_vidWriteChar+0x144>
	else if (__tmp > 65535)
    19ea:	6b a1       	ldd	r22, Y+35	; 0x23
    19ec:	7c a1       	ldd	r23, Y+36	; 0x24
    19ee:	8d a1       	ldd	r24, Y+37	; 0x25
    19f0:	9e a1       	ldd	r25, Y+38	; 0x26
    19f2:	20 e0       	ldi	r18, 0x00	; 0
    19f4:	3f ef       	ldi	r19, 0xFF	; 255
    19f6:	4f e7       	ldi	r20, 0x7F	; 127
    19f8:	57 e4       	ldi	r21, 0x47	; 71
    19fa:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    19fe:	18 16       	cp	r1, r24
    1a00:	4c f5       	brge	.+82     	; 0x1a54 <Lcd_vidWriteChar+0x130>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1a02:	6f a1       	ldd	r22, Y+39	; 0x27
    1a04:	78 a5       	ldd	r23, Y+40	; 0x28
    1a06:	89 a5       	ldd	r24, Y+41	; 0x29
    1a08:	9a a5       	ldd	r25, Y+42	; 0x2a
    1a0a:	20 e0       	ldi	r18, 0x00	; 0
    1a0c:	30 e0       	ldi	r19, 0x00	; 0
    1a0e:	40 e2       	ldi	r20, 0x20	; 32
    1a10:	51 e4       	ldi	r21, 0x41	; 65
    1a12:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1a16:	dc 01       	movw	r26, r24
    1a18:	cb 01       	movw	r24, r22
    1a1a:	bc 01       	movw	r22, r24
    1a1c:	cd 01       	movw	r24, r26
    1a1e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1a22:	dc 01       	movw	r26, r24
    1a24:	cb 01       	movw	r24, r22
    1a26:	9a a3       	std	Y+34, r25	; 0x22
    1a28:	89 a3       	std	Y+33, r24	; 0x21
    1a2a:	0f c0       	rjmp	.+30     	; 0x1a4a <Lcd_vidWriteChar+0x126>
    1a2c:	88 ec       	ldi	r24, 0xC8	; 200
    1a2e:	90 e0       	ldi	r25, 0x00	; 0
    1a30:	98 a3       	std	Y+32, r25	; 0x20
    1a32:	8f 8f       	std	Y+31, r24	; 0x1f
    1a34:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1a36:	98 a1       	ldd	r25, Y+32	; 0x20
    1a38:	01 97       	sbiw	r24, 0x01	; 1
    1a3a:	f1 f7       	brne	.-4      	; 0x1a38 <Lcd_vidWriteChar+0x114>
    1a3c:	98 a3       	std	Y+32, r25	; 0x20
    1a3e:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1a40:	89 a1       	ldd	r24, Y+33	; 0x21
    1a42:	9a a1       	ldd	r25, Y+34	; 0x22
    1a44:	01 97       	sbiw	r24, 0x01	; 1
    1a46:	9a a3       	std	Y+34, r25	; 0x22
    1a48:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1a4a:	89 a1       	ldd	r24, Y+33	; 0x21
    1a4c:	9a a1       	ldd	r25, Y+34	; 0x22
    1a4e:	00 97       	sbiw	r24, 0x00	; 0
    1a50:	69 f7       	brne	.-38     	; 0x1a2c <Lcd_vidWriteChar+0x108>
    1a52:	14 c0       	rjmp	.+40     	; 0x1a7c <Lcd_vidWriteChar+0x158>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1a54:	6b a1       	ldd	r22, Y+35	; 0x23
    1a56:	7c a1       	ldd	r23, Y+36	; 0x24
    1a58:	8d a1       	ldd	r24, Y+37	; 0x25
    1a5a:	9e a1       	ldd	r25, Y+38	; 0x26
    1a5c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1a60:	dc 01       	movw	r26, r24
    1a62:	cb 01       	movw	r24, r22
    1a64:	9a a3       	std	Y+34, r25	; 0x22
    1a66:	89 a3       	std	Y+33, r24	; 0x21
    1a68:	89 a1       	ldd	r24, Y+33	; 0x21
    1a6a:	9a a1       	ldd	r25, Y+34	; 0x22
    1a6c:	9e 8f       	std	Y+30, r25	; 0x1e
    1a6e:	8d 8f       	std	Y+29, r24	; 0x1d
    1a70:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1a72:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1a74:	01 97       	sbiw	r24, 0x01	; 1
    1a76:	f1 f7       	brne	.-4      	; 0x1a74 <Lcd_vidWriteChar+0x150>
    1a78:	9e 8f       	std	Y+30, r25	; 0x1e
    1a7a:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(4);
	Dio_vidSetPinVal(LCD_u8EN,DIO_u8LOW);
    1a7c:	89 e0       	ldi	r24, 0x09	; 9
    1a7e:	60 e0       	ldi	r22, 0x00	; 0
    1a80:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
    1a84:	80 e0       	ldi	r24, 0x00	; 0
    1a86:	90 e0       	ldi	r25, 0x00	; 0
    1a88:	a0 e0       	ldi	r26, 0x00	; 0
    1a8a:	b0 e4       	ldi	r27, 0x40	; 64
    1a8c:	89 8f       	std	Y+25, r24	; 0x19
    1a8e:	9a 8f       	std	Y+26, r25	; 0x1a
    1a90:	ab 8f       	std	Y+27, r26	; 0x1b
    1a92:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1a94:	69 8d       	ldd	r22, Y+25	; 0x19
    1a96:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1a98:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1a9a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1a9c:	20 e0       	ldi	r18, 0x00	; 0
    1a9e:	30 e0       	ldi	r19, 0x00	; 0
    1aa0:	4a ef       	ldi	r20, 0xFA	; 250
    1aa2:	54 e4       	ldi	r21, 0x44	; 68
    1aa4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1aa8:	dc 01       	movw	r26, r24
    1aaa:	cb 01       	movw	r24, r22
    1aac:	8d 8b       	std	Y+21, r24	; 0x15
    1aae:	9e 8b       	std	Y+22, r25	; 0x16
    1ab0:	af 8b       	std	Y+23, r26	; 0x17
    1ab2:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1ab4:	6d 89       	ldd	r22, Y+21	; 0x15
    1ab6:	7e 89       	ldd	r23, Y+22	; 0x16
    1ab8:	8f 89       	ldd	r24, Y+23	; 0x17
    1aba:	98 8d       	ldd	r25, Y+24	; 0x18
    1abc:	20 e0       	ldi	r18, 0x00	; 0
    1abe:	30 e0       	ldi	r19, 0x00	; 0
    1ac0:	40 e8       	ldi	r20, 0x80	; 128
    1ac2:	5f e3       	ldi	r21, 0x3F	; 63
    1ac4:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1ac8:	88 23       	and	r24, r24
    1aca:	2c f4       	brge	.+10     	; 0x1ad6 <Lcd_vidWriteChar+0x1b2>
		__ticks = 1;
    1acc:	81 e0       	ldi	r24, 0x01	; 1
    1ace:	90 e0       	ldi	r25, 0x00	; 0
    1ad0:	9c 8b       	std	Y+20, r25	; 0x14
    1ad2:	8b 8b       	std	Y+19, r24	; 0x13
    1ad4:	3f c0       	rjmp	.+126    	; 0x1b54 <Lcd_vidWriteChar+0x230>
	else if (__tmp > 65535)
    1ad6:	6d 89       	ldd	r22, Y+21	; 0x15
    1ad8:	7e 89       	ldd	r23, Y+22	; 0x16
    1ada:	8f 89       	ldd	r24, Y+23	; 0x17
    1adc:	98 8d       	ldd	r25, Y+24	; 0x18
    1ade:	20 e0       	ldi	r18, 0x00	; 0
    1ae0:	3f ef       	ldi	r19, 0xFF	; 255
    1ae2:	4f e7       	ldi	r20, 0x7F	; 127
    1ae4:	57 e4       	ldi	r21, 0x47	; 71
    1ae6:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1aea:	18 16       	cp	r1, r24
    1aec:	4c f5       	brge	.+82     	; 0x1b40 <Lcd_vidWriteChar+0x21c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1aee:	69 8d       	ldd	r22, Y+25	; 0x19
    1af0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1af2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1af4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1af6:	20 e0       	ldi	r18, 0x00	; 0
    1af8:	30 e0       	ldi	r19, 0x00	; 0
    1afa:	40 e2       	ldi	r20, 0x20	; 32
    1afc:	51 e4       	ldi	r21, 0x41	; 65
    1afe:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1b02:	dc 01       	movw	r26, r24
    1b04:	cb 01       	movw	r24, r22
    1b06:	bc 01       	movw	r22, r24
    1b08:	cd 01       	movw	r24, r26
    1b0a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1b0e:	dc 01       	movw	r26, r24
    1b10:	cb 01       	movw	r24, r22
    1b12:	9c 8b       	std	Y+20, r25	; 0x14
    1b14:	8b 8b       	std	Y+19, r24	; 0x13
    1b16:	0f c0       	rjmp	.+30     	; 0x1b36 <Lcd_vidWriteChar+0x212>
    1b18:	88 ec       	ldi	r24, 0xC8	; 200
    1b1a:	90 e0       	ldi	r25, 0x00	; 0
    1b1c:	9a 8b       	std	Y+18, r25	; 0x12
    1b1e:	89 8b       	std	Y+17, r24	; 0x11
    1b20:	89 89       	ldd	r24, Y+17	; 0x11
    1b22:	9a 89       	ldd	r25, Y+18	; 0x12
    1b24:	01 97       	sbiw	r24, 0x01	; 1
    1b26:	f1 f7       	brne	.-4      	; 0x1b24 <Lcd_vidWriteChar+0x200>
    1b28:	9a 8b       	std	Y+18, r25	; 0x12
    1b2a:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b2c:	8b 89       	ldd	r24, Y+19	; 0x13
    1b2e:	9c 89       	ldd	r25, Y+20	; 0x14
    1b30:	01 97       	sbiw	r24, 0x01	; 1
    1b32:	9c 8b       	std	Y+20, r25	; 0x14
    1b34:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1b36:	8b 89       	ldd	r24, Y+19	; 0x13
    1b38:	9c 89       	ldd	r25, Y+20	; 0x14
    1b3a:	00 97       	sbiw	r24, 0x00	; 0
    1b3c:	69 f7       	brne	.-38     	; 0x1b18 <Lcd_vidWriteChar+0x1f4>
    1b3e:	14 c0       	rjmp	.+40     	; 0x1b68 <Lcd_vidWriteChar+0x244>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1b40:	6d 89       	ldd	r22, Y+21	; 0x15
    1b42:	7e 89       	ldd	r23, Y+22	; 0x16
    1b44:	8f 89       	ldd	r24, Y+23	; 0x17
    1b46:	98 8d       	ldd	r25, Y+24	; 0x18
    1b48:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1b4c:	dc 01       	movw	r26, r24
    1b4e:	cb 01       	movw	r24, r22
    1b50:	9c 8b       	std	Y+20, r25	; 0x14
    1b52:	8b 8b       	std	Y+19, r24	; 0x13
    1b54:	8b 89       	ldd	r24, Y+19	; 0x13
    1b56:	9c 89       	ldd	r25, Y+20	; 0x14
    1b58:	98 8b       	std	Y+16, r25	; 0x10
    1b5a:	8f 87       	std	Y+15, r24	; 0x0f
    1b5c:	8f 85       	ldd	r24, Y+15	; 0x0f
    1b5e:	98 89       	ldd	r25, Y+16	; 0x10
    1b60:	01 97       	sbiw	r24, 0x01	; 1
    1b62:	f1 f7       	brne	.-4      	; 0x1b60 <Lcd_vidWriteChar+0x23c>
    1b64:	98 8b       	std	Y+16, r25	; 0x10
    1b66:	8f 87       	std	Y+15, r24	; 0x0f

	_delay_ms(2);
	Dio_vidSetPinVal(LCD_u8EN,DIO_u8HIGH);
    1b68:	89 e0       	ldi	r24, 0x09	; 9
    1b6a:	61 e0       	ldi	r22, 0x01	; 1
    1b6c:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D4,GET_BIT(Character,0));
    1b70:	8b a5       	ldd	r24, Y+43	; 0x2b
    1b72:	98 2f       	mov	r25, r24
    1b74:	91 70       	andi	r25, 0x01	; 1
    1b76:	84 e0       	ldi	r24, 0x04	; 4
    1b78:	69 2f       	mov	r22, r25
    1b7a:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D5,GET_BIT(Character,1));
    1b7e:	8b a5       	ldd	r24, Y+43	; 0x2b
    1b80:	86 95       	lsr	r24
    1b82:	98 2f       	mov	r25, r24
    1b84:	91 70       	andi	r25, 0x01	; 1
    1b86:	85 e0       	ldi	r24, 0x05	; 5
    1b88:	69 2f       	mov	r22, r25
    1b8a:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D6,GET_BIT(Character,2));
    1b8e:	8b a5       	ldd	r24, Y+43	; 0x2b
    1b90:	86 95       	lsr	r24
    1b92:	86 95       	lsr	r24
    1b94:	98 2f       	mov	r25, r24
    1b96:	91 70       	andi	r25, 0x01	; 1
    1b98:	86 e0       	ldi	r24, 0x06	; 6
    1b9a:	69 2f       	mov	r22, r25
    1b9c:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D7,GET_BIT(Character,3));
    1ba0:	8b a5       	ldd	r24, Y+43	; 0x2b
    1ba2:	86 95       	lsr	r24
    1ba4:	86 95       	lsr	r24
    1ba6:	86 95       	lsr	r24
    1ba8:	98 2f       	mov	r25, r24
    1baa:	91 70       	andi	r25, 0x01	; 1
    1bac:	87 e0       	ldi	r24, 0x07	; 7
    1bae:	69 2f       	mov	r22, r25
    1bb0:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
    1bb4:	80 e0       	ldi	r24, 0x00	; 0
    1bb6:	90 e0       	ldi	r25, 0x00	; 0
    1bb8:	a0 e8       	ldi	r26, 0x80	; 128
    1bba:	b0 e4       	ldi	r27, 0x40	; 64
    1bbc:	8b 87       	std	Y+11, r24	; 0x0b
    1bbe:	9c 87       	std	Y+12, r25	; 0x0c
    1bc0:	ad 87       	std	Y+13, r26	; 0x0d
    1bc2:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1bc4:	6b 85       	ldd	r22, Y+11	; 0x0b
    1bc6:	7c 85       	ldd	r23, Y+12	; 0x0c
    1bc8:	8d 85       	ldd	r24, Y+13	; 0x0d
    1bca:	9e 85       	ldd	r25, Y+14	; 0x0e
    1bcc:	20 e0       	ldi	r18, 0x00	; 0
    1bce:	30 e0       	ldi	r19, 0x00	; 0
    1bd0:	4a ef       	ldi	r20, 0xFA	; 250
    1bd2:	54 e4       	ldi	r21, 0x44	; 68
    1bd4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1bd8:	dc 01       	movw	r26, r24
    1bda:	cb 01       	movw	r24, r22
    1bdc:	8f 83       	std	Y+7, r24	; 0x07
    1bde:	98 87       	std	Y+8, r25	; 0x08
    1be0:	a9 87       	std	Y+9, r26	; 0x09
    1be2:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1be4:	6f 81       	ldd	r22, Y+7	; 0x07
    1be6:	78 85       	ldd	r23, Y+8	; 0x08
    1be8:	89 85       	ldd	r24, Y+9	; 0x09
    1bea:	9a 85       	ldd	r25, Y+10	; 0x0a
    1bec:	20 e0       	ldi	r18, 0x00	; 0
    1bee:	30 e0       	ldi	r19, 0x00	; 0
    1bf0:	40 e8       	ldi	r20, 0x80	; 128
    1bf2:	5f e3       	ldi	r21, 0x3F	; 63
    1bf4:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1bf8:	88 23       	and	r24, r24
    1bfa:	2c f4       	brge	.+10     	; 0x1c06 <Lcd_vidWriteChar+0x2e2>
		__ticks = 1;
    1bfc:	81 e0       	ldi	r24, 0x01	; 1
    1bfe:	90 e0       	ldi	r25, 0x00	; 0
    1c00:	9e 83       	std	Y+6, r25	; 0x06
    1c02:	8d 83       	std	Y+5, r24	; 0x05
    1c04:	3f c0       	rjmp	.+126    	; 0x1c84 <Lcd_vidWriteChar+0x360>
	else if (__tmp > 65535)
    1c06:	6f 81       	ldd	r22, Y+7	; 0x07
    1c08:	78 85       	ldd	r23, Y+8	; 0x08
    1c0a:	89 85       	ldd	r24, Y+9	; 0x09
    1c0c:	9a 85       	ldd	r25, Y+10	; 0x0a
    1c0e:	20 e0       	ldi	r18, 0x00	; 0
    1c10:	3f ef       	ldi	r19, 0xFF	; 255
    1c12:	4f e7       	ldi	r20, 0x7F	; 127
    1c14:	57 e4       	ldi	r21, 0x47	; 71
    1c16:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1c1a:	18 16       	cp	r1, r24
    1c1c:	4c f5       	brge	.+82     	; 0x1c70 <Lcd_vidWriteChar+0x34c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c1e:	6b 85       	ldd	r22, Y+11	; 0x0b
    1c20:	7c 85       	ldd	r23, Y+12	; 0x0c
    1c22:	8d 85       	ldd	r24, Y+13	; 0x0d
    1c24:	9e 85       	ldd	r25, Y+14	; 0x0e
    1c26:	20 e0       	ldi	r18, 0x00	; 0
    1c28:	30 e0       	ldi	r19, 0x00	; 0
    1c2a:	40 e2       	ldi	r20, 0x20	; 32
    1c2c:	51 e4       	ldi	r21, 0x41	; 65
    1c2e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c32:	dc 01       	movw	r26, r24
    1c34:	cb 01       	movw	r24, r22
    1c36:	bc 01       	movw	r22, r24
    1c38:	cd 01       	movw	r24, r26
    1c3a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c3e:	dc 01       	movw	r26, r24
    1c40:	cb 01       	movw	r24, r22
    1c42:	9e 83       	std	Y+6, r25	; 0x06
    1c44:	8d 83       	std	Y+5, r24	; 0x05
    1c46:	0f c0       	rjmp	.+30     	; 0x1c66 <Lcd_vidWriteChar+0x342>
    1c48:	88 ec       	ldi	r24, 0xC8	; 200
    1c4a:	90 e0       	ldi	r25, 0x00	; 0
    1c4c:	9c 83       	std	Y+4, r25	; 0x04
    1c4e:	8b 83       	std	Y+3, r24	; 0x03
    1c50:	8b 81       	ldd	r24, Y+3	; 0x03
    1c52:	9c 81       	ldd	r25, Y+4	; 0x04
    1c54:	01 97       	sbiw	r24, 0x01	; 1
    1c56:	f1 f7       	brne	.-4      	; 0x1c54 <Lcd_vidWriteChar+0x330>
    1c58:	9c 83       	std	Y+4, r25	; 0x04
    1c5a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1c5c:	8d 81       	ldd	r24, Y+5	; 0x05
    1c5e:	9e 81       	ldd	r25, Y+6	; 0x06
    1c60:	01 97       	sbiw	r24, 0x01	; 1
    1c62:	9e 83       	std	Y+6, r25	; 0x06
    1c64:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c66:	8d 81       	ldd	r24, Y+5	; 0x05
    1c68:	9e 81       	ldd	r25, Y+6	; 0x06
    1c6a:	00 97       	sbiw	r24, 0x00	; 0
    1c6c:	69 f7       	brne	.-38     	; 0x1c48 <Lcd_vidWriteChar+0x324>
    1c6e:	14 c0       	rjmp	.+40     	; 0x1c98 <Lcd_vidWriteChar+0x374>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c70:	6f 81       	ldd	r22, Y+7	; 0x07
    1c72:	78 85       	ldd	r23, Y+8	; 0x08
    1c74:	89 85       	ldd	r24, Y+9	; 0x09
    1c76:	9a 85       	ldd	r25, Y+10	; 0x0a
    1c78:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c7c:	dc 01       	movw	r26, r24
    1c7e:	cb 01       	movw	r24, r22
    1c80:	9e 83       	std	Y+6, r25	; 0x06
    1c82:	8d 83       	std	Y+5, r24	; 0x05
    1c84:	8d 81       	ldd	r24, Y+5	; 0x05
    1c86:	9e 81       	ldd	r25, Y+6	; 0x06
    1c88:	9a 83       	std	Y+2, r25	; 0x02
    1c8a:	89 83       	std	Y+1, r24	; 0x01
    1c8c:	89 81       	ldd	r24, Y+1	; 0x01
    1c8e:	9a 81       	ldd	r25, Y+2	; 0x02
    1c90:	01 97       	sbiw	r24, 0x01	; 1
    1c92:	f1 f7       	brne	.-4      	; 0x1c90 <Lcd_vidWriteChar+0x36c>
    1c94:	9a 83       	std	Y+2, r25	; 0x02
    1c96:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(4);
	Dio_vidSetPinVal(LCD_u8EN,DIO_u8LOW);
    1c98:	89 e0       	ldi	r24, 0x09	; 9
    1c9a:	60 e0       	ldi	r22, 0x00	; 0
    1c9c:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>

#endif
}
    1ca0:	ab 96       	adiw	r28, 0x2b	; 43
    1ca2:	0f b6       	in	r0, 0x3f	; 63
    1ca4:	f8 94       	cli
    1ca6:	de bf       	out	0x3e, r29	; 62
    1ca8:	0f be       	out	0x3f, r0	; 63
    1caa:	cd bf       	out	0x3d, r28	; 61
    1cac:	cf 91       	pop	r28
    1cae:	df 91       	pop	r29
    1cb0:	08 95       	ret

00001cb2 <Lcd_vidSendCommand>:

void Lcd_vidSendCommand(u8 Cmd)
{
    1cb2:	df 93       	push	r29
    1cb4:	cf 93       	push	r28
    1cb6:	cd b7       	in	r28, 0x3d	; 61
    1cb8:	de b7       	in	r29, 0x3e	; 62
    1cba:	ab 97       	sbiw	r28, 0x2b	; 43
    1cbc:	0f b6       	in	r0, 0x3f	; 63
    1cbe:	f8 94       	cli
    1cc0:	de bf       	out	0x3e, r29	; 62
    1cc2:	0f be       	out	0x3f, r0	; 63
    1cc4:	cd bf       	out	0x3d, r28	; 61
    1cc6:	8b a7       	std	Y+43, r24	; 0x2b
	Dio_vidSetPinVal(LCD_u8D7,GET_BIT(Cmd,7));
	_delay_ms(2);
	Dio_vidSetPinVal(LCD_u8EN,DIO_u8LOW);

#elif Lcd_u8Mode==Lcd_u8FourBit
	Dio_vidSetPinVal(LCD_u8RS,DIO_u8LOW);
    1cc8:	88 e0       	ldi	r24, 0x08	; 8
    1cca:	60 e0       	ldi	r22, 0x00	; 0
    1ccc:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
	//Dio_vidSetPinVal(LCD_u8RW,DIO_u8LOW);
	Dio_vidSetPinVal(LCD_u8EN,DIO_u8HIGH);
    1cd0:	89 e0       	ldi	r24, 0x09	; 9
    1cd2:	61 e0       	ldi	r22, 0x01	; 1
    1cd4:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D4,GET_BIT(Cmd,4));
    1cd8:	8b a5       	ldd	r24, Y+43	; 0x2b
    1cda:	82 95       	swap	r24
    1cdc:	8f 70       	andi	r24, 0x0F	; 15
    1cde:	98 2f       	mov	r25, r24
    1ce0:	91 70       	andi	r25, 0x01	; 1
    1ce2:	84 e0       	ldi	r24, 0x04	; 4
    1ce4:	69 2f       	mov	r22, r25
    1ce6:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D5,GET_BIT(Cmd,5));
    1cea:	8b a5       	ldd	r24, Y+43	; 0x2b
    1cec:	82 95       	swap	r24
    1cee:	86 95       	lsr	r24
    1cf0:	87 70       	andi	r24, 0x07	; 7
    1cf2:	98 2f       	mov	r25, r24
    1cf4:	91 70       	andi	r25, 0x01	; 1
    1cf6:	85 e0       	ldi	r24, 0x05	; 5
    1cf8:	69 2f       	mov	r22, r25
    1cfa:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D6,GET_BIT(Cmd,6));
    1cfe:	8b a5       	ldd	r24, Y+43	; 0x2b
    1d00:	82 95       	swap	r24
    1d02:	86 95       	lsr	r24
    1d04:	86 95       	lsr	r24
    1d06:	83 70       	andi	r24, 0x03	; 3
    1d08:	98 2f       	mov	r25, r24
    1d0a:	91 70       	andi	r25, 0x01	; 1
    1d0c:	86 e0       	ldi	r24, 0x06	; 6
    1d0e:	69 2f       	mov	r22, r25
    1d10:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D7,GET_BIT(Cmd,7));
    1d14:	8b a5       	ldd	r24, Y+43	; 0x2b
    1d16:	98 2f       	mov	r25, r24
    1d18:	99 1f       	adc	r25, r25
    1d1a:	99 27       	eor	r25, r25
    1d1c:	99 1f       	adc	r25, r25
    1d1e:	87 e0       	ldi	r24, 0x07	; 7
    1d20:	69 2f       	mov	r22, r25
    1d22:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
    1d26:	80 e0       	ldi	r24, 0x00	; 0
    1d28:	90 e0       	ldi	r25, 0x00	; 0
    1d2a:	a0 e8       	ldi	r26, 0x80	; 128
    1d2c:	b0 e4       	ldi	r27, 0x40	; 64
    1d2e:	8f a3       	std	Y+39, r24	; 0x27
    1d30:	98 a7       	std	Y+40, r25	; 0x28
    1d32:	a9 a7       	std	Y+41, r26	; 0x29
    1d34:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1d36:	6f a1       	ldd	r22, Y+39	; 0x27
    1d38:	78 a5       	ldd	r23, Y+40	; 0x28
    1d3a:	89 a5       	ldd	r24, Y+41	; 0x29
    1d3c:	9a a5       	ldd	r25, Y+42	; 0x2a
    1d3e:	20 e0       	ldi	r18, 0x00	; 0
    1d40:	30 e0       	ldi	r19, 0x00	; 0
    1d42:	4a ef       	ldi	r20, 0xFA	; 250
    1d44:	54 e4       	ldi	r21, 0x44	; 68
    1d46:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1d4a:	dc 01       	movw	r26, r24
    1d4c:	cb 01       	movw	r24, r22
    1d4e:	8b a3       	std	Y+35, r24	; 0x23
    1d50:	9c a3       	std	Y+36, r25	; 0x24
    1d52:	ad a3       	std	Y+37, r26	; 0x25
    1d54:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1d56:	6b a1       	ldd	r22, Y+35	; 0x23
    1d58:	7c a1       	ldd	r23, Y+36	; 0x24
    1d5a:	8d a1       	ldd	r24, Y+37	; 0x25
    1d5c:	9e a1       	ldd	r25, Y+38	; 0x26
    1d5e:	20 e0       	ldi	r18, 0x00	; 0
    1d60:	30 e0       	ldi	r19, 0x00	; 0
    1d62:	40 e8       	ldi	r20, 0x80	; 128
    1d64:	5f e3       	ldi	r21, 0x3F	; 63
    1d66:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1d6a:	88 23       	and	r24, r24
    1d6c:	2c f4       	brge	.+10     	; 0x1d78 <Lcd_vidSendCommand+0xc6>
		__ticks = 1;
    1d6e:	81 e0       	ldi	r24, 0x01	; 1
    1d70:	90 e0       	ldi	r25, 0x00	; 0
    1d72:	9a a3       	std	Y+34, r25	; 0x22
    1d74:	89 a3       	std	Y+33, r24	; 0x21
    1d76:	3f c0       	rjmp	.+126    	; 0x1df6 <Lcd_vidSendCommand+0x144>
	else if (__tmp > 65535)
    1d78:	6b a1       	ldd	r22, Y+35	; 0x23
    1d7a:	7c a1       	ldd	r23, Y+36	; 0x24
    1d7c:	8d a1       	ldd	r24, Y+37	; 0x25
    1d7e:	9e a1       	ldd	r25, Y+38	; 0x26
    1d80:	20 e0       	ldi	r18, 0x00	; 0
    1d82:	3f ef       	ldi	r19, 0xFF	; 255
    1d84:	4f e7       	ldi	r20, 0x7F	; 127
    1d86:	57 e4       	ldi	r21, 0x47	; 71
    1d88:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1d8c:	18 16       	cp	r1, r24
    1d8e:	4c f5       	brge	.+82     	; 0x1de2 <Lcd_vidSendCommand+0x130>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d90:	6f a1       	ldd	r22, Y+39	; 0x27
    1d92:	78 a5       	ldd	r23, Y+40	; 0x28
    1d94:	89 a5       	ldd	r24, Y+41	; 0x29
    1d96:	9a a5       	ldd	r25, Y+42	; 0x2a
    1d98:	20 e0       	ldi	r18, 0x00	; 0
    1d9a:	30 e0       	ldi	r19, 0x00	; 0
    1d9c:	40 e2       	ldi	r20, 0x20	; 32
    1d9e:	51 e4       	ldi	r21, 0x41	; 65
    1da0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1da4:	dc 01       	movw	r26, r24
    1da6:	cb 01       	movw	r24, r22
    1da8:	bc 01       	movw	r22, r24
    1daa:	cd 01       	movw	r24, r26
    1dac:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1db0:	dc 01       	movw	r26, r24
    1db2:	cb 01       	movw	r24, r22
    1db4:	9a a3       	std	Y+34, r25	; 0x22
    1db6:	89 a3       	std	Y+33, r24	; 0x21
    1db8:	0f c0       	rjmp	.+30     	; 0x1dd8 <Lcd_vidSendCommand+0x126>
    1dba:	88 ec       	ldi	r24, 0xC8	; 200
    1dbc:	90 e0       	ldi	r25, 0x00	; 0
    1dbe:	98 a3       	std	Y+32, r25	; 0x20
    1dc0:	8f 8f       	std	Y+31, r24	; 0x1f
    1dc2:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1dc4:	98 a1       	ldd	r25, Y+32	; 0x20
    1dc6:	01 97       	sbiw	r24, 0x01	; 1
    1dc8:	f1 f7       	brne	.-4      	; 0x1dc6 <Lcd_vidSendCommand+0x114>
    1dca:	98 a3       	std	Y+32, r25	; 0x20
    1dcc:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1dce:	89 a1       	ldd	r24, Y+33	; 0x21
    1dd0:	9a a1       	ldd	r25, Y+34	; 0x22
    1dd2:	01 97       	sbiw	r24, 0x01	; 1
    1dd4:	9a a3       	std	Y+34, r25	; 0x22
    1dd6:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1dd8:	89 a1       	ldd	r24, Y+33	; 0x21
    1dda:	9a a1       	ldd	r25, Y+34	; 0x22
    1ddc:	00 97       	sbiw	r24, 0x00	; 0
    1dde:	69 f7       	brne	.-38     	; 0x1dba <Lcd_vidSendCommand+0x108>
    1de0:	14 c0       	rjmp	.+40     	; 0x1e0a <Lcd_vidSendCommand+0x158>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1de2:	6b a1       	ldd	r22, Y+35	; 0x23
    1de4:	7c a1       	ldd	r23, Y+36	; 0x24
    1de6:	8d a1       	ldd	r24, Y+37	; 0x25
    1de8:	9e a1       	ldd	r25, Y+38	; 0x26
    1dea:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1dee:	dc 01       	movw	r26, r24
    1df0:	cb 01       	movw	r24, r22
    1df2:	9a a3       	std	Y+34, r25	; 0x22
    1df4:	89 a3       	std	Y+33, r24	; 0x21
    1df6:	89 a1       	ldd	r24, Y+33	; 0x21
    1df8:	9a a1       	ldd	r25, Y+34	; 0x22
    1dfa:	9e 8f       	std	Y+30, r25	; 0x1e
    1dfc:	8d 8f       	std	Y+29, r24	; 0x1d
    1dfe:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1e00:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1e02:	01 97       	sbiw	r24, 0x01	; 1
    1e04:	f1 f7       	brne	.-4      	; 0x1e02 <Lcd_vidSendCommand+0x150>
    1e06:	9e 8f       	std	Y+30, r25	; 0x1e
    1e08:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(4);
	Dio_vidSetPinVal(LCD_u8EN,DIO_u8LOW);
    1e0a:	89 e0       	ldi	r24, 0x09	; 9
    1e0c:	60 e0       	ldi	r22, 0x00	; 0
    1e0e:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
    1e12:	80 e0       	ldi	r24, 0x00	; 0
    1e14:	90 e0       	ldi	r25, 0x00	; 0
    1e16:	a0 e0       	ldi	r26, 0x00	; 0
    1e18:	b0 e4       	ldi	r27, 0x40	; 64
    1e1a:	89 8f       	std	Y+25, r24	; 0x19
    1e1c:	9a 8f       	std	Y+26, r25	; 0x1a
    1e1e:	ab 8f       	std	Y+27, r26	; 0x1b
    1e20:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1e22:	69 8d       	ldd	r22, Y+25	; 0x19
    1e24:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1e26:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1e28:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1e2a:	20 e0       	ldi	r18, 0x00	; 0
    1e2c:	30 e0       	ldi	r19, 0x00	; 0
    1e2e:	4a ef       	ldi	r20, 0xFA	; 250
    1e30:	54 e4       	ldi	r21, 0x44	; 68
    1e32:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1e36:	dc 01       	movw	r26, r24
    1e38:	cb 01       	movw	r24, r22
    1e3a:	8d 8b       	std	Y+21, r24	; 0x15
    1e3c:	9e 8b       	std	Y+22, r25	; 0x16
    1e3e:	af 8b       	std	Y+23, r26	; 0x17
    1e40:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1e42:	6d 89       	ldd	r22, Y+21	; 0x15
    1e44:	7e 89       	ldd	r23, Y+22	; 0x16
    1e46:	8f 89       	ldd	r24, Y+23	; 0x17
    1e48:	98 8d       	ldd	r25, Y+24	; 0x18
    1e4a:	20 e0       	ldi	r18, 0x00	; 0
    1e4c:	30 e0       	ldi	r19, 0x00	; 0
    1e4e:	40 e8       	ldi	r20, 0x80	; 128
    1e50:	5f e3       	ldi	r21, 0x3F	; 63
    1e52:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1e56:	88 23       	and	r24, r24
    1e58:	2c f4       	brge	.+10     	; 0x1e64 <Lcd_vidSendCommand+0x1b2>
		__ticks = 1;
    1e5a:	81 e0       	ldi	r24, 0x01	; 1
    1e5c:	90 e0       	ldi	r25, 0x00	; 0
    1e5e:	9c 8b       	std	Y+20, r25	; 0x14
    1e60:	8b 8b       	std	Y+19, r24	; 0x13
    1e62:	3f c0       	rjmp	.+126    	; 0x1ee2 <Lcd_vidSendCommand+0x230>
	else if (__tmp > 65535)
    1e64:	6d 89       	ldd	r22, Y+21	; 0x15
    1e66:	7e 89       	ldd	r23, Y+22	; 0x16
    1e68:	8f 89       	ldd	r24, Y+23	; 0x17
    1e6a:	98 8d       	ldd	r25, Y+24	; 0x18
    1e6c:	20 e0       	ldi	r18, 0x00	; 0
    1e6e:	3f ef       	ldi	r19, 0xFF	; 255
    1e70:	4f e7       	ldi	r20, 0x7F	; 127
    1e72:	57 e4       	ldi	r21, 0x47	; 71
    1e74:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1e78:	18 16       	cp	r1, r24
    1e7a:	4c f5       	brge	.+82     	; 0x1ece <Lcd_vidSendCommand+0x21c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1e7c:	69 8d       	ldd	r22, Y+25	; 0x19
    1e7e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1e80:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1e82:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1e84:	20 e0       	ldi	r18, 0x00	; 0
    1e86:	30 e0       	ldi	r19, 0x00	; 0
    1e88:	40 e2       	ldi	r20, 0x20	; 32
    1e8a:	51 e4       	ldi	r21, 0x41	; 65
    1e8c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1e90:	dc 01       	movw	r26, r24
    1e92:	cb 01       	movw	r24, r22
    1e94:	bc 01       	movw	r22, r24
    1e96:	cd 01       	movw	r24, r26
    1e98:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1e9c:	dc 01       	movw	r26, r24
    1e9e:	cb 01       	movw	r24, r22
    1ea0:	9c 8b       	std	Y+20, r25	; 0x14
    1ea2:	8b 8b       	std	Y+19, r24	; 0x13
    1ea4:	0f c0       	rjmp	.+30     	; 0x1ec4 <Lcd_vidSendCommand+0x212>
    1ea6:	88 ec       	ldi	r24, 0xC8	; 200
    1ea8:	90 e0       	ldi	r25, 0x00	; 0
    1eaa:	9a 8b       	std	Y+18, r25	; 0x12
    1eac:	89 8b       	std	Y+17, r24	; 0x11
    1eae:	89 89       	ldd	r24, Y+17	; 0x11
    1eb0:	9a 89       	ldd	r25, Y+18	; 0x12
    1eb2:	01 97       	sbiw	r24, 0x01	; 1
    1eb4:	f1 f7       	brne	.-4      	; 0x1eb2 <Lcd_vidSendCommand+0x200>
    1eb6:	9a 8b       	std	Y+18, r25	; 0x12
    1eb8:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1eba:	8b 89       	ldd	r24, Y+19	; 0x13
    1ebc:	9c 89       	ldd	r25, Y+20	; 0x14
    1ebe:	01 97       	sbiw	r24, 0x01	; 1
    1ec0:	9c 8b       	std	Y+20, r25	; 0x14
    1ec2:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ec4:	8b 89       	ldd	r24, Y+19	; 0x13
    1ec6:	9c 89       	ldd	r25, Y+20	; 0x14
    1ec8:	00 97       	sbiw	r24, 0x00	; 0
    1eca:	69 f7       	brne	.-38     	; 0x1ea6 <Lcd_vidSendCommand+0x1f4>
    1ecc:	14 c0       	rjmp	.+40     	; 0x1ef6 <Lcd_vidSendCommand+0x244>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1ece:	6d 89       	ldd	r22, Y+21	; 0x15
    1ed0:	7e 89       	ldd	r23, Y+22	; 0x16
    1ed2:	8f 89       	ldd	r24, Y+23	; 0x17
    1ed4:	98 8d       	ldd	r25, Y+24	; 0x18
    1ed6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1eda:	dc 01       	movw	r26, r24
    1edc:	cb 01       	movw	r24, r22
    1ede:	9c 8b       	std	Y+20, r25	; 0x14
    1ee0:	8b 8b       	std	Y+19, r24	; 0x13
    1ee2:	8b 89       	ldd	r24, Y+19	; 0x13
    1ee4:	9c 89       	ldd	r25, Y+20	; 0x14
    1ee6:	98 8b       	std	Y+16, r25	; 0x10
    1ee8:	8f 87       	std	Y+15, r24	; 0x0f
    1eea:	8f 85       	ldd	r24, Y+15	; 0x0f
    1eec:	98 89       	ldd	r25, Y+16	; 0x10
    1eee:	01 97       	sbiw	r24, 0x01	; 1
    1ef0:	f1 f7       	brne	.-4      	; 0x1eee <Lcd_vidSendCommand+0x23c>
    1ef2:	98 8b       	std	Y+16, r25	; 0x10
    1ef4:	8f 87       	std	Y+15, r24	; 0x0f

	_delay_ms(2);
	Dio_vidSetPinVal(LCD_u8EN,DIO_u8HIGH);
    1ef6:	89 e0       	ldi	r24, 0x09	; 9
    1ef8:	61 e0       	ldi	r22, 0x01	; 1
    1efa:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D4,GET_BIT(Cmd,0));
    1efe:	8b a5       	ldd	r24, Y+43	; 0x2b
    1f00:	98 2f       	mov	r25, r24
    1f02:	91 70       	andi	r25, 0x01	; 1
    1f04:	84 e0       	ldi	r24, 0x04	; 4
    1f06:	69 2f       	mov	r22, r25
    1f08:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D5,GET_BIT(Cmd,1));
    1f0c:	8b a5       	ldd	r24, Y+43	; 0x2b
    1f0e:	86 95       	lsr	r24
    1f10:	98 2f       	mov	r25, r24
    1f12:	91 70       	andi	r25, 0x01	; 1
    1f14:	85 e0       	ldi	r24, 0x05	; 5
    1f16:	69 2f       	mov	r22, r25
    1f18:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D6,GET_BIT(Cmd,2));
    1f1c:	8b a5       	ldd	r24, Y+43	; 0x2b
    1f1e:	86 95       	lsr	r24
    1f20:	86 95       	lsr	r24
    1f22:	98 2f       	mov	r25, r24
    1f24:	91 70       	andi	r25, 0x01	; 1
    1f26:	86 e0       	ldi	r24, 0x06	; 6
    1f28:	69 2f       	mov	r22, r25
    1f2a:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D7,GET_BIT(Cmd,3));
    1f2e:	8b a5       	ldd	r24, Y+43	; 0x2b
    1f30:	86 95       	lsr	r24
    1f32:	86 95       	lsr	r24
    1f34:	86 95       	lsr	r24
    1f36:	98 2f       	mov	r25, r24
    1f38:	91 70       	andi	r25, 0x01	; 1
    1f3a:	87 e0       	ldi	r24, 0x07	; 7
    1f3c:	69 2f       	mov	r22, r25
    1f3e:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
    1f42:	80 e0       	ldi	r24, 0x00	; 0
    1f44:	90 e0       	ldi	r25, 0x00	; 0
    1f46:	a0 e0       	ldi	r26, 0x00	; 0
    1f48:	b0 e4       	ldi	r27, 0x40	; 64
    1f4a:	8b 87       	std	Y+11, r24	; 0x0b
    1f4c:	9c 87       	std	Y+12, r25	; 0x0c
    1f4e:	ad 87       	std	Y+13, r26	; 0x0d
    1f50:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1f52:	6b 85       	ldd	r22, Y+11	; 0x0b
    1f54:	7c 85       	ldd	r23, Y+12	; 0x0c
    1f56:	8d 85       	ldd	r24, Y+13	; 0x0d
    1f58:	9e 85       	ldd	r25, Y+14	; 0x0e
    1f5a:	20 e0       	ldi	r18, 0x00	; 0
    1f5c:	30 e0       	ldi	r19, 0x00	; 0
    1f5e:	4a ef       	ldi	r20, 0xFA	; 250
    1f60:	54 e4       	ldi	r21, 0x44	; 68
    1f62:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1f66:	dc 01       	movw	r26, r24
    1f68:	cb 01       	movw	r24, r22
    1f6a:	8f 83       	std	Y+7, r24	; 0x07
    1f6c:	98 87       	std	Y+8, r25	; 0x08
    1f6e:	a9 87       	std	Y+9, r26	; 0x09
    1f70:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1f72:	6f 81       	ldd	r22, Y+7	; 0x07
    1f74:	78 85       	ldd	r23, Y+8	; 0x08
    1f76:	89 85       	ldd	r24, Y+9	; 0x09
    1f78:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f7a:	20 e0       	ldi	r18, 0x00	; 0
    1f7c:	30 e0       	ldi	r19, 0x00	; 0
    1f7e:	40 e8       	ldi	r20, 0x80	; 128
    1f80:	5f e3       	ldi	r21, 0x3F	; 63
    1f82:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1f86:	88 23       	and	r24, r24
    1f88:	2c f4       	brge	.+10     	; 0x1f94 <Lcd_vidSendCommand+0x2e2>
		__ticks = 1;
    1f8a:	81 e0       	ldi	r24, 0x01	; 1
    1f8c:	90 e0       	ldi	r25, 0x00	; 0
    1f8e:	9e 83       	std	Y+6, r25	; 0x06
    1f90:	8d 83       	std	Y+5, r24	; 0x05
    1f92:	3f c0       	rjmp	.+126    	; 0x2012 <Lcd_vidSendCommand+0x360>
	else if (__tmp > 65535)
    1f94:	6f 81       	ldd	r22, Y+7	; 0x07
    1f96:	78 85       	ldd	r23, Y+8	; 0x08
    1f98:	89 85       	ldd	r24, Y+9	; 0x09
    1f9a:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f9c:	20 e0       	ldi	r18, 0x00	; 0
    1f9e:	3f ef       	ldi	r19, 0xFF	; 255
    1fa0:	4f e7       	ldi	r20, 0x7F	; 127
    1fa2:	57 e4       	ldi	r21, 0x47	; 71
    1fa4:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1fa8:	18 16       	cp	r1, r24
    1faa:	4c f5       	brge	.+82     	; 0x1ffe <Lcd_vidSendCommand+0x34c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1fac:	6b 85       	ldd	r22, Y+11	; 0x0b
    1fae:	7c 85       	ldd	r23, Y+12	; 0x0c
    1fb0:	8d 85       	ldd	r24, Y+13	; 0x0d
    1fb2:	9e 85       	ldd	r25, Y+14	; 0x0e
    1fb4:	20 e0       	ldi	r18, 0x00	; 0
    1fb6:	30 e0       	ldi	r19, 0x00	; 0
    1fb8:	40 e2       	ldi	r20, 0x20	; 32
    1fba:	51 e4       	ldi	r21, 0x41	; 65
    1fbc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1fc0:	dc 01       	movw	r26, r24
    1fc2:	cb 01       	movw	r24, r22
    1fc4:	bc 01       	movw	r22, r24
    1fc6:	cd 01       	movw	r24, r26
    1fc8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1fcc:	dc 01       	movw	r26, r24
    1fce:	cb 01       	movw	r24, r22
    1fd0:	9e 83       	std	Y+6, r25	; 0x06
    1fd2:	8d 83       	std	Y+5, r24	; 0x05
    1fd4:	0f c0       	rjmp	.+30     	; 0x1ff4 <Lcd_vidSendCommand+0x342>
    1fd6:	88 ec       	ldi	r24, 0xC8	; 200
    1fd8:	90 e0       	ldi	r25, 0x00	; 0
    1fda:	9c 83       	std	Y+4, r25	; 0x04
    1fdc:	8b 83       	std	Y+3, r24	; 0x03
    1fde:	8b 81       	ldd	r24, Y+3	; 0x03
    1fe0:	9c 81       	ldd	r25, Y+4	; 0x04
    1fe2:	01 97       	sbiw	r24, 0x01	; 1
    1fe4:	f1 f7       	brne	.-4      	; 0x1fe2 <Lcd_vidSendCommand+0x330>
    1fe6:	9c 83       	std	Y+4, r25	; 0x04
    1fe8:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1fea:	8d 81       	ldd	r24, Y+5	; 0x05
    1fec:	9e 81       	ldd	r25, Y+6	; 0x06
    1fee:	01 97       	sbiw	r24, 0x01	; 1
    1ff0:	9e 83       	std	Y+6, r25	; 0x06
    1ff2:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ff4:	8d 81       	ldd	r24, Y+5	; 0x05
    1ff6:	9e 81       	ldd	r25, Y+6	; 0x06
    1ff8:	00 97       	sbiw	r24, 0x00	; 0
    1ffa:	69 f7       	brne	.-38     	; 0x1fd6 <Lcd_vidSendCommand+0x324>
    1ffc:	14 c0       	rjmp	.+40     	; 0x2026 <Lcd_vidSendCommand+0x374>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1ffe:	6f 81       	ldd	r22, Y+7	; 0x07
    2000:	78 85       	ldd	r23, Y+8	; 0x08
    2002:	89 85       	ldd	r24, Y+9	; 0x09
    2004:	9a 85       	ldd	r25, Y+10	; 0x0a
    2006:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    200a:	dc 01       	movw	r26, r24
    200c:	cb 01       	movw	r24, r22
    200e:	9e 83       	std	Y+6, r25	; 0x06
    2010:	8d 83       	std	Y+5, r24	; 0x05
    2012:	8d 81       	ldd	r24, Y+5	; 0x05
    2014:	9e 81       	ldd	r25, Y+6	; 0x06
    2016:	9a 83       	std	Y+2, r25	; 0x02
    2018:	89 83       	std	Y+1, r24	; 0x01
    201a:	89 81       	ldd	r24, Y+1	; 0x01
    201c:	9a 81       	ldd	r25, Y+2	; 0x02
    201e:	01 97       	sbiw	r24, 0x01	; 1
    2020:	f1 f7       	brne	.-4      	; 0x201e <Lcd_vidSendCommand+0x36c>
    2022:	9a 83       	std	Y+2, r25	; 0x02
    2024:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	Dio_vidSetPinVal(LCD_u8EN,DIO_u8LOW);
    2026:	89 e0       	ldi	r24, 0x09	; 9
    2028:	60 e0       	ldi	r22, 0x00	; 0
    202a:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>

#endif
}
    202e:	ab 96       	adiw	r28, 0x2b	; 43
    2030:	0f b6       	in	r0, 0x3f	; 63
    2032:	f8 94       	cli
    2034:	de bf       	out	0x3e, r29	; 62
    2036:	0f be       	out	0x3f, r0	; 63
    2038:	cd bf       	out	0x3d, r28	; 61
    203a:	cf 91       	pop	r28
    203c:	df 91       	pop	r29
    203e:	08 95       	ret

00002040 <Lcd_vidWriteString>:

void Lcd_vidWriteString(u8 *str)
{
    2040:	df 93       	push	r29
    2042:	cf 93       	push	r28
    2044:	00 d0       	rcall	.+0      	; 0x2046 <Lcd_vidWriteString+0x6>
    2046:	0f 92       	push	r0
    2048:	cd b7       	in	r28, 0x3d	; 61
    204a:	de b7       	in	r29, 0x3e	; 62
    204c:	9b 83       	std	Y+3, r25	; 0x03
    204e:	8a 83       	std	Y+2, r24	; 0x02
	u8 i;
	for(i=0;i<32;i++)
    2050:	19 82       	std	Y+1, r1	; 0x01
    2052:	20 c0       	rjmp	.+64     	; 0x2094 <Lcd_vidWriteString+0x54>
	{
		if(i==16)
    2054:	89 81       	ldd	r24, Y+1	; 0x01
    2056:	80 31       	cpi	r24, 0x10	; 16
    2058:	21 f4       	brne	.+8      	; 0x2062 <Lcd_vidWriteString+0x22>
			Lcd_vidGoTo(1,0);
    205a:	81 e0       	ldi	r24, 0x01	; 1
    205c:	60 e0       	ldi	r22, 0x00	; 0
    205e:	0e 94 53 10 	call	0x20a6	; 0x20a6 <Lcd_vidGoTo>
		if ( str[i] == '\0' )
    2062:	89 81       	ldd	r24, Y+1	; 0x01
    2064:	28 2f       	mov	r18, r24
    2066:	30 e0       	ldi	r19, 0x00	; 0
    2068:	8a 81       	ldd	r24, Y+2	; 0x02
    206a:	9b 81       	ldd	r25, Y+3	; 0x03
    206c:	fc 01       	movw	r30, r24
    206e:	e2 0f       	add	r30, r18
    2070:	f3 1f       	adc	r31, r19
    2072:	80 81       	ld	r24, Z
    2074:	88 23       	and	r24, r24
    2076:	89 f0       	breq	.+34     	; 0x209a <Lcd_vidWriteString+0x5a>
			break;
		else
			Lcd_vidWriteChar(str[i]);
    2078:	89 81       	ldd	r24, Y+1	; 0x01
    207a:	28 2f       	mov	r18, r24
    207c:	30 e0       	ldi	r19, 0x00	; 0
    207e:	8a 81       	ldd	r24, Y+2	; 0x02
    2080:	9b 81       	ldd	r25, Y+3	; 0x03
    2082:	fc 01       	movw	r30, r24
    2084:	e2 0f       	add	r30, r18
    2086:	f3 1f       	adc	r31, r19
    2088:	80 81       	ld	r24, Z
    208a:	0e 94 92 0c 	call	0x1924	; 0x1924 <Lcd_vidWriteChar>
}

void Lcd_vidWriteString(u8 *str)
{
	u8 i;
	for(i=0;i<32;i++)
    208e:	89 81       	ldd	r24, Y+1	; 0x01
    2090:	8f 5f       	subi	r24, 0xFF	; 255
    2092:	89 83       	std	Y+1, r24	; 0x01
    2094:	89 81       	ldd	r24, Y+1	; 0x01
    2096:	80 32       	cpi	r24, 0x20	; 32
    2098:	e8 f2       	brcs	.-70     	; 0x2054 <Lcd_vidWriteString+0x14>
		if ( str[i] == '\0' )
			break;
		else
			Lcd_vidWriteChar(str[i]);
	}
}
    209a:	0f 90       	pop	r0
    209c:	0f 90       	pop	r0
    209e:	0f 90       	pop	r0
    20a0:	cf 91       	pop	r28
    20a2:	df 91       	pop	r29
    20a4:	08 95       	ret

000020a6 <Lcd_vidGoTo>:
			Lcd_vidSendCommand(0x14); //shift cursor to right
	}
}*/

void Lcd_vidGoTo(u8 column ,u8 row)
{
    20a6:	df 93       	push	r29
    20a8:	cf 93       	push	r28
    20aa:	00 d0       	rcall	.+0      	; 0x20ac <Lcd_vidGoTo+0x6>
    20ac:	00 d0       	rcall	.+0      	; 0x20ae <Lcd_vidGoTo+0x8>
    20ae:	cd b7       	in	r28, 0x3d	; 61
    20b0:	de b7       	in	r29, 0x3e	; 62
    20b2:	89 83       	std	Y+1, r24	; 0x01
    20b4:	6a 83       	std	Y+2, r22	; 0x02
	switch (column)
    20b6:	89 81       	ldd	r24, Y+1	; 0x01
    20b8:	28 2f       	mov	r18, r24
    20ba:	30 e0       	ldi	r19, 0x00	; 0
    20bc:	3c 83       	std	Y+4, r19	; 0x04
    20be:	2b 83       	std	Y+3, r18	; 0x03
    20c0:	8b 81       	ldd	r24, Y+3	; 0x03
    20c2:	9c 81       	ldd	r25, Y+4	; 0x04
    20c4:	00 97       	sbiw	r24, 0x00	; 0
    20c6:	39 f0       	breq	.+14     	; 0x20d6 <Lcd_vidGoTo+0x30>
    20c8:	2b 81       	ldd	r18, Y+3	; 0x03
    20ca:	3c 81       	ldd	r19, Y+4	; 0x04
    20cc:	21 30       	cpi	r18, 0x01	; 1
    20ce:	31 05       	cpc	r19, r1
    20d0:	09 f4       	brne	.+2      	; 0x20d4 <Lcd_vidGoTo+0x2e>
    20d2:	72 c0       	rjmp	.+228    	; 0x21b8 <Lcd_vidGoTo+0x112>
    20d4:	e0 c0       	rjmp	.+448    	; 0x2296 <Lcd_vidGoTo+0x1f0>
	{

	case 0:
		if(row==0)
    20d6:	8a 81       	ldd	r24, Y+2	; 0x02
    20d8:	88 23       	and	r24, r24
    20da:	21 f4       	brne	.+8      	; 0x20e4 <Lcd_vidGoTo+0x3e>
			Lcd_vidSendCommand(0x80);
    20dc:	80 e8       	ldi	r24, 0x80	; 128
    20de:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <Lcd_vidSendCommand>
    20e2:	d9 c0       	rjmp	.+434    	; 0x2296 <Lcd_vidGoTo+0x1f0>
		else if(row==1)
    20e4:	8a 81       	ldd	r24, Y+2	; 0x02
    20e6:	81 30       	cpi	r24, 0x01	; 1
    20e8:	21 f4       	brne	.+8      	; 0x20f2 <Lcd_vidGoTo+0x4c>
			Lcd_vidSendCommand(0x81);
    20ea:	81 e8       	ldi	r24, 0x81	; 129
    20ec:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <Lcd_vidSendCommand>
    20f0:	d2 c0       	rjmp	.+420    	; 0x2296 <Lcd_vidGoTo+0x1f0>
		else if(row==2)
    20f2:	8a 81       	ldd	r24, Y+2	; 0x02
    20f4:	82 30       	cpi	r24, 0x02	; 2
    20f6:	21 f4       	brne	.+8      	; 0x2100 <Lcd_vidGoTo+0x5a>
			Lcd_vidSendCommand(0x82);
    20f8:	82 e8       	ldi	r24, 0x82	; 130
    20fa:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <Lcd_vidSendCommand>
    20fe:	cb c0       	rjmp	.+406    	; 0x2296 <Lcd_vidGoTo+0x1f0>
		else if(row==3)
    2100:	8a 81       	ldd	r24, Y+2	; 0x02
    2102:	83 30       	cpi	r24, 0x03	; 3
    2104:	21 f4       	brne	.+8      	; 0x210e <Lcd_vidGoTo+0x68>
			Lcd_vidSendCommand(0x83);
    2106:	83 e8       	ldi	r24, 0x83	; 131
    2108:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <Lcd_vidSendCommand>
    210c:	c4 c0       	rjmp	.+392    	; 0x2296 <Lcd_vidGoTo+0x1f0>
		else if(row==4)
    210e:	8a 81       	ldd	r24, Y+2	; 0x02
    2110:	84 30       	cpi	r24, 0x04	; 4
    2112:	21 f4       	brne	.+8      	; 0x211c <Lcd_vidGoTo+0x76>
			Lcd_vidSendCommand(0x84);
    2114:	84 e8       	ldi	r24, 0x84	; 132
    2116:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <Lcd_vidSendCommand>
    211a:	bd c0       	rjmp	.+378    	; 0x2296 <Lcd_vidGoTo+0x1f0>
		else if(row==5)
    211c:	8a 81       	ldd	r24, Y+2	; 0x02
    211e:	85 30       	cpi	r24, 0x05	; 5
    2120:	21 f4       	brne	.+8      	; 0x212a <Lcd_vidGoTo+0x84>
			Lcd_vidSendCommand(0x85);
    2122:	85 e8       	ldi	r24, 0x85	; 133
    2124:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <Lcd_vidSendCommand>
    2128:	b6 c0       	rjmp	.+364    	; 0x2296 <Lcd_vidGoTo+0x1f0>
		else if(row==6)
    212a:	8a 81       	ldd	r24, Y+2	; 0x02
    212c:	86 30       	cpi	r24, 0x06	; 6
    212e:	21 f4       	brne	.+8      	; 0x2138 <Lcd_vidGoTo+0x92>
			Lcd_vidSendCommand(0x86);
    2130:	86 e8       	ldi	r24, 0x86	; 134
    2132:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <Lcd_vidSendCommand>
    2136:	af c0       	rjmp	.+350    	; 0x2296 <Lcd_vidGoTo+0x1f0>
		else if(row==7)
    2138:	8a 81       	ldd	r24, Y+2	; 0x02
    213a:	87 30       	cpi	r24, 0x07	; 7
    213c:	21 f4       	brne	.+8      	; 0x2146 <Lcd_vidGoTo+0xa0>
			Lcd_vidSendCommand(0x87);
    213e:	87 e8       	ldi	r24, 0x87	; 135
    2140:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <Lcd_vidSendCommand>
    2144:	a8 c0       	rjmp	.+336    	; 0x2296 <Lcd_vidGoTo+0x1f0>
		else if(row==8)
    2146:	8a 81       	ldd	r24, Y+2	; 0x02
    2148:	88 30       	cpi	r24, 0x08	; 8
    214a:	21 f4       	brne	.+8      	; 0x2154 <Lcd_vidGoTo+0xae>
			Lcd_vidSendCommand(0x88);
    214c:	88 e8       	ldi	r24, 0x88	; 136
    214e:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <Lcd_vidSendCommand>
    2152:	a1 c0       	rjmp	.+322    	; 0x2296 <Lcd_vidGoTo+0x1f0>
		else if(row==9)
    2154:	8a 81       	ldd	r24, Y+2	; 0x02
    2156:	89 30       	cpi	r24, 0x09	; 9
    2158:	21 f4       	brne	.+8      	; 0x2162 <Lcd_vidGoTo+0xbc>
			Lcd_vidSendCommand(0x89);
    215a:	89 e8       	ldi	r24, 0x89	; 137
    215c:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <Lcd_vidSendCommand>
    2160:	9a c0       	rjmp	.+308    	; 0x2296 <Lcd_vidGoTo+0x1f0>
		else if(row==10)
    2162:	8a 81       	ldd	r24, Y+2	; 0x02
    2164:	8a 30       	cpi	r24, 0x0A	; 10
    2166:	21 f4       	brne	.+8      	; 0x2170 <Lcd_vidGoTo+0xca>
			Lcd_vidSendCommand(0x8a);
    2168:	8a e8       	ldi	r24, 0x8A	; 138
    216a:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <Lcd_vidSendCommand>
    216e:	93 c0       	rjmp	.+294    	; 0x2296 <Lcd_vidGoTo+0x1f0>
		else if(row==11)
    2170:	8a 81       	ldd	r24, Y+2	; 0x02
    2172:	8b 30       	cpi	r24, 0x0B	; 11
    2174:	21 f4       	brne	.+8      	; 0x217e <Lcd_vidGoTo+0xd8>
			Lcd_vidSendCommand(0x8b);
    2176:	8b e8       	ldi	r24, 0x8B	; 139
    2178:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <Lcd_vidSendCommand>
    217c:	8c c0       	rjmp	.+280    	; 0x2296 <Lcd_vidGoTo+0x1f0>
		else if(row==12)
    217e:	8a 81       	ldd	r24, Y+2	; 0x02
    2180:	8c 30       	cpi	r24, 0x0C	; 12
    2182:	21 f4       	brne	.+8      	; 0x218c <Lcd_vidGoTo+0xe6>
			Lcd_vidSendCommand(0x8c);
    2184:	8c e8       	ldi	r24, 0x8C	; 140
    2186:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <Lcd_vidSendCommand>
    218a:	85 c0       	rjmp	.+266    	; 0x2296 <Lcd_vidGoTo+0x1f0>
		else if(row==13)
    218c:	8a 81       	ldd	r24, Y+2	; 0x02
    218e:	8d 30       	cpi	r24, 0x0D	; 13
    2190:	21 f4       	brne	.+8      	; 0x219a <Lcd_vidGoTo+0xf4>
			Lcd_vidSendCommand(0x8d);
    2192:	8d e8       	ldi	r24, 0x8D	; 141
    2194:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <Lcd_vidSendCommand>
    2198:	7e c0       	rjmp	.+252    	; 0x2296 <Lcd_vidGoTo+0x1f0>
		else if(row==14)
    219a:	8a 81       	ldd	r24, Y+2	; 0x02
    219c:	8e 30       	cpi	r24, 0x0E	; 14
    219e:	21 f4       	brne	.+8      	; 0x21a8 <Lcd_vidGoTo+0x102>
			Lcd_vidSendCommand(0x8e);
    21a0:	8e e8       	ldi	r24, 0x8E	; 142
    21a2:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <Lcd_vidSendCommand>
    21a6:	77 c0       	rjmp	.+238    	; 0x2296 <Lcd_vidGoTo+0x1f0>
		else if(row==15)
    21a8:	8a 81       	ldd	r24, Y+2	; 0x02
    21aa:	8f 30       	cpi	r24, 0x0F	; 15
    21ac:	09 f0       	breq	.+2      	; 0x21b0 <Lcd_vidGoTo+0x10a>
    21ae:	73 c0       	rjmp	.+230    	; 0x2296 <Lcd_vidGoTo+0x1f0>
			Lcd_vidSendCommand(0x8f);
    21b0:	8f e8       	ldi	r24, 0x8F	; 143
    21b2:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <Lcd_vidSendCommand>
    21b6:	6f c0       	rjmp	.+222    	; 0x2296 <Lcd_vidGoTo+0x1f0>
		break ;
	case 1:
		if(row==0)
    21b8:	8a 81       	ldd	r24, Y+2	; 0x02
    21ba:	88 23       	and	r24, r24
    21bc:	21 f4       	brne	.+8      	; 0x21c6 <Lcd_vidGoTo+0x120>
			Lcd_vidSendCommand(0xc0);
    21be:	80 ec       	ldi	r24, 0xC0	; 192
    21c0:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <Lcd_vidSendCommand>
    21c4:	68 c0       	rjmp	.+208    	; 0x2296 <Lcd_vidGoTo+0x1f0>
		else if(row==1)
    21c6:	8a 81       	ldd	r24, Y+2	; 0x02
    21c8:	81 30       	cpi	r24, 0x01	; 1
    21ca:	21 f4       	brne	.+8      	; 0x21d4 <Lcd_vidGoTo+0x12e>
			Lcd_vidSendCommand(0xc1);
    21cc:	81 ec       	ldi	r24, 0xC1	; 193
    21ce:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <Lcd_vidSendCommand>
    21d2:	61 c0       	rjmp	.+194    	; 0x2296 <Lcd_vidGoTo+0x1f0>
		else if(row==2)
    21d4:	8a 81       	ldd	r24, Y+2	; 0x02
    21d6:	82 30       	cpi	r24, 0x02	; 2
    21d8:	21 f4       	brne	.+8      	; 0x21e2 <Lcd_vidGoTo+0x13c>
			Lcd_vidSendCommand(0xc2);
    21da:	82 ec       	ldi	r24, 0xC2	; 194
    21dc:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <Lcd_vidSendCommand>
    21e0:	5a c0       	rjmp	.+180    	; 0x2296 <Lcd_vidGoTo+0x1f0>
		else if(row==3)
    21e2:	8a 81       	ldd	r24, Y+2	; 0x02
    21e4:	83 30       	cpi	r24, 0x03	; 3
    21e6:	21 f4       	brne	.+8      	; 0x21f0 <Lcd_vidGoTo+0x14a>
			Lcd_vidSendCommand(0xc3);
    21e8:	83 ec       	ldi	r24, 0xC3	; 195
    21ea:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <Lcd_vidSendCommand>
    21ee:	53 c0       	rjmp	.+166    	; 0x2296 <Lcd_vidGoTo+0x1f0>
		else if(row==4)
    21f0:	8a 81       	ldd	r24, Y+2	; 0x02
    21f2:	84 30       	cpi	r24, 0x04	; 4
    21f4:	21 f4       	brne	.+8      	; 0x21fe <Lcd_vidGoTo+0x158>
			Lcd_vidSendCommand(0xc4);
    21f6:	84 ec       	ldi	r24, 0xC4	; 196
    21f8:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <Lcd_vidSendCommand>
    21fc:	4c c0       	rjmp	.+152    	; 0x2296 <Lcd_vidGoTo+0x1f0>
		else if(row==5)
    21fe:	8a 81       	ldd	r24, Y+2	; 0x02
    2200:	85 30       	cpi	r24, 0x05	; 5
    2202:	21 f4       	brne	.+8      	; 0x220c <Lcd_vidGoTo+0x166>
			Lcd_vidSendCommand(0xc5);
    2204:	85 ec       	ldi	r24, 0xC5	; 197
    2206:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <Lcd_vidSendCommand>
    220a:	45 c0       	rjmp	.+138    	; 0x2296 <Lcd_vidGoTo+0x1f0>
		else if(row==6)
    220c:	8a 81       	ldd	r24, Y+2	; 0x02
    220e:	86 30       	cpi	r24, 0x06	; 6
    2210:	21 f4       	brne	.+8      	; 0x221a <Lcd_vidGoTo+0x174>
			Lcd_vidSendCommand(0xc6);
    2212:	86 ec       	ldi	r24, 0xC6	; 198
    2214:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <Lcd_vidSendCommand>
    2218:	3e c0       	rjmp	.+124    	; 0x2296 <Lcd_vidGoTo+0x1f0>
		else if(row==7)
    221a:	8a 81       	ldd	r24, Y+2	; 0x02
    221c:	87 30       	cpi	r24, 0x07	; 7
    221e:	21 f4       	brne	.+8      	; 0x2228 <Lcd_vidGoTo+0x182>
			Lcd_vidSendCommand(0xc7);
    2220:	87 ec       	ldi	r24, 0xC7	; 199
    2222:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <Lcd_vidSendCommand>
    2226:	37 c0       	rjmp	.+110    	; 0x2296 <Lcd_vidGoTo+0x1f0>
		else if(row==8)
    2228:	8a 81       	ldd	r24, Y+2	; 0x02
    222a:	88 30       	cpi	r24, 0x08	; 8
    222c:	21 f4       	brne	.+8      	; 0x2236 <Lcd_vidGoTo+0x190>
			Lcd_vidSendCommand(0xc8);
    222e:	88 ec       	ldi	r24, 0xC8	; 200
    2230:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <Lcd_vidSendCommand>
    2234:	30 c0       	rjmp	.+96     	; 0x2296 <Lcd_vidGoTo+0x1f0>
		else if(row==9)
    2236:	8a 81       	ldd	r24, Y+2	; 0x02
    2238:	89 30       	cpi	r24, 0x09	; 9
    223a:	21 f4       	brne	.+8      	; 0x2244 <Lcd_vidGoTo+0x19e>
			Lcd_vidSendCommand(0xc9);
    223c:	89 ec       	ldi	r24, 0xC9	; 201
    223e:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <Lcd_vidSendCommand>
    2242:	29 c0       	rjmp	.+82     	; 0x2296 <Lcd_vidGoTo+0x1f0>
		else if(row==10)
    2244:	8a 81       	ldd	r24, Y+2	; 0x02
    2246:	8a 30       	cpi	r24, 0x0A	; 10
    2248:	21 f4       	brne	.+8      	; 0x2252 <Lcd_vidGoTo+0x1ac>
			Lcd_vidSendCommand(0xca);
    224a:	8a ec       	ldi	r24, 0xCA	; 202
    224c:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <Lcd_vidSendCommand>
    2250:	22 c0       	rjmp	.+68     	; 0x2296 <Lcd_vidGoTo+0x1f0>
		else if(row==11)
    2252:	8a 81       	ldd	r24, Y+2	; 0x02
    2254:	8b 30       	cpi	r24, 0x0B	; 11
    2256:	21 f4       	brne	.+8      	; 0x2260 <Lcd_vidGoTo+0x1ba>
			Lcd_vidSendCommand(0xcb);
    2258:	8b ec       	ldi	r24, 0xCB	; 203
    225a:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <Lcd_vidSendCommand>
    225e:	1b c0       	rjmp	.+54     	; 0x2296 <Lcd_vidGoTo+0x1f0>
		else if(row==12)
    2260:	8a 81       	ldd	r24, Y+2	; 0x02
    2262:	8c 30       	cpi	r24, 0x0C	; 12
    2264:	21 f4       	brne	.+8      	; 0x226e <Lcd_vidGoTo+0x1c8>
			Lcd_vidSendCommand(0xcc);
    2266:	8c ec       	ldi	r24, 0xCC	; 204
    2268:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <Lcd_vidSendCommand>
    226c:	14 c0       	rjmp	.+40     	; 0x2296 <Lcd_vidGoTo+0x1f0>
		else if(row==13)
    226e:	8a 81       	ldd	r24, Y+2	; 0x02
    2270:	8d 30       	cpi	r24, 0x0D	; 13
    2272:	21 f4       	brne	.+8      	; 0x227c <Lcd_vidGoTo+0x1d6>
			Lcd_vidSendCommand(0xcd);
    2274:	8d ec       	ldi	r24, 0xCD	; 205
    2276:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <Lcd_vidSendCommand>
    227a:	0d c0       	rjmp	.+26     	; 0x2296 <Lcd_vidGoTo+0x1f0>
		else if(row==14)
    227c:	8a 81       	ldd	r24, Y+2	; 0x02
    227e:	8e 30       	cpi	r24, 0x0E	; 14
    2280:	21 f4       	brne	.+8      	; 0x228a <Lcd_vidGoTo+0x1e4>
			Lcd_vidSendCommand(0xce);
    2282:	8e ec       	ldi	r24, 0xCE	; 206
    2284:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <Lcd_vidSendCommand>
    2288:	06 c0       	rjmp	.+12     	; 0x2296 <Lcd_vidGoTo+0x1f0>
		else if(row==15)
    228a:	8a 81       	ldd	r24, Y+2	; 0x02
    228c:	8f 30       	cpi	r24, 0x0F	; 15
    228e:	19 f4       	brne	.+6      	; 0x2296 <Lcd_vidGoTo+0x1f0>
			Lcd_vidSendCommand(0xcf);
    2290:	8f ec       	ldi	r24, 0xCF	; 207
    2292:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <Lcd_vidSendCommand>
		break ;
	}
}
    2296:	0f 90       	pop	r0
    2298:	0f 90       	pop	r0
    229a:	0f 90       	pop	r0
    229c:	0f 90       	pop	r0
    229e:	cf 91       	pop	r28
    22a0:	df 91       	pop	r29
    22a2:	08 95       	ret

000022a4 <Seven_seg_vidInit>:
#include "Seven_Segment_cfg.h"
#include "Seven_Segment_int.h"


void Seven_seg_vidInit(u8 id)
{
    22a4:	df 93       	push	r29
    22a6:	cf 93       	push	r28
    22a8:	0f 92       	push	r0
    22aa:	cd b7       	in	r28, 0x3d	; 61
    22ac:	de b7       	in	r29, 0x3e	; 62
    22ae:	89 83       	std	Y+1, r24	; 0x01
	if (id==RIGHT)
    22b0:	89 81       	ldd	r24, Y+1	; 0x01
    22b2:	81 30       	cpi	r24, 0x01	; 1
    22b4:	09 f0       	breq	.+2      	; 0x22b8 <Seven_seg_vidInit+0x14>
    22b6:	41 c0       	rjmp	.+130    	; 0x233a <Seven_seg_vidInit+0x96>
	{
		Dio_vidSetPinDir(SEVEN_SEG_Right_u8PIN_A,  DIO_u8OUTPUT);
    22b8:	88 e0       	ldi	r24, 0x08	; 8
    22ba:	61 e0       	ldi	r22, 0x01	; 1
    22bc:	0e 94 ab 07 	call	0xf56	; 0xf56 <Dio_vidSetPinDir>
		Dio_vidSetPinDir(SEVEN_SEG_Right_u8PIN_B,  DIO_u8OUTPUT);
    22c0:	89 e0       	ldi	r24, 0x09	; 9
    22c2:	61 e0       	ldi	r22, 0x01	; 1
    22c4:	0e 94 ab 07 	call	0xf56	; 0xf56 <Dio_vidSetPinDir>
		Dio_vidSetPinDir(SEVEN_SEG_Right_u8PIN_C,  DIO_u8OUTPUT);
    22c8:	8a e0       	ldi	r24, 0x0A	; 10
    22ca:	61 e0       	ldi	r22, 0x01	; 1
    22cc:	0e 94 ab 07 	call	0xf56	; 0xf56 <Dio_vidSetPinDir>
		Dio_vidSetPinDir(SEVEN_SEG_Right_u8PIN_D,  DIO_u8OUTPUT);
    22d0:	8b e0       	ldi	r24, 0x0B	; 11
    22d2:	61 e0       	ldi	r22, 0x01	; 1
    22d4:	0e 94 ab 07 	call	0xf56	; 0xf56 <Dio_vidSetPinDir>
		Dio_vidSetPinDir(SEVEN_SEG_Right_u8PIN_E,  DIO_u8OUTPUT);
    22d8:	8c e0       	ldi	r24, 0x0C	; 12
    22da:	61 e0       	ldi	r22, 0x01	; 1
    22dc:	0e 94 ab 07 	call	0xf56	; 0xf56 <Dio_vidSetPinDir>
		Dio_vidSetPinDir(SEVEN_SEG_Right_u8PIN_F,  DIO_u8OUTPUT);
    22e0:	8d e0       	ldi	r24, 0x0D	; 13
    22e2:	61 e0       	ldi	r22, 0x01	; 1
    22e4:	0e 94 ab 07 	call	0xf56	; 0xf56 <Dio_vidSetPinDir>
		Dio_vidSetPinDir(SEVEN_SEG_Right_u8PIN_G,  DIO_u8OUTPUT);
    22e8:	8e e0       	ldi	r24, 0x0E	; 14
    22ea:	61 e0       	ldi	r22, 0x01	; 1
    22ec:	0e 94 ab 07 	call	0xf56	; 0xf56 <Dio_vidSetPinDir>
		Dio_vidSetPinDir(SEVEN_SEG_Right_u8PIN_DOT,DIO_u8OUTPUT);
    22f0:	8f e0       	ldi	r24, 0x0F	; 15
    22f2:	61 e0       	ldi	r22, 0x01	; 1
    22f4:	0e 94 ab 07 	call	0xf56	; 0xf56 <Dio_vidSetPinDir>



		//FOR INTIALIZATION
		Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_A,  DIO_u8LOW);
    22f8:	88 e0       	ldi	r24, 0x08	; 8
    22fa:	60 e0       	ldi	r22, 0x00	; 0
    22fc:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
		Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_B,  DIO_u8LOW);
    2300:	89 e0       	ldi	r24, 0x09	; 9
    2302:	60 e0       	ldi	r22, 0x00	; 0
    2304:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
		Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_C,  DIO_u8LOW);
    2308:	8a e0       	ldi	r24, 0x0A	; 10
    230a:	60 e0       	ldi	r22, 0x00	; 0
    230c:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
		Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_D,  DIO_u8LOW);
    2310:	8b e0       	ldi	r24, 0x0B	; 11
    2312:	60 e0       	ldi	r22, 0x00	; 0
    2314:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
		Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_E,  DIO_u8LOW);
    2318:	8c e0       	ldi	r24, 0x0C	; 12
    231a:	60 e0       	ldi	r22, 0x00	; 0
    231c:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
		Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_F,  DIO_u8LOW);
    2320:	8d e0       	ldi	r24, 0x0D	; 13
    2322:	60 e0       	ldi	r22, 0x00	; 0
    2324:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
		Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_G,  DIO_u8LOW);
    2328:	8e e0       	ldi	r24, 0x0E	; 14
    232a:	60 e0       	ldi	r22, 0x00	; 0
    232c:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
		Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_DOT,DIO_u8LOW);
    2330:	8f e0       	ldi	r24, 0x0F	; 15
    2332:	60 e0       	ldi	r22, 0x00	; 0
    2334:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
    2338:	44 c0       	rjmp	.+136    	; 0x23c2 <Seven_seg_vidInit+0x11e>
	}
	else if (id==LEFT)
    233a:	89 81       	ldd	r24, Y+1	; 0x01
    233c:	82 30       	cpi	r24, 0x02	; 2
    233e:	09 f0       	breq	.+2      	; 0x2342 <Seven_seg_vidInit+0x9e>
    2340:	40 c0       	rjmp	.+128    	; 0x23c2 <Seven_seg_vidInit+0x11e>
	{
		Dio_vidSetPinDir(SEVEN_SEG_Left_u8PIN_A,  DIO_u8OUTPUT);
    2342:	80 e1       	ldi	r24, 0x10	; 16
    2344:	61 e0       	ldi	r22, 0x01	; 1
    2346:	0e 94 ab 07 	call	0xf56	; 0xf56 <Dio_vidSetPinDir>
		Dio_vidSetPinDir(SEVEN_SEG_Left_u8PIN_B,  DIO_u8OUTPUT);
    234a:	81 e1       	ldi	r24, 0x11	; 17
    234c:	61 e0       	ldi	r22, 0x01	; 1
    234e:	0e 94 ab 07 	call	0xf56	; 0xf56 <Dio_vidSetPinDir>
		Dio_vidSetPinDir(SEVEN_SEG_Left_u8PIN_C,  DIO_u8OUTPUT);
    2352:	82 e1       	ldi	r24, 0x12	; 18
    2354:	61 e0       	ldi	r22, 0x01	; 1
    2356:	0e 94 ab 07 	call	0xf56	; 0xf56 <Dio_vidSetPinDir>
		Dio_vidSetPinDir(SEVEN_SEG_Left_u8PIN_D,  DIO_u8OUTPUT);
    235a:	83 e1       	ldi	r24, 0x13	; 19
    235c:	61 e0       	ldi	r22, 0x01	; 1
    235e:	0e 94 ab 07 	call	0xf56	; 0xf56 <Dio_vidSetPinDir>
		Dio_vidSetPinDir(SEVEN_SEG_Left_u8PIN_E,  DIO_u8OUTPUT);
    2362:	84 e1       	ldi	r24, 0x14	; 20
    2364:	61 e0       	ldi	r22, 0x01	; 1
    2366:	0e 94 ab 07 	call	0xf56	; 0xf56 <Dio_vidSetPinDir>
		Dio_vidSetPinDir(SEVEN_SEG_Left_u8PIN_F,  DIO_u8OUTPUT);
    236a:	85 e1       	ldi	r24, 0x15	; 21
    236c:	61 e0       	ldi	r22, 0x01	; 1
    236e:	0e 94 ab 07 	call	0xf56	; 0xf56 <Dio_vidSetPinDir>
		Dio_vidSetPinDir(SEVEN_SEG_Left_u8PIN_G,  DIO_u8OUTPUT);
    2372:	86 e1       	ldi	r24, 0x16	; 22
    2374:	61 e0       	ldi	r22, 0x01	; 1
    2376:	0e 94 ab 07 	call	0xf56	; 0xf56 <Dio_vidSetPinDir>
		Dio_vidSetPinDir(SEVEN_SEG_Left_u8PIN_DOT,DIO_u8OUTPUT);
    237a:	87 e1       	ldi	r24, 0x17	; 23
    237c:	61 e0       	ldi	r22, 0x01	; 1
    237e:	0e 94 ab 07 	call	0xf56	; 0xf56 <Dio_vidSetPinDir>



		//FOR INTIALIZATION
		Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_A,  DIO_u8LOW);
    2382:	80 e1       	ldi	r24, 0x10	; 16
    2384:	60 e0       	ldi	r22, 0x00	; 0
    2386:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
		Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_B,  DIO_u8LOW);
    238a:	81 e1       	ldi	r24, 0x11	; 17
    238c:	60 e0       	ldi	r22, 0x00	; 0
    238e:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
		Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_C,  DIO_u8LOW);
    2392:	82 e1       	ldi	r24, 0x12	; 18
    2394:	60 e0       	ldi	r22, 0x00	; 0
    2396:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
		Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_D,  DIO_u8LOW);
    239a:	83 e1       	ldi	r24, 0x13	; 19
    239c:	60 e0       	ldi	r22, 0x00	; 0
    239e:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
		Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_E,  DIO_u8LOW);
    23a2:	84 e1       	ldi	r24, 0x14	; 20
    23a4:	60 e0       	ldi	r22, 0x00	; 0
    23a6:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
		Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_F,  DIO_u8LOW);
    23aa:	85 e1       	ldi	r24, 0x15	; 21
    23ac:	60 e0       	ldi	r22, 0x00	; 0
    23ae:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
		Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_G,  DIO_u8LOW);
    23b2:	86 e1       	ldi	r24, 0x16	; 22
    23b4:	60 e0       	ldi	r22, 0x00	; 0
    23b6:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
		Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_DOT,DIO_u8LOW);
    23ba:	87 e1       	ldi	r24, 0x17	; 23
    23bc:	60 e0       	ldi	r22, 0x00	; 0
    23be:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>


	}
}
    23c2:	0f 90       	pop	r0
    23c4:	cf 91       	pop	r28
    23c6:	df 91       	pop	r29
    23c8:	08 95       	ret

000023ca <Seven_seg_vidDisplay>:

void Seven_seg_vidDisplay(u8 id,u8 num)
{
    23ca:	df 93       	push	r29
    23cc:	cf 93       	push	r28
    23ce:	00 d0       	rcall	.+0      	; 0x23d0 <Seven_seg_vidDisplay+0x6>
    23d0:	00 d0       	rcall	.+0      	; 0x23d2 <Seven_seg_vidDisplay+0x8>
    23d2:	00 d0       	rcall	.+0      	; 0x23d4 <Seven_seg_vidDisplay+0xa>
    23d4:	cd b7       	in	r28, 0x3d	; 61
    23d6:	de b7       	in	r29, 0x3e	; 62
    23d8:	89 83       	std	Y+1, r24	; 0x01
    23da:	6a 83       	std	Y+2, r22	; 0x02
	if (id==RIGHT)
    23dc:	89 81       	ldd	r24, Y+1	; 0x01
    23de:	81 30       	cpi	r24, 0x01	; 1
    23e0:	09 f0       	breq	.+2      	; 0x23e4 <Seven_seg_vidDisplay+0x1a>
    23e2:	9c c1       	rjmp	.+824    	; 0x271c <Seven_seg_vidDisplay+0x352>
	{
		switch(num)
    23e4:	8a 81       	ldd	r24, Y+2	; 0x02
    23e6:	28 2f       	mov	r18, r24
    23e8:	30 e0       	ldi	r19, 0x00	; 0
    23ea:	3e 83       	std	Y+6, r19	; 0x06
    23ec:	2d 83       	std	Y+5, r18	; 0x05
    23ee:	8d 81       	ldd	r24, Y+5	; 0x05
    23f0:	9e 81       	ldd	r25, Y+6	; 0x06
    23f2:	84 30       	cpi	r24, 0x04	; 4
    23f4:	91 05       	cpc	r25, r1
    23f6:	09 f4       	brne	.+2      	; 0x23fa <Seven_seg_vidDisplay+0x30>
    23f8:	cb c0       	rjmp	.+406    	; 0x2590 <Seven_seg_vidDisplay+0x1c6>
    23fa:	2d 81       	ldd	r18, Y+5	; 0x05
    23fc:	3e 81       	ldd	r19, Y+6	; 0x06
    23fe:	25 30       	cpi	r18, 0x05	; 5
    2400:	31 05       	cpc	r19, r1
    2402:	ec f4       	brge	.+58     	; 0x243e <Seven_seg_vidDisplay+0x74>
    2404:	8d 81       	ldd	r24, Y+5	; 0x05
    2406:	9e 81       	ldd	r25, Y+6	; 0x06
    2408:	81 30       	cpi	r24, 0x01	; 1
    240a:	91 05       	cpc	r25, r1
    240c:	09 f4       	brne	.+2      	; 0x2410 <Seven_seg_vidDisplay+0x46>
    240e:	5d c0       	rjmp	.+186    	; 0x24ca <Seven_seg_vidDisplay+0x100>
    2410:	2d 81       	ldd	r18, Y+5	; 0x05
    2412:	3e 81       	ldd	r19, Y+6	; 0x06
    2414:	22 30       	cpi	r18, 0x02	; 2
    2416:	31 05       	cpc	r19, r1
    2418:	2c f4       	brge	.+10     	; 0x2424 <Seven_seg_vidDisplay+0x5a>
    241a:	8d 81       	ldd	r24, Y+5	; 0x05
    241c:	9e 81       	ldd	r25, Y+6	; 0x06
    241e:	00 97       	sbiw	r24, 0x00	; 0
    2420:	99 f1       	breq	.+102    	; 0x2488 <Seven_seg_vidDisplay+0xbe>
    2422:	1b c3       	rjmp	.+1590   	; 0x2a5a <Seven_seg_vidDisplay+0x690>
    2424:	2d 81       	ldd	r18, Y+5	; 0x05
    2426:	3e 81       	ldd	r19, Y+6	; 0x06
    2428:	22 30       	cpi	r18, 0x02	; 2
    242a:	31 05       	cpc	r19, r1
    242c:	09 f4       	brne	.+2      	; 0x2430 <Seven_seg_vidDisplay+0x66>
    242e:	6e c0       	rjmp	.+220    	; 0x250c <Seven_seg_vidDisplay+0x142>
    2430:	8d 81       	ldd	r24, Y+5	; 0x05
    2432:	9e 81       	ldd	r25, Y+6	; 0x06
    2434:	83 30       	cpi	r24, 0x03	; 3
    2436:	91 05       	cpc	r25, r1
    2438:	09 f4       	brne	.+2      	; 0x243c <Seven_seg_vidDisplay+0x72>
    243a:	89 c0       	rjmp	.+274    	; 0x254e <Seven_seg_vidDisplay+0x184>
    243c:	0e c3       	rjmp	.+1564   	; 0x2a5a <Seven_seg_vidDisplay+0x690>
    243e:	2d 81       	ldd	r18, Y+5	; 0x05
    2440:	3e 81       	ldd	r19, Y+6	; 0x06
    2442:	27 30       	cpi	r18, 0x07	; 7
    2444:	31 05       	cpc	r19, r1
    2446:	09 f4       	brne	.+2      	; 0x244a <Seven_seg_vidDisplay+0x80>
    2448:	06 c1       	rjmp	.+524    	; 0x2656 <Seven_seg_vidDisplay+0x28c>
    244a:	8d 81       	ldd	r24, Y+5	; 0x05
    244c:	9e 81       	ldd	r25, Y+6	; 0x06
    244e:	88 30       	cpi	r24, 0x08	; 8
    2450:	91 05       	cpc	r25, r1
    2452:	6c f4       	brge	.+26     	; 0x246e <Seven_seg_vidDisplay+0xa4>
    2454:	2d 81       	ldd	r18, Y+5	; 0x05
    2456:	3e 81       	ldd	r19, Y+6	; 0x06
    2458:	25 30       	cpi	r18, 0x05	; 5
    245a:	31 05       	cpc	r19, r1
    245c:	09 f4       	brne	.+2      	; 0x2460 <Seven_seg_vidDisplay+0x96>
    245e:	b9 c0       	rjmp	.+370    	; 0x25d2 <Seven_seg_vidDisplay+0x208>
    2460:	8d 81       	ldd	r24, Y+5	; 0x05
    2462:	9e 81       	ldd	r25, Y+6	; 0x06
    2464:	86 30       	cpi	r24, 0x06	; 6
    2466:	91 05       	cpc	r25, r1
    2468:	09 f4       	brne	.+2      	; 0x246c <Seven_seg_vidDisplay+0xa2>
    246a:	d4 c0       	rjmp	.+424    	; 0x2614 <Seven_seg_vidDisplay+0x24a>
    246c:	f6 c2       	rjmp	.+1516   	; 0x2a5a <Seven_seg_vidDisplay+0x690>
    246e:	2d 81       	ldd	r18, Y+5	; 0x05
    2470:	3e 81       	ldd	r19, Y+6	; 0x06
    2472:	28 30       	cpi	r18, 0x08	; 8
    2474:	31 05       	cpc	r19, r1
    2476:	09 f4       	brne	.+2      	; 0x247a <Seven_seg_vidDisplay+0xb0>
    2478:	0f c1       	rjmp	.+542    	; 0x2698 <Seven_seg_vidDisplay+0x2ce>
    247a:	8d 81       	ldd	r24, Y+5	; 0x05
    247c:	9e 81       	ldd	r25, Y+6	; 0x06
    247e:	89 30       	cpi	r24, 0x09	; 9
    2480:	91 05       	cpc	r25, r1
    2482:	09 f4       	brne	.+2      	; 0x2486 <Seven_seg_vidDisplay+0xbc>
    2484:	2a c1       	rjmp	.+596    	; 0x26da <Seven_seg_vidDisplay+0x310>
    2486:	e9 c2       	rjmp	.+1490   	; 0x2a5a <Seven_seg_vidDisplay+0x690>
		{
		case 0:
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_A,  DIO_u8HIGH);
    2488:	88 e0       	ldi	r24, 0x08	; 8
    248a:	61 e0       	ldi	r22, 0x01	; 1
    248c:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_B,  DIO_u8HIGH);
    2490:	89 e0       	ldi	r24, 0x09	; 9
    2492:	61 e0       	ldi	r22, 0x01	; 1
    2494:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_C,  DIO_u8HIGH);
    2498:	8a e0       	ldi	r24, 0x0A	; 10
    249a:	61 e0       	ldi	r22, 0x01	; 1
    249c:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_D,  DIO_u8HIGH);
    24a0:	8b e0       	ldi	r24, 0x0B	; 11
    24a2:	61 e0       	ldi	r22, 0x01	; 1
    24a4:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_E,  DIO_u8HIGH);
    24a8:	8c e0       	ldi	r24, 0x0C	; 12
    24aa:	61 e0       	ldi	r22, 0x01	; 1
    24ac:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_F,  DIO_u8HIGH);
    24b0:	8d e0       	ldi	r24, 0x0D	; 13
    24b2:	61 e0       	ldi	r22, 0x01	; 1
    24b4:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_G,  DIO_u8LOW);
    24b8:	8e e0       	ldi	r24, 0x0E	; 14
    24ba:	60 e0       	ldi	r22, 0x00	; 0
    24bc:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_DOT,DIO_u8LOW);
    24c0:	8f e0       	ldi	r24, 0x0F	; 15
    24c2:	60 e0       	ldi	r22, 0x00	; 0
    24c4:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
    24c8:	c8 c2       	rjmp	.+1424   	; 0x2a5a <Seven_seg_vidDisplay+0x690>
			break;

		case 1:
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_A,  DIO_u8LOW);
    24ca:	88 e0       	ldi	r24, 0x08	; 8
    24cc:	60 e0       	ldi	r22, 0x00	; 0
    24ce:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_B,  DIO_u8HIGH);
    24d2:	89 e0       	ldi	r24, 0x09	; 9
    24d4:	61 e0       	ldi	r22, 0x01	; 1
    24d6:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_C,  DIO_u8HIGH);
    24da:	8a e0       	ldi	r24, 0x0A	; 10
    24dc:	61 e0       	ldi	r22, 0x01	; 1
    24de:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_D,  DIO_u8LOW);
    24e2:	8b e0       	ldi	r24, 0x0B	; 11
    24e4:	60 e0       	ldi	r22, 0x00	; 0
    24e6:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_E,  DIO_u8LOW);
    24ea:	8c e0       	ldi	r24, 0x0C	; 12
    24ec:	60 e0       	ldi	r22, 0x00	; 0
    24ee:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_F,  DIO_u8LOW);
    24f2:	8d e0       	ldi	r24, 0x0D	; 13
    24f4:	60 e0       	ldi	r22, 0x00	; 0
    24f6:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_G,  DIO_u8LOW);
    24fa:	8e e0       	ldi	r24, 0x0E	; 14
    24fc:	60 e0       	ldi	r22, 0x00	; 0
    24fe:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_DOT,DIO_u8LOW);
    2502:	8f e0       	ldi	r24, 0x0F	; 15
    2504:	60 e0       	ldi	r22, 0x00	; 0
    2506:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
    250a:	a7 c2       	rjmp	.+1358   	; 0x2a5a <Seven_seg_vidDisplay+0x690>
			break;

		case 2:
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_A,  DIO_u8HIGH);
    250c:	88 e0       	ldi	r24, 0x08	; 8
    250e:	61 e0       	ldi	r22, 0x01	; 1
    2510:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_B,  DIO_u8HIGH);
    2514:	89 e0       	ldi	r24, 0x09	; 9
    2516:	61 e0       	ldi	r22, 0x01	; 1
    2518:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_C,  DIO_u8LOW);
    251c:	8a e0       	ldi	r24, 0x0A	; 10
    251e:	60 e0       	ldi	r22, 0x00	; 0
    2520:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_D,  DIO_u8HIGH);
    2524:	8b e0       	ldi	r24, 0x0B	; 11
    2526:	61 e0       	ldi	r22, 0x01	; 1
    2528:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_E,  DIO_u8HIGH);
    252c:	8c e0       	ldi	r24, 0x0C	; 12
    252e:	61 e0       	ldi	r22, 0x01	; 1
    2530:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_F,  DIO_u8LOW);
    2534:	8d e0       	ldi	r24, 0x0D	; 13
    2536:	60 e0       	ldi	r22, 0x00	; 0
    2538:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_G,  DIO_u8HIGH);
    253c:	8e e0       	ldi	r24, 0x0E	; 14
    253e:	61 e0       	ldi	r22, 0x01	; 1
    2540:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_DOT,DIO_u8LOW);
    2544:	8f e0       	ldi	r24, 0x0F	; 15
    2546:	60 e0       	ldi	r22, 0x00	; 0
    2548:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
    254c:	86 c2       	rjmp	.+1292   	; 0x2a5a <Seven_seg_vidDisplay+0x690>
			break;

		case 3:
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_A,  DIO_u8HIGH);
    254e:	88 e0       	ldi	r24, 0x08	; 8
    2550:	61 e0       	ldi	r22, 0x01	; 1
    2552:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_B,  DIO_u8HIGH);
    2556:	89 e0       	ldi	r24, 0x09	; 9
    2558:	61 e0       	ldi	r22, 0x01	; 1
    255a:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_C,  DIO_u8HIGH);
    255e:	8a e0       	ldi	r24, 0x0A	; 10
    2560:	61 e0       	ldi	r22, 0x01	; 1
    2562:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_D,  DIO_u8HIGH);
    2566:	8b e0       	ldi	r24, 0x0B	; 11
    2568:	61 e0       	ldi	r22, 0x01	; 1
    256a:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_E,  DIO_u8LOW);
    256e:	8c e0       	ldi	r24, 0x0C	; 12
    2570:	60 e0       	ldi	r22, 0x00	; 0
    2572:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_F,  DIO_u8LOW);
    2576:	8d e0       	ldi	r24, 0x0D	; 13
    2578:	60 e0       	ldi	r22, 0x00	; 0
    257a:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_G,  DIO_u8HIGH);
    257e:	8e e0       	ldi	r24, 0x0E	; 14
    2580:	61 e0       	ldi	r22, 0x01	; 1
    2582:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_DOT,DIO_u8LOW);
    2586:	8f e0       	ldi	r24, 0x0F	; 15
    2588:	60 e0       	ldi	r22, 0x00	; 0
    258a:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
    258e:	65 c2       	rjmp	.+1226   	; 0x2a5a <Seven_seg_vidDisplay+0x690>
			break;

		case 4:
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_A,  DIO_u8LOW);
    2590:	88 e0       	ldi	r24, 0x08	; 8
    2592:	60 e0       	ldi	r22, 0x00	; 0
    2594:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_B,  DIO_u8HIGH);
    2598:	89 e0       	ldi	r24, 0x09	; 9
    259a:	61 e0       	ldi	r22, 0x01	; 1
    259c:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_C,  DIO_u8HIGH);
    25a0:	8a e0       	ldi	r24, 0x0A	; 10
    25a2:	61 e0       	ldi	r22, 0x01	; 1
    25a4:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_D,  DIO_u8LOW);
    25a8:	8b e0       	ldi	r24, 0x0B	; 11
    25aa:	60 e0       	ldi	r22, 0x00	; 0
    25ac:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_E,  DIO_u8LOW);
    25b0:	8c e0       	ldi	r24, 0x0C	; 12
    25b2:	60 e0       	ldi	r22, 0x00	; 0
    25b4:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_F,  DIO_u8HIGH);
    25b8:	8d e0       	ldi	r24, 0x0D	; 13
    25ba:	61 e0       	ldi	r22, 0x01	; 1
    25bc:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_G,  DIO_u8HIGH);
    25c0:	8e e0       	ldi	r24, 0x0E	; 14
    25c2:	61 e0       	ldi	r22, 0x01	; 1
    25c4:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_DOT,DIO_u8LOW);
    25c8:	8f e0       	ldi	r24, 0x0F	; 15
    25ca:	60 e0       	ldi	r22, 0x00	; 0
    25cc:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
    25d0:	44 c2       	rjmp	.+1160   	; 0x2a5a <Seven_seg_vidDisplay+0x690>
			break;

		case 5:
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_A,  DIO_u8HIGH);
    25d2:	88 e0       	ldi	r24, 0x08	; 8
    25d4:	61 e0       	ldi	r22, 0x01	; 1
    25d6:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_B,  DIO_u8LOW);
    25da:	89 e0       	ldi	r24, 0x09	; 9
    25dc:	60 e0       	ldi	r22, 0x00	; 0
    25de:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_C,  DIO_u8HIGH);
    25e2:	8a e0       	ldi	r24, 0x0A	; 10
    25e4:	61 e0       	ldi	r22, 0x01	; 1
    25e6:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_D,  DIO_u8HIGH);
    25ea:	8b e0       	ldi	r24, 0x0B	; 11
    25ec:	61 e0       	ldi	r22, 0x01	; 1
    25ee:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_E,  DIO_u8LOW);
    25f2:	8c e0       	ldi	r24, 0x0C	; 12
    25f4:	60 e0       	ldi	r22, 0x00	; 0
    25f6:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_F,  DIO_u8HIGH);
    25fa:	8d e0       	ldi	r24, 0x0D	; 13
    25fc:	61 e0       	ldi	r22, 0x01	; 1
    25fe:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_G,  DIO_u8HIGH);
    2602:	8e e0       	ldi	r24, 0x0E	; 14
    2604:	61 e0       	ldi	r22, 0x01	; 1
    2606:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_DOT,DIO_u8LOW);
    260a:	8f e0       	ldi	r24, 0x0F	; 15
    260c:	60 e0       	ldi	r22, 0x00	; 0
    260e:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
    2612:	23 c2       	rjmp	.+1094   	; 0x2a5a <Seven_seg_vidDisplay+0x690>
			break;

		case 6:
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_A,  DIO_u8HIGH);
    2614:	88 e0       	ldi	r24, 0x08	; 8
    2616:	61 e0       	ldi	r22, 0x01	; 1
    2618:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_B,  DIO_u8LOW);
    261c:	89 e0       	ldi	r24, 0x09	; 9
    261e:	60 e0       	ldi	r22, 0x00	; 0
    2620:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_C,  DIO_u8HIGH);
    2624:	8a e0       	ldi	r24, 0x0A	; 10
    2626:	61 e0       	ldi	r22, 0x01	; 1
    2628:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_D,  DIO_u8HIGH);
    262c:	8b e0       	ldi	r24, 0x0B	; 11
    262e:	61 e0       	ldi	r22, 0x01	; 1
    2630:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_E,  DIO_u8HIGH);
    2634:	8c e0       	ldi	r24, 0x0C	; 12
    2636:	61 e0       	ldi	r22, 0x01	; 1
    2638:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_F,  DIO_u8HIGH);
    263c:	8d e0       	ldi	r24, 0x0D	; 13
    263e:	61 e0       	ldi	r22, 0x01	; 1
    2640:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_G,  DIO_u8HIGH);
    2644:	8e e0       	ldi	r24, 0x0E	; 14
    2646:	61 e0       	ldi	r22, 0x01	; 1
    2648:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_DOT,DIO_u8LOW);
    264c:	8f e0       	ldi	r24, 0x0F	; 15
    264e:	60 e0       	ldi	r22, 0x00	; 0
    2650:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
    2654:	02 c2       	rjmp	.+1028   	; 0x2a5a <Seven_seg_vidDisplay+0x690>
			break;

		case 7:
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_A,  DIO_u8HIGH);
    2656:	88 e0       	ldi	r24, 0x08	; 8
    2658:	61 e0       	ldi	r22, 0x01	; 1
    265a:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_B,  DIO_u8HIGH);
    265e:	89 e0       	ldi	r24, 0x09	; 9
    2660:	61 e0       	ldi	r22, 0x01	; 1
    2662:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_C,  DIO_u8HIGH);
    2666:	8a e0       	ldi	r24, 0x0A	; 10
    2668:	61 e0       	ldi	r22, 0x01	; 1
    266a:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_D,  DIO_u8LOW);
    266e:	8b e0       	ldi	r24, 0x0B	; 11
    2670:	60 e0       	ldi	r22, 0x00	; 0
    2672:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_E,  DIO_u8LOW);
    2676:	8c e0       	ldi	r24, 0x0C	; 12
    2678:	60 e0       	ldi	r22, 0x00	; 0
    267a:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_F,  DIO_u8LOW);
    267e:	8d e0       	ldi	r24, 0x0D	; 13
    2680:	60 e0       	ldi	r22, 0x00	; 0
    2682:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_G,  DIO_u8LOW);
    2686:	8e e0       	ldi	r24, 0x0E	; 14
    2688:	60 e0       	ldi	r22, 0x00	; 0
    268a:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_DOT,DIO_u8LOW);
    268e:	8f e0       	ldi	r24, 0x0F	; 15
    2690:	60 e0       	ldi	r22, 0x00	; 0
    2692:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
    2696:	e1 c1       	rjmp	.+962    	; 0x2a5a <Seven_seg_vidDisplay+0x690>
			break;

		case 8:
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_A,  DIO_u8HIGH);
    2698:	88 e0       	ldi	r24, 0x08	; 8
    269a:	61 e0       	ldi	r22, 0x01	; 1
    269c:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_B,  DIO_u8HIGH);
    26a0:	89 e0       	ldi	r24, 0x09	; 9
    26a2:	61 e0       	ldi	r22, 0x01	; 1
    26a4:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_C,  DIO_u8HIGH);
    26a8:	8a e0       	ldi	r24, 0x0A	; 10
    26aa:	61 e0       	ldi	r22, 0x01	; 1
    26ac:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_D,  DIO_u8HIGH);
    26b0:	8b e0       	ldi	r24, 0x0B	; 11
    26b2:	61 e0       	ldi	r22, 0x01	; 1
    26b4:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_E,  DIO_u8HIGH);
    26b8:	8c e0       	ldi	r24, 0x0C	; 12
    26ba:	61 e0       	ldi	r22, 0x01	; 1
    26bc:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_F,  DIO_u8HIGH);
    26c0:	8d e0       	ldi	r24, 0x0D	; 13
    26c2:	61 e0       	ldi	r22, 0x01	; 1
    26c4:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_G,  DIO_u8HIGH);
    26c8:	8e e0       	ldi	r24, 0x0E	; 14
    26ca:	61 e0       	ldi	r22, 0x01	; 1
    26cc:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_DOT,DIO_u8LOW);
    26d0:	8f e0       	ldi	r24, 0x0F	; 15
    26d2:	60 e0       	ldi	r22, 0x00	; 0
    26d4:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
    26d8:	c0 c1       	rjmp	.+896    	; 0x2a5a <Seven_seg_vidDisplay+0x690>
			break;

		case 9:
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_A,  DIO_u8HIGH);
    26da:	88 e0       	ldi	r24, 0x08	; 8
    26dc:	61 e0       	ldi	r22, 0x01	; 1
    26de:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_B,  DIO_u8HIGH);
    26e2:	89 e0       	ldi	r24, 0x09	; 9
    26e4:	61 e0       	ldi	r22, 0x01	; 1
    26e6:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_C,  DIO_u8HIGH);
    26ea:	8a e0       	ldi	r24, 0x0A	; 10
    26ec:	61 e0       	ldi	r22, 0x01	; 1
    26ee:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_D,  DIO_u8HIGH);
    26f2:	8b e0       	ldi	r24, 0x0B	; 11
    26f4:	61 e0       	ldi	r22, 0x01	; 1
    26f6:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_E,  DIO_u8LOW);
    26fa:	8c e0       	ldi	r24, 0x0C	; 12
    26fc:	60 e0       	ldi	r22, 0x00	; 0
    26fe:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_F,  DIO_u8HIGH);
    2702:	8d e0       	ldi	r24, 0x0D	; 13
    2704:	61 e0       	ldi	r22, 0x01	; 1
    2706:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_G,  DIO_u8HIGH);
    270a:	8e e0       	ldi	r24, 0x0E	; 14
    270c:	61 e0       	ldi	r22, 0x01	; 1
    270e:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Right_u8PIN_DOT,DIO_u8LOW);
    2712:	8f e0       	ldi	r24, 0x0F	; 15
    2714:	60 e0       	ldi	r22, 0x00	; 0
    2716:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
    271a:	9f c1       	rjmp	.+830    	; 0x2a5a <Seven_seg_vidDisplay+0x690>
			break;
		}
	}

	else if (id==LEFT)
    271c:	89 81       	ldd	r24, Y+1	; 0x01
    271e:	82 30       	cpi	r24, 0x02	; 2
    2720:	09 f0       	breq	.+2      	; 0x2724 <Seven_seg_vidDisplay+0x35a>
    2722:	9b c1       	rjmp	.+822    	; 0x2a5a <Seven_seg_vidDisplay+0x690>
	{
		switch(num)
    2724:	8a 81       	ldd	r24, Y+2	; 0x02
    2726:	28 2f       	mov	r18, r24
    2728:	30 e0       	ldi	r19, 0x00	; 0
    272a:	3c 83       	std	Y+4, r19	; 0x04
    272c:	2b 83       	std	Y+3, r18	; 0x03
    272e:	8b 81       	ldd	r24, Y+3	; 0x03
    2730:	9c 81       	ldd	r25, Y+4	; 0x04
    2732:	84 30       	cpi	r24, 0x04	; 4
    2734:	91 05       	cpc	r25, r1
    2736:	09 f4       	brne	.+2      	; 0x273a <Seven_seg_vidDisplay+0x370>
    2738:	cb c0       	rjmp	.+406    	; 0x28d0 <Seven_seg_vidDisplay+0x506>
    273a:	2b 81       	ldd	r18, Y+3	; 0x03
    273c:	3c 81       	ldd	r19, Y+4	; 0x04
    273e:	25 30       	cpi	r18, 0x05	; 5
    2740:	31 05       	cpc	r19, r1
    2742:	ec f4       	brge	.+58     	; 0x277e <Seven_seg_vidDisplay+0x3b4>
    2744:	8b 81       	ldd	r24, Y+3	; 0x03
    2746:	9c 81       	ldd	r25, Y+4	; 0x04
    2748:	81 30       	cpi	r24, 0x01	; 1
    274a:	91 05       	cpc	r25, r1
    274c:	09 f4       	brne	.+2      	; 0x2750 <Seven_seg_vidDisplay+0x386>
    274e:	5d c0       	rjmp	.+186    	; 0x280a <Seven_seg_vidDisplay+0x440>
    2750:	2b 81       	ldd	r18, Y+3	; 0x03
    2752:	3c 81       	ldd	r19, Y+4	; 0x04
    2754:	22 30       	cpi	r18, 0x02	; 2
    2756:	31 05       	cpc	r19, r1
    2758:	2c f4       	brge	.+10     	; 0x2764 <Seven_seg_vidDisplay+0x39a>
    275a:	8b 81       	ldd	r24, Y+3	; 0x03
    275c:	9c 81       	ldd	r25, Y+4	; 0x04
    275e:	00 97       	sbiw	r24, 0x00	; 0
    2760:	99 f1       	breq	.+102    	; 0x27c8 <Seven_seg_vidDisplay+0x3fe>
    2762:	7b c1       	rjmp	.+758    	; 0x2a5a <Seven_seg_vidDisplay+0x690>
    2764:	2b 81       	ldd	r18, Y+3	; 0x03
    2766:	3c 81       	ldd	r19, Y+4	; 0x04
    2768:	22 30       	cpi	r18, 0x02	; 2
    276a:	31 05       	cpc	r19, r1
    276c:	09 f4       	brne	.+2      	; 0x2770 <Seven_seg_vidDisplay+0x3a6>
    276e:	6e c0       	rjmp	.+220    	; 0x284c <Seven_seg_vidDisplay+0x482>
    2770:	8b 81       	ldd	r24, Y+3	; 0x03
    2772:	9c 81       	ldd	r25, Y+4	; 0x04
    2774:	83 30       	cpi	r24, 0x03	; 3
    2776:	91 05       	cpc	r25, r1
    2778:	09 f4       	brne	.+2      	; 0x277c <Seven_seg_vidDisplay+0x3b2>
    277a:	89 c0       	rjmp	.+274    	; 0x288e <Seven_seg_vidDisplay+0x4c4>
    277c:	6e c1       	rjmp	.+732    	; 0x2a5a <Seven_seg_vidDisplay+0x690>
    277e:	2b 81       	ldd	r18, Y+3	; 0x03
    2780:	3c 81       	ldd	r19, Y+4	; 0x04
    2782:	27 30       	cpi	r18, 0x07	; 7
    2784:	31 05       	cpc	r19, r1
    2786:	09 f4       	brne	.+2      	; 0x278a <Seven_seg_vidDisplay+0x3c0>
    2788:	06 c1       	rjmp	.+524    	; 0x2996 <Seven_seg_vidDisplay+0x5cc>
    278a:	8b 81       	ldd	r24, Y+3	; 0x03
    278c:	9c 81       	ldd	r25, Y+4	; 0x04
    278e:	88 30       	cpi	r24, 0x08	; 8
    2790:	91 05       	cpc	r25, r1
    2792:	6c f4       	brge	.+26     	; 0x27ae <Seven_seg_vidDisplay+0x3e4>
    2794:	2b 81       	ldd	r18, Y+3	; 0x03
    2796:	3c 81       	ldd	r19, Y+4	; 0x04
    2798:	25 30       	cpi	r18, 0x05	; 5
    279a:	31 05       	cpc	r19, r1
    279c:	09 f4       	brne	.+2      	; 0x27a0 <Seven_seg_vidDisplay+0x3d6>
    279e:	b9 c0       	rjmp	.+370    	; 0x2912 <Seven_seg_vidDisplay+0x548>
    27a0:	8b 81       	ldd	r24, Y+3	; 0x03
    27a2:	9c 81       	ldd	r25, Y+4	; 0x04
    27a4:	86 30       	cpi	r24, 0x06	; 6
    27a6:	91 05       	cpc	r25, r1
    27a8:	09 f4       	brne	.+2      	; 0x27ac <Seven_seg_vidDisplay+0x3e2>
    27aa:	d4 c0       	rjmp	.+424    	; 0x2954 <Seven_seg_vidDisplay+0x58a>
    27ac:	56 c1       	rjmp	.+684    	; 0x2a5a <Seven_seg_vidDisplay+0x690>
    27ae:	2b 81       	ldd	r18, Y+3	; 0x03
    27b0:	3c 81       	ldd	r19, Y+4	; 0x04
    27b2:	28 30       	cpi	r18, 0x08	; 8
    27b4:	31 05       	cpc	r19, r1
    27b6:	09 f4       	brne	.+2      	; 0x27ba <Seven_seg_vidDisplay+0x3f0>
    27b8:	0f c1       	rjmp	.+542    	; 0x29d8 <Seven_seg_vidDisplay+0x60e>
    27ba:	8b 81       	ldd	r24, Y+3	; 0x03
    27bc:	9c 81       	ldd	r25, Y+4	; 0x04
    27be:	89 30       	cpi	r24, 0x09	; 9
    27c0:	91 05       	cpc	r25, r1
    27c2:	09 f4       	brne	.+2      	; 0x27c6 <Seven_seg_vidDisplay+0x3fc>
    27c4:	2a c1       	rjmp	.+596    	; 0x2a1a <Seven_seg_vidDisplay+0x650>
    27c6:	49 c1       	rjmp	.+658    	; 0x2a5a <Seven_seg_vidDisplay+0x690>
		{
		case 0:
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_A,  DIO_u8HIGH);
    27c8:	80 e1       	ldi	r24, 0x10	; 16
    27ca:	61 e0       	ldi	r22, 0x01	; 1
    27cc:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_B,  DIO_u8HIGH);
    27d0:	81 e1       	ldi	r24, 0x11	; 17
    27d2:	61 e0       	ldi	r22, 0x01	; 1
    27d4:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_C,  DIO_u8HIGH);
    27d8:	82 e1       	ldi	r24, 0x12	; 18
    27da:	61 e0       	ldi	r22, 0x01	; 1
    27dc:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_D,  DIO_u8HIGH);
    27e0:	83 e1       	ldi	r24, 0x13	; 19
    27e2:	61 e0       	ldi	r22, 0x01	; 1
    27e4:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_E,  DIO_u8HIGH);
    27e8:	84 e1       	ldi	r24, 0x14	; 20
    27ea:	61 e0       	ldi	r22, 0x01	; 1
    27ec:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_F,  DIO_u8HIGH);
    27f0:	85 e1       	ldi	r24, 0x15	; 21
    27f2:	61 e0       	ldi	r22, 0x01	; 1
    27f4:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_G,  DIO_u8LOW);
    27f8:	86 e1       	ldi	r24, 0x16	; 22
    27fa:	60 e0       	ldi	r22, 0x00	; 0
    27fc:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_DOT,DIO_u8LOW);
    2800:	87 e1       	ldi	r24, 0x17	; 23
    2802:	60 e0       	ldi	r22, 0x00	; 0
    2804:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
    2808:	28 c1       	rjmp	.+592    	; 0x2a5a <Seven_seg_vidDisplay+0x690>
			break;

		case 1:
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_A,  DIO_u8LOW);
    280a:	80 e1       	ldi	r24, 0x10	; 16
    280c:	60 e0       	ldi	r22, 0x00	; 0
    280e:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_B,  DIO_u8HIGH);
    2812:	81 e1       	ldi	r24, 0x11	; 17
    2814:	61 e0       	ldi	r22, 0x01	; 1
    2816:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_C,  DIO_u8HIGH);
    281a:	82 e1       	ldi	r24, 0x12	; 18
    281c:	61 e0       	ldi	r22, 0x01	; 1
    281e:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_D,  DIO_u8LOW);
    2822:	83 e1       	ldi	r24, 0x13	; 19
    2824:	60 e0       	ldi	r22, 0x00	; 0
    2826:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_E,  DIO_u8LOW);
    282a:	84 e1       	ldi	r24, 0x14	; 20
    282c:	60 e0       	ldi	r22, 0x00	; 0
    282e:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_F,  DIO_u8LOW);
    2832:	85 e1       	ldi	r24, 0x15	; 21
    2834:	60 e0       	ldi	r22, 0x00	; 0
    2836:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_G,  DIO_u8LOW);
    283a:	86 e1       	ldi	r24, 0x16	; 22
    283c:	60 e0       	ldi	r22, 0x00	; 0
    283e:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_DOT,DIO_u8LOW);
    2842:	87 e1       	ldi	r24, 0x17	; 23
    2844:	60 e0       	ldi	r22, 0x00	; 0
    2846:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
    284a:	07 c1       	rjmp	.+526    	; 0x2a5a <Seven_seg_vidDisplay+0x690>
			break;

		case 2:
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_A,  DIO_u8HIGH);
    284c:	80 e1       	ldi	r24, 0x10	; 16
    284e:	61 e0       	ldi	r22, 0x01	; 1
    2850:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_B,  DIO_u8HIGH);
    2854:	81 e1       	ldi	r24, 0x11	; 17
    2856:	61 e0       	ldi	r22, 0x01	; 1
    2858:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_C,  DIO_u8LOW);
    285c:	82 e1       	ldi	r24, 0x12	; 18
    285e:	60 e0       	ldi	r22, 0x00	; 0
    2860:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_D,  DIO_u8HIGH);
    2864:	83 e1       	ldi	r24, 0x13	; 19
    2866:	61 e0       	ldi	r22, 0x01	; 1
    2868:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_E,  DIO_u8HIGH);
    286c:	84 e1       	ldi	r24, 0x14	; 20
    286e:	61 e0       	ldi	r22, 0x01	; 1
    2870:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_F,  DIO_u8LOW);
    2874:	85 e1       	ldi	r24, 0x15	; 21
    2876:	60 e0       	ldi	r22, 0x00	; 0
    2878:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_G,  DIO_u8HIGH);
    287c:	86 e1       	ldi	r24, 0x16	; 22
    287e:	61 e0       	ldi	r22, 0x01	; 1
    2880:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_DOT,DIO_u8LOW);
    2884:	87 e1       	ldi	r24, 0x17	; 23
    2886:	60 e0       	ldi	r22, 0x00	; 0
    2888:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
    288c:	e6 c0       	rjmp	.+460    	; 0x2a5a <Seven_seg_vidDisplay+0x690>
			break;

		case 3:
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_A,  DIO_u8HIGH);
    288e:	80 e1       	ldi	r24, 0x10	; 16
    2890:	61 e0       	ldi	r22, 0x01	; 1
    2892:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_B,  DIO_u8HIGH);
    2896:	81 e1       	ldi	r24, 0x11	; 17
    2898:	61 e0       	ldi	r22, 0x01	; 1
    289a:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_C,  DIO_u8HIGH);
    289e:	82 e1       	ldi	r24, 0x12	; 18
    28a0:	61 e0       	ldi	r22, 0x01	; 1
    28a2:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_D,  DIO_u8HIGH);
    28a6:	83 e1       	ldi	r24, 0x13	; 19
    28a8:	61 e0       	ldi	r22, 0x01	; 1
    28aa:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_E,  DIO_u8LOW);
    28ae:	84 e1       	ldi	r24, 0x14	; 20
    28b0:	60 e0       	ldi	r22, 0x00	; 0
    28b2:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_F,  DIO_u8LOW);
    28b6:	85 e1       	ldi	r24, 0x15	; 21
    28b8:	60 e0       	ldi	r22, 0x00	; 0
    28ba:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_G,  DIO_u8HIGH);
    28be:	86 e1       	ldi	r24, 0x16	; 22
    28c0:	61 e0       	ldi	r22, 0x01	; 1
    28c2:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_DOT,DIO_u8LOW);
    28c6:	87 e1       	ldi	r24, 0x17	; 23
    28c8:	60 e0       	ldi	r22, 0x00	; 0
    28ca:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
    28ce:	c5 c0       	rjmp	.+394    	; 0x2a5a <Seven_seg_vidDisplay+0x690>
			break;

		case 4:
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_A,  DIO_u8LOW);
    28d0:	80 e1       	ldi	r24, 0x10	; 16
    28d2:	60 e0       	ldi	r22, 0x00	; 0
    28d4:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_B,  DIO_u8HIGH);
    28d8:	81 e1       	ldi	r24, 0x11	; 17
    28da:	61 e0       	ldi	r22, 0x01	; 1
    28dc:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_C,  DIO_u8HIGH);
    28e0:	82 e1       	ldi	r24, 0x12	; 18
    28e2:	61 e0       	ldi	r22, 0x01	; 1
    28e4:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_D,  DIO_u8LOW);
    28e8:	83 e1       	ldi	r24, 0x13	; 19
    28ea:	60 e0       	ldi	r22, 0x00	; 0
    28ec:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_E,  DIO_u8LOW);
    28f0:	84 e1       	ldi	r24, 0x14	; 20
    28f2:	60 e0       	ldi	r22, 0x00	; 0
    28f4:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_F,  DIO_u8HIGH);
    28f8:	85 e1       	ldi	r24, 0x15	; 21
    28fa:	61 e0       	ldi	r22, 0x01	; 1
    28fc:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_G,  DIO_u8HIGH);
    2900:	86 e1       	ldi	r24, 0x16	; 22
    2902:	61 e0       	ldi	r22, 0x01	; 1
    2904:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_DOT,DIO_u8LOW);
    2908:	87 e1       	ldi	r24, 0x17	; 23
    290a:	60 e0       	ldi	r22, 0x00	; 0
    290c:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
    2910:	a4 c0       	rjmp	.+328    	; 0x2a5a <Seven_seg_vidDisplay+0x690>
			break;

		case 5:
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_A,  DIO_u8HIGH);
    2912:	80 e1       	ldi	r24, 0x10	; 16
    2914:	61 e0       	ldi	r22, 0x01	; 1
    2916:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_B,  DIO_u8LOW);
    291a:	81 e1       	ldi	r24, 0x11	; 17
    291c:	60 e0       	ldi	r22, 0x00	; 0
    291e:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_C,  DIO_u8HIGH);
    2922:	82 e1       	ldi	r24, 0x12	; 18
    2924:	61 e0       	ldi	r22, 0x01	; 1
    2926:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_D,  DIO_u8HIGH);
    292a:	83 e1       	ldi	r24, 0x13	; 19
    292c:	61 e0       	ldi	r22, 0x01	; 1
    292e:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_E,  DIO_u8LOW);
    2932:	84 e1       	ldi	r24, 0x14	; 20
    2934:	60 e0       	ldi	r22, 0x00	; 0
    2936:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_F,  DIO_u8HIGH);
    293a:	85 e1       	ldi	r24, 0x15	; 21
    293c:	61 e0       	ldi	r22, 0x01	; 1
    293e:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_G,  DIO_u8HIGH);
    2942:	86 e1       	ldi	r24, 0x16	; 22
    2944:	61 e0       	ldi	r22, 0x01	; 1
    2946:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_DOT,DIO_u8LOW);
    294a:	87 e1       	ldi	r24, 0x17	; 23
    294c:	60 e0       	ldi	r22, 0x00	; 0
    294e:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
    2952:	83 c0       	rjmp	.+262    	; 0x2a5a <Seven_seg_vidDisplay+0x690>
			break;

		case 6:
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_A,  DIO_u8HIGH);
    2954:	80 e1       	ldi	r24, 0x10	; 16
    2956:	61 e0       	ldi	r22, 0x01	; 1
    2958:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_B,  DIO_u8LOW);
    295c:	81 e1       	ldi	r24, 0x11	; 17
    295e:	60 e0       	ldi	r22, 0x00	; 0
    2960:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_C,  DIO_u8HIGH);
    2964:	82 e1       	ldi	r24, 0x12	; 18
    2966:	61 e0       	ldi	r22, 0x01	; 1
    2968:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_D,  DIO_u8HIGH);
    296c:	83 e1       	ldi	r24, 0x13	; 19
    296e:	61 e0       	ldi	r22, 0x01	; 1
    2970:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_E,  DIO_u8HIGH);
    2974:	84 e1       	ldi	r24, 0x14	; 20
    2976:	61 e0       	ldi	r22, 0x01	; 1
    2978:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_F,  DIO_u8HIGH);
    297c:	85 e1       	ldi	r24, 0x15	; 21
    297e:	61 e0       	ldi	r22, 0x01	; 1
    2980:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_G,  DIO_u8HIGH);
    2984:	86 e1       	ldi	r24, 0x16	; 22
    2986:	61 e0       	ldi	r22, 0x01	; 1
    2988:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_DOT,DIO_u8LOW);
    298c:	87 e1       	ldi	r24, 0x17	; 23
    298e:	60 e0       	ldi	r22, 0x00	; 0
    2990:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
    2994:	62 c0       	rjmp	.+196    	; 0x2a5a <Seven_seg_vidDisplay+0x690>
			break;

		case 7:
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_A,  DIO_u8HIGH);
    2996:	80 e1       	ldi	r24, 0x10	; 16
    2998:	61 e0       	ldi	r22, 0x01	; 1
    299a:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_B,  DIO_u8HIGH);
    299e:	81 e1       	ldi	r24, 0x11	; 17
    29a0:	61 e0       	ldi	r22, 0x01	; 1
    29a2:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_C,  DIO_u8HIGH);
    29a6:	82 e1       	ldi	r24, 0x12	; 18
    29a8:	61 e0       	ldi	r22, 0x01	; 1
    29aa:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_D,  DIO_u8LOW);
    29ae:	83 e1       	ldi	r24, 0x13	; 19
    29b0:	60 e0       	ldi	r22, 0x00	; 0
    29b2:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_E,  DIO_u8LOW);
    29b6:	84 e1       	ldi	r24, 0x14	; 20
    29b8:	60 e0       	ldi	r22, 0x00	; 0
    29ba:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_F,  DIO_u8LOW);
    29be:	85 e1       	ldi	r24, 0x15	; 21
    29c0:	60 e0       	ldi	r22, 0x00	; 0
    29c2:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_G,  DIO_u8LOW);
    29c6:	86 e1       	ldi	r24, 0x16	; 22
    29c8:	60 e0       	ldi	r22, 0x00	; 0
    29ca:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_DOT,DIO_u8LOW);
    29ce:	87 e1       	ldi	r24, 0x17	; 23
    29d0:	60 e0       	ldi	r22, 0x00	; 0
    29d2:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
    29d6:	41 c0       	rjmp	.+130    	; 0x2a5a <Seven_seg_vidDisplay+0x690>
			break;

		case 8:
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_A,  DIO_u8HIGH);
    29d8:	80 e1       	ldi	r24, 0x10	; 16
    29da:	61 e0       	ldi	r22, 0x01	; 1
    29dc:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_B,  DIO_u8HIGH);
    29e0:	81 e1       	ldi	r24, 0x11	; 17
    29e2:	61 e0       	ldi	r22, 0x01	; 1
    29e4:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_C,  DIO_u8HIGH);
    29e8:	82 e1       	ldi	r24, 0x12	; 18
    29ea:	61 e0       	ldi	r22, 0x01	; 1
    29ec:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_D,  DIO_u8HIGH);
    29f0:	83 e1       	ldi	r24, 0x13	; 19
    29f2:	61 e0       	ldi	r22, 0x01	; 1
    29f4:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_E,  DIO_u8HIGH);
    29f8:	84 e1       	ldi	r24, 0x14	; 20
    29fa:	61 e0       	ldi	r22, 0x01	; 1
    29fc:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_F,  DIO_u8HIGH);
    2a00:	85 e1       	ldi	r24, 0x15	; 21
    2a02:	61 e0       	ldi	r22, 0x01	; 1
    2a04:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_G,  DIO_u8HIGH);
    2a08:	86 e1       	ldi	r24, 0x16	; 22
    2a0a:	61 e0       	ldi	r22, 0x01	; 1
    2a0c:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_DOT,DIO_u8LOW);
    2a10:	87 e1       	ldi	r24, 0x17	; 23
    2a12:	60 e0       	ldi	r22, 0x00	; 0
    2a14:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
    2a18:	20 c0       	rjmp	.+64     	; 0x2a5a <Seven_seg_vidDisplay+0x690>
			break;

		case 9:
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_A,  DIO_u8HIGH);
    2a1a:	80 e1       	ldi	r24, 0x10	; 16
    2a1c:	61 e0       	ldi	r22, 0x01	; 1
    2a1e:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_B,  DIO_u8HIGH);
    2a22:	81 e1       	ldi	r24, 0x11	; 17
    2a24:	61 e0       	ldi	r22, 0x01	; 1
    2a26:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_C,  DIO_u8HIGH);
    2a2a:	82 e1       	ldi	r24, 0x12	; 18
    2a2c:	61 e0       	ldi	r22, 0x01	; 1
    2a2e:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_D,  DIO_u8HIGH);
    2a32:	83 e1       	ldi	r24, 0x13	; 19
    2a34:	61 e0       	ldi	r22, 0x01	; 1
    2a36:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_E,  DIO_u8LOW);
    2a3a:	84 e1       	ldi	r24, 0x14	; 20
    2a3c:	60 e0       	ldi	r22, 0x00	; 0
    2a3e:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_F,  DIO_u8HIGH);
    2a42:	85 e1       	ldi	r24, 0x15	; 21
    2a44:	61 e0       	ldi	r22, 0x01	; 1
    2a46:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_G,  DIO_u8HIGH);
    2a4a:	86 e1       	ldi	r24, 0x16	; 22
    2a4c:	61 e0       	ldi	r22, 0x01	; 1
    2a4e:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			Dio_vidSetPinVal(SEVEN_SEG_Left_u8PIN_DOT,DIO_u8LOW);
    2a52:	87 e1       	ldi	r24, 0x17	; 23
    2a54:	60 e0       	ldi	r22, 0x00	; 0
    2a56:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
			break;
		}
	}

}
    2a5a:	26 96       	adiw	r28, 0x06	; 6
    2a5c:	0f b6       	in	r0, 0x3f	; 63
    2a5e:	f8 94       	cli
    2a60:	de bf       	out	0x3e, r29	; 62
    2a62:	0f be       	out	0x3f, r0	; 63
    2a64:	cd bf       	out	0x3d, r28	; 61
    2a66:	cf 91       	pop	r28
    2a68:	df 91       	pop	r29
    2a6a:	08 95       	ret

00002a6c <main>:
#define F_CPU 8000000
#include <util/delay.h>
#include <avr/interrupt.h>

int main(void)
{
    2a6c:	df 93       	push	r29
    2a6e:	cf 93       	push	r28
    2a70:	cd b7       	in	r28, 0x3d	; 61
    2a72:	de b7       	in	r29, 0x3e	; 62
    2a74:	28 97       	sbiw	r28, 0x08	; 8
    2a76:	0f b6       	in	r0, 0x3f	; 63
    2a78:	f8 94       	cli
    2a7a:	de bf       	out	0x3e, r29	; 62
    2a7c:	0f be       	out	0x3f, r0	; 63
    2a7e:	cd bf       	out	0x3d, r28	; 61


	//lab 3 for lec 8

	//LDR value =(R*5V-R*analog)/analog  where R=5kohm (1st one)
	ADC_vidInit();
    2a80:	0e 94 0f 07 	call	0xe1e	; 0xe1e <ADC_vidInit>
	u32 digital=ADC_u16ConvertChannel(0);
    2a84:	80 e0       	ldi	r24, 0x00	; 0
    2a86:	0e 94 6a 07 	call	0xed4	; 0xed4 <ADC_u16ConvertChannel>
    2a8a:	98 87       	std	Y+8, r25	; 0x08
    2a8c:	8f 83       	std	Y+7, r24	; 0x07
	f32 analog=(digital*5000)/1024;
    2a8e:	2f 81       	ldd	r18, Y+7	; 0x07
    2a90:	38 85       	ldd	r19, Y+8	; 0x08
    2a92:	88 e8       	ldi	r24, 0x88	; 136
    2a94:	93 e1       	ldi	r25, 0x13	; 19
    2a96:	ac 01       	movw	r20, r24
    2a98:	24 9f       	mul	r18, r20
    2a9a:	c0 01       	movw	r24, r0
    2a9c:	25 9f       	mul	r18, r21
    2a9e:	90 0d       	add	r25, r0
    2aa0:	34 9f       	mul	r19, r20
    2aa2:	90 0d       	add	r25, r0
    2aa4:	11 24       	eor	r1, r1
    2aa6:	89 2f       	mov	r24, r25
    2aa8:	99 27       	eor	r25, r25
    2aaa:	86 95       	lsr	r24
    2aac:	86 95       	lsr	r24
    2aae:	cc 01       	movw	r24, r24
    2ab0:	a0 e0       	ldi	r26, 0x00	; 0
    2ab2:	b0 e0       	ldi	r27, 0x00	; 0
    2ab4:	bc 01       	movw	r22, r24
    2ab6:	cd 01       	movw	r24, r26
    2ab8:	0e 94 a1 04 	call	0x942	; 0x942 <__floatunsisf>
    2abc:	dc 01       	movw	r26, r24
    2abe:	cb 01       	movw	r24, r22
    2ac0:	8b 83       	std	Y+3, r24	; 0x03
    2ac2:	9c 83       	std	Y+4, r25	; 0x04
    2ac4:	ad 83       	std	Y+5, r26	; 0x05
    2ac6:	be 83       	std	Y+6, r27	; 0x06
	u32 LDR=(5000*5-5000*analog)/analog;
    2ac8:	6b 81       	ldd	r22, Y+3	; 0x03
    2aca:	7c 81       	ldd	r23, Y+4	; 0x04
    2acc:	8d 81       	ldd	r24, Y+5	; 0x05
    2ace:	9e 81       	ldd	r25, Y+6	; 0x06
    2ad0:	20 e0       	ldi	r18, 0x00	; 0
    2ad2:	30 e4       	ldi	r19, 0x40	; 64
    2ad4:	4c e9       	ldi	r20, 0x9C	; 156
    2ad6:	55 ec       	ldi	r21, 0xC5	; 197
    2ad8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2adc:	dc 01       	movw	r26, r24
    2ade:	cb 01       	movw	r24, r22
    2ae0:	bc 01       	movw	r22, r24
    2ae2:	cd 01       	movw	r24, r26
    2ae4:	20 e0       	ldi	r18, 0x00	; 0
    2ae6:	30 e5       	ldi	r19, 0x50	; 80
    2ae8:	43 ec       	ldi	r20, 0xC3	; 195
    2aea:	56 e4       	ldi	r21, 0x46	; 70
    2aec:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <__addsf3>
    2af0:	dc 01       	movw	r26, r24
    2af2:	cb 01       	movw	r24, r22
    2af4:	bc 01       	movw	r22, r24
    2af6:	cd 01       	movw	r24, r26
    2af8:	2b 81       	ldd	r18, Y+3	; 0x03
    2afa:	3c 81       	ldd	r19, Y+4	; 0x04
    2afc:	4d 81       	ldd	r20, Y+5	; 0x05
    2afe:	5e 81       	ldd	r21, Y+6	; 0x06
    2b00:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    2b04:	dc 01       	movw	r26, r24
    2b06:	cb 01       	movw	r24, r22
    2b08:	bc 01       	movw	r22, r24
    2b0a:	cd 01       	movw	r24, r26
    2b0c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2b10:	dc 01       	movw	r26, r24
    2b12:	cb 01       	movw	r24, r22
    2b14:	9a 83       	std	Y+2, r25	; 0x02
    2b16:	89 83       	std	Y+1, r24	; 0x01
	Dio_vidSetPinDir(DIO_u8PIN_31,DIO_u8OUTPUT);
    2b18:	8f e1       	ldi	r24, 0x1F	; 31
    2b1a:	61 e0       	ldi	r22, 0x01	; 1
    2b1c:	0e 94 ab 07 	call	0xf56	; 0xf56 <Dio_vidSetPinDir>
	while(1)
	{
		digital=ADC_u16ConvertChannel(0);
    2b20:	80 e0       	ldi	r24, 0x00	; 0
    2b22:	0e 94 6a 07 	call	0xed4	; 0xed4 <ADC_u16ConvertChannel>
    2b26:	98 87       	std	Y+8, r25	; 0x08
    2b28:	8f 83       	std	Y+7, r24	; 0x07
		analog=(digital*5)/1024;
    2b2a:	2f 81       	ldd	r18, Y+7	; 0x07
    2b2c:	38 85       	ldd	r19, Y+8	; 0x08
    2b2e:	c9 01       	movw	r24, r18
    2b30:	88 0f       	add	r24, r24
    2b32:	99 1f       	adc	r25, r25
    2b34:	88 0f       	add	r24, r24
    2b36:	99 1f       	adc	r25, r25
    2b38:	82 0f       	add	r24, r18
    2b3a:	93 1f       	adc	r25, r19
    2b3c:	89 2f       	mov	r24, r25
    2b3e:	99 27       	eor	r25, r25
    2b40:	86 95       	lsr	r24
    2b42:	86 95       	lsr	r24
    2b44:	cc 01       	movw	r24, r24
    2b46:	a0 e0       	ldi	r26, 0x00	; 0
    2b48:	b0 e0       	ldi	r27, 0x00	; 0
    2b4a:	bc 01       	movw	r22, r24
    2b4c:	cd 01       	movw	r24, r26
    2b4e:	0e 94 a1 04 	call	0x942	; 0x942 <__floatunsisf>
    2b52:	dc 01       	movw	r26, r24
    2b54:	cb 01       	movw	r24, r22
    2b56:	8b 83       	std	Y+3, r24	; 0x03
    2b58:	9c 83       	std	Y+4, r25	; 0x04
    2b5a:	ad 83       	std	Y+5, r26	; 0x05
    2b5c:	be 83       	std	Y+6, r27	; 0x06
		LDR=(5*5000-5000*analog)/analog;
    2b5e:	6b 81       	ldd	r22, Y+3	; 0x03
    2b60:	7c 81       	ldd	r23, Y+4	; 0x04
    2b62:	8d 81       	ldd	r24, Y+5	; 0x05
    2b64:	9e 81       	ldd	r25, Y+6	; 0x06
    2b66:	20 e0       	ldi	r18, 0x00	; 0
    2b68:	30 e4       	ldi	r19, 0x40	; 64
    2b6a:	4c e9       	ldi	r20, 0x9C	; 156
    2b6c:	55 ec       	ldi	r21, 0xC5	; 197
    2b6e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2b72:	dc 01       	movw	r26, r24
    2b74:	cb 01       	movw	r24, r22
    2b76:	bc 01       	movw	r22, r24
    2b78:	cd 01       	movw	r24, r26
    2b7a:	20 e0       	ldi	r18, 0x00	; 0
    2b7c:	30 e5       	ldi	r19, 0x50	; 80
    2b7e:	43 ec       	ldi	r20, 0xC3	; 195
    2b80:	56 e4       	ldi	r21, 0x46	; 70
    2b82:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <__addsf3>
    2b86:	dc 01       	movw	r26, r24
    2b88:	cb 01       	movw	r24, r22
    2b8a:	bc 01       	movw	r22, r24
    2b8c:	cd 01       	movw	r24, r26
    2b8e:	2b 81       	ldd	r18, Y+3	; 0x03
    2b90:	3c 81       	ldd	r19, Y+4	; 0x04
    2b92:	4d 81       	ldd	r20, Y+5	; 0x05
    2b94:	5e 81       	ldd	r21, Y+6	; 0x06
    2b96:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    2b9a:	dc 01       	movw	r26, r24
    2b9c:	cb 01       	movw	r24, r22
    2b9e:	bc 01       	movw	r22, r24
    2ba0:	cd 01       	movw	r24, r26
    2ba2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2ba6:	dc 01       	movw	r26, r24
    2ba8:	cb 01       	movw	r24, r22
    2baa:	9a 83       	std	Y+2, r25	; 0x02
    2bac:	89 83       	std	Y+1, r24	; 0x01
		if(LDR>=9000)
    2bae:	89 81       	ldd	r24, Y+1	; 0x01
    2bb0:	9a 81       	ldd	r25, Y+2	; 0x02
    2bb2:	53 e2       	ldi	r21, 0x23	; 35
    2bb4:	88 32       	cpi	r24, 0x28	; 40
    2bb6:	95 07       	cpc	r25, r21
    2bb8:	28 f0       	brcs	.+10     	; 0x2bc4 <main+0x158>
		{
			Dio_vidSetPinVal(DIO_u8PIN_31,DIO_u8HIGH);
    2bba:	8f e1       	ldi	r24, 0x1F	; 31
    2bbc:	61 e0       	ldi	r22, 0x01	; 1
    2bbe:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
    2bc2:	ae cf       	rjmp	.-164    	; 0x2b20 <main+0xb4>
		}
		else
		{
			Dio_vidSetPinVal(DIO_u8PIN_31,DIO_u8LOW);
    2bc4:	8f e1       	ldi	r24, 0x1F	; 31
    2bc6:	60 e0       	ldi	r22, 0x00	; 0
    2bc8:	0e 94 96 08 	call	0x112c	; 0x112c <Dio_vidSetPinVal>
    2bcc:	a9 cf       	rjmp	.-174    	; 0x2b20 <main+0xb4>

00002bce <__vector_1>:
	return 0;
}


ISR(INT0_vect)
{
    2bce:	1f 92       	push	r1
    2bd0:	0f 92       	push	r0
    2bd2:	0f b6       	in	r0, 0x3f	; 63
    2bd4:	0f 92       	push	r0
    2bd6:	11 24       	eor	r1, r1
    2bd8:	df 93       	push	r29
    2bda:	cf 93       	push	r28
    2bdc:	cd b7       	in	r28, 0x3d	; 61
    2bde:	de b7       	in	r29, 0x3e	; 62

}
    2be0:	cf 91       	pop	r28
    2be2:	df 91       	pop	r29
    2be4:	0f 90       	pop	r0
    2be6:	0f be       	out	0x3f, r0	; 63
    2be8:	0f 90       	pop	r0
    2bea:	1f 90       	pop	r1
    2bec:	18 95       	reti

00002bee <__prologue_saves__>:
    2bee:	2f 92       	push	r2
    2bf0:	3f 92       	push	r3
    2bf2:	4f 92       	push	r4
    2bf4:	5f 92       	push	r5
    2bf6:	6f 92       	push	r6
    2bf8:	7f 92       	push	r7
    2bfa:	8f 92       	push	r8
    2bfc:	9f 92       	push	r9
    2bfe:	af 92       	push	r10
    2c00:	bf 92       	push	r11
    2c02:	cf 92       	push	r12
    2c04:	df 92       	push	r13
    2c06:	ef 92       	push	r14
    2c08:	ff 92       	push	r15
    2c0a:	0f 93       	push	r16
    2c0c:	1f 93       	push	r17
    2c0e:	cf 93       	push	r28
    2c10:	df 93       	push	r29
    2c12:	cd b7       	in	r28, 0x3d	; 61
    2c14:	de b7       	in	r29, 0x3e	; 62
    2c16:	ca 1b       	sub	r28, r26
    2c18:	db 0b       	sbc	r29, r27
    2c1a:	0f b6       	in	r0, 0x3f	; 63
    2c1c:	f8 94       	cli
    2c1e:	de bf       	out	0x3e, r29	; 62
    2c20:	0f be       	out	0x3f, r0	; 63
    2c22:	cd bf       	out	0x3d, r28	; 61
    2c24:	09 94       	ijmp

00002c26 <__epilogue_restores__>:
    2c26:	2a 88       	ldd	r2, Y+18	; 0x12
    2c28:	39 88       	ldd	r3, Y+17	; 0x11
    2c2a:	48 88       	ldd	r4, Y+16	; 0x10
    2c2c:	5f 84       	ldd	r5, Y+15	; 0x0f
    2c2e:	6e 84       	ldd	r6, Y+14	; 0x0e
    2c30:	7d 84       	ldd	r7, Y+13	; 0x0d
    2c32:	8c 84       	ldd	r8, Y+12	; 0x0c
    2c34:	9b 84       	ldd	r9, Y+11	; 0x0b
    2c36:	aa 84       	ldd	r10, Y+10	; 0x0a
    2c38:	b9 84       	ldd	r11, Y+9	; 0x09
    2c3a:	c8 84       	ldd	r12, Y+8	; 0x08
    2c3c:	df 80       	ldd	r13, Y+7	; 0x07
    2c3e:	ee 80       	ldd	r14, Y+6	; 0x06
    2c40:	fd 80       	ldd	r15, Y+5	; 0x05
    2c42:	0c 81       	ldd	r16, Y+4	; 0x04
    2c44:	1b 81       	ldd	r17, Y+3	; 0x03
    2c46:	aa 81       	ldd	r26, Y+2	; 0x02
    2c48:	b9 81       	ldd	r27, Y+1	; 0x01
    2c4a:	ce 0f       	add	r28, r30
    2c4c:	d1 1d       	adc	r29, r1
    2c4e:	0f b6       	in	r0, 0x3f	; 63
    2c50:	f8 94       	cli
    2c52:	de bf       	out	0x3e, r29	; 62
    2c54:	0f be       	out	0x3f, r0	; 63
    2c56:	cd bf       	out	0x3d, r28	; 61
    2c58:	ed 01       	movw	r28, r26
    2c5a:	08 95       	ret

00002c5c <_exit>:
    2c5c:	f8 94       	cli

00002c5e <__stop_program>:
    2c5e:	ff cf       	rjmp	.-2      	; 0x2c5e <__stop_program>
